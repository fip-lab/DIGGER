[
    "(:action remove\n  :parameters (?actor - agent ?item - entity ?state - state)\n  :precondition (and (has_state ?item ?state))\n  :effect (not (has_state ?item ?state))",
    "(:action remove\n     :parameters (?p - person ?nail - nail ?state - shine)\n     :precondition (and (has_state ?nail shine))\n     :effect (not (has_state ?nail shine))",
    "(:action remove\n     :parameters (?p - person ?nail - nail ?state - tape)\n     :precondition (and (has_state ?nail tape))\n     :effect (not (has_state ?nail tape))",
    "(:action remove\n     :parameters (?fairy_moss - fairy_moss ?npc - person ?state - excess_nail_polish)\n     :precondition (and (has_state ?npc excess_nail_polish))\n     :effect (not (has_state ?npc excess_nail_polish))",
    "(:action add ; Add or apply an item and update the relevant status\n  :parameters (?p - person ?item - object ?target - object)\n  :precondition (and (available ?p) (not (applied ?item ?target)) (at ?p ?target))\n  :effect (and (applied ?item ?target) (status_updated ?target ?item))",
    "(:action wipe ; General action to clean or modify an entity state\n    :parameters (?p - person ?e - entity ?m - method)\n    :precondition (and \n        (available ?p)\n        (not (cleaned ?e)) \n        (or \n            (and \n                (applied ?e ?m)\n                (cured ?e ?m)\n            )\n            (and \n                (shiny ?e)\n                (has ?p ?m)\n            )\n            (and \n                (dirty ?e)\n                (dry ?m)\n            )\n            (and \n                (on ?e ?tape)\n            )\n            (and \n                (applied ?polish ?e)\n            )\n            (and \n                (wrapped ?e ?rb)\n            )\n        )\n    )\n    :effect (and \n        (cleaned ?e)\n        (or \n            (and \n                (not (shiny ?e))",
    "(:action choose ; Choose an item or material and update its state\n  :parameters (?p - person ?item - object ?location - location ?container - container)\n  :precondition (and \n    (available ?p) \n    (or (at ?item ?location) (not (chosen ?item)))\n    (or (cleaned ?p) (not (chosen ?item)))\n    (or (disorganized ?item) (empty ?container))\n    (or (opened ?item) (not (size_chosen ?item)))\n  )\n  :effect (and \n    (or (selected ?item) (not (at ?item ?location))",
    "(:action paint\n    :parameters (?npc - person ?item - object ?material - material)\n    :precondition (and \n        (available ?npc) \n        (inventory ?npc ?material)\n        (not (applied ?material ?item))\n    )\n    :effect (and \n        (applied ?material ?item)\n        (not (inventory ?npc ?material))",
    "(:action modify\n  :parameters (?npc - person ?item - object ?attr - attribute ?value - value)\n  :precondition (and (available ?npc) (not (attribute_value ?item ?attr ?value)))\n  :effect (and (attribute_value ?item ?attr ?value))",
    "(:action modify\n     :parameters (?npc - person ?book - book ?attr - attribute ?value - value)\n     :precondition (and (available ?npc) (not (checked_list ?book ?attr ?value)))\n     :effect (and (checked_list ?book ?attr ?value))",
    "(:action modify\n     :parameters (?npc - person ?nail - nail ?attr - attribute ?value - value)\n     :precondition (and (at ?npc ?loc) (not (chipped ?nail ?attr ?value)))\n     :effect (and (chipped ?nail ?attr ?value))",
    "(:action modify\n     :parameters (?npc - person ?np - nail_polish ?attr - attribute ?value - value)\n     :precondition (and (available ?npc) (not (quick_dry ?np ?attr ?value)))\n     :effect (and (quick_dry ?np ?attr ?value))",
    "(:action condition\n  :parameters (?npc - person ?nail - nail ?item - object)\n  :precondition (and\n    (at ?npc ?loc)\n    (or\n      (and (not (gel_applied ?nail)) (has ?npc ?item))\n      (and (gel_applied ?nail) (not (chipped ?nail)))\n      (and (chipped ?nail) (has ?npc ?item))\n      (and (peelable ?nail) (not (gel_removed ?nail)))\n    )\n  )\n  :effect (and\n    (or\n      (chipped ?nail)\n      (peelable ?nail)\n      (gel_removed ?nail)\n      (conditioned ?nail)\n    )",
    "(:action open ; Open a resource and update its state\n  :parameters (?actor - agent ?item - object)\n  :precondition (and (at ?actor ?item) (closed ?item))\n  :effect (and (opened ?item) (not (closed ?item))",
    "(:action take ; Take an item and update its status\n  :parameters (?agent - entity ?item - object)\n  :precondition (and (not (taken ?agent ?item)))\n  :effect (taken ?agent ?item)\n)",
    "(:action use ; Use a resource and update task status\n  :parameters (?user - agent ?resource - object ?context - context ?target - object)\n  :precondition (and (available ?user) (not (used ?resource ?context ?target)))\n  :effect (and (used ?resource ?context ?target))",
    "(:action apply\n  :parameters (?actor - entity ?item - object ?target - entity)\n  :precondition (and\n    (available ?actor)\n    (holds ?actor ?item)\n    (suitable ?target)\n    (not (applied ?item ?target))\n  )\n  :effect (and\n    (applied ?item ?target)\n    (not (holds ?actor ?item))",
    "(:action reuse ; Reuse an item and repurpose it\n  :parameters (?user - user ?item - object ?purpose - purpose)\n  :precondition (and\n    (clean ?item)\n    (selected ?user)\n  )\n  :effect (and\n    (repurposed ?item ?purpose)\n    (not (clean ?item))"
]