[
    "```pddl\n[\n  '(:action join ; Join an entity to a group or system\\n:parameters (?entity - entity ?group - group)\\n:precondition (and (willing_to_join ?entity) (not (member ?entity ?group)))\\n:effect (member ?entity ?group))',\n  \n  '(:action find ; Find a resource, person, or information and update status\\n:parameters (?entity - entity ?target - target)\\n:precondition (and (available ?entity) (not (found ?entity ?target)) (or (supervisable ?entity ?target) (visible ?entity) (willing_to_join ?entity) (knows_preferences ?entity) (theme_selectable ?target) (has_books ?entity ?target)))\\n:effect (and (found ?entity ?target) (or (supervisor ?entity ?target) (has_other_club_info ?entity ?target) (member ?entity ?target) (snacks_ready ?target) (visibility ?entity invisible) (theme_selected ?target) (chosen_books ?entity ?target)))',\n  \n  '(:action create ; General action to create or compose a resource, item, or state\\n:parameters (?entity - entity ?resource - resource ?context - context ?condition - condition)\\n:precondition (and (not (created ?resource)) (in ?entity ?context) (condition_met ?condition))\\n:effect (and (created ?resource) (updated_state ?entity ?context ?condition)))',\n  \n  '(:action create ; Create a book within a book club\\n:parameters (?p - person ?b - book ?bc - book_club ?condition - condition)\\n:precondition (and (not (created ?b)) (member ?p ?bc) (condition_met ?condition))\\n:effect (and (created ?b) (updated_state ?p ?bc ?condition)))',\n  \n  '(:action create ; Create a book club\\n:parameters (?p - player ?bc - book_club ?condition - condition)\\n:precondition (and (not (created ?bc)) (in ?p ?bc) (condition_met ?condition))\\n:effect (and (created ?bc) (updated_state ?p ?bc ?condition)))',\n  \n  '(:action create ; Create a system\\n:parameters (?npc - npc ?system - system ?condition - condition)\\n:precondition (and (not (created ?system)) (condition_met ?condition))\\n:effect (and (created ?system) (updated_state ?npc ?context ?condition)))',\n  \n  '(:action create ; Create a book-themed object\\n:parameters (?npc - npc ?bt - book_themed ?condition - condition)\\n:precondition (and (not (created ?bt)) (step_selected ?bt) (condition_met ?condition))\\n:effect (and (created ?bt) (updated_state ?npc ?context ?condition)))',\n  \n  '(:action set ; Set a property or assign a status for an entity\\n:parameters (?actor - person ?entity - entity ?status - status)\\n:precondition (and (active ?actor) (not (has_status ?entity ?status)))\\n:effect (has_status ?entity ?status))',\n  \n  '(:action know ; Clarify important information related to the book club\\n:parameters (?p - person ?bc - book_club ?info - information)\\n:precondition (and (member ?p ?bc) (or (and (eq ?info purpose) (not (purpose_clarified ?bc))) (and (eq ?info next_meeting) (meeting_time_set ?bc) (not (next_meeting_known ?bc)))))\\n:effect (and (or (and (eq ?info purpose) (purpose_clarified ?bc)))))',\n  \n  \"(:action stick ; Stick with a specific choice and update the entity's status\\n:parameters (?entity - entity ?choice - option)\\n:precondition (and (step ?entity unselected) (valid_choice ?choice))\\n:effect (and (step ?entity selected) (chosen ?entity ?choice)))\",\n  \n  '(:action pick ; Pick an item and update its status\\n:parameters (?agent - agent ?item - object ?context - context)\\n:precondition (and (available ?agent) (not (picked ?agent ?item ?context)))\\n:effect (and (picked ?agent ?item ?context)))',\n  \n  '(:action venture ; Venture into a new state or domain\\n:parameters (?entity - entity ?domain - domain)\\n:precondition (and (in_domain ?entity visible ?domain))\\n:effect (and (in_domain ?entity invisible ?domain)))',\n  \n  '(:action read ; Read a resource and update its status\\n:parameters (?npc - person ?item - object)\\n:precondition (and (not (read ?npc ?item)))\\n:effect (read ?npc ?item))',\n\n  '(:action read_romance ; Read a romance book\\n:parameters (?npc - person ?book - book)\\n:precondition (and (decoration ?npc bare) (not (read ?npc ?book)))\\n:effect (and (decoration ?npc camouflaged) (read ?npc ?book)))',\n\n  '(:action read_books ; Read books\\n:parameters (?npc - person ?book - book)\\n:precondition (and (step ?book unselected) (not (read ?npc ?book)))\\n:effect (and (step ?book selected) (read ?npc ?book)))',\n\n  '(:action ask ; Ask for information or suggestions and update the status\\n:parameters (?requester - entity ?responder - entity ?item - object)\\n:precondition (and (available ?requester) (available ?responder) (or (location ?item on_counter) (and (in ?responder ?item) (has_questions ?responder)) (not (has_advice ?responder ?item)) (visible ?responder)))\\n:effect (and (or (location ?item in_hand) (members_prepared ?item) (has_advice ?responder ?item) (has_recommendation ?responder))))',\n  \n  '(:action write ; Write a policy or document and update status\\n:parameters (?p - person ?context - object)\\n:precondition (and (has_info ?p) (in ?p ?context) (not (written ?context)))\\n:effect (written ?context))',\n  \n  '(:action manage_task ; Manage a task for agent\\n:parameters (?actor - agent ?entity - object ?context - context ?property - attribute)\\n:precondition (and (available ?actor) (in ?actor ?context) (not (has_property ?entity ?property)))\\n:effect (has_property ?entity ?property))',\n  \n  '(:action manage_task ; Manage a task for person\\n:parameters (?npc - person ?book - book ?bc - book_club ?property - attribute)\\n:precondition (and (available ?npc) (in ?npc ?bc) (not (checked_list ?book ?property)))\\n:effect (checked_list ?book ?property))',\n  \n  '(:action manage_task ; Manage a task for players\\n:parameters (?p1 - player ?p2 - player ?bc - book_club ?property - attribute)\\n:precondition (and (available ?p1) (in ?p1 ?bc) (in ?p2 ?bc) (not (knows_secret ?p1 ?p2)))\\n:effect (knows_secret ?p1 ?p2))',\n  \n  '(:action manage_task ; Assign meeting location\\n:parameters (?leader - player ?bc - book_club ?location - location)\\n:precondition (and (available ?leader) (in ?leader ?bc) (not (has_meeting_location ?bc)))\\n:effect (has_meeting_location ?bc))',\n\n  \"(:action start ; Begin a task and update the entity's state\\n:parameters (?actor - entity ?target - object)\\n:precondition (and (precondition_met ?target))\\n:effect (task_started ?actor ?target))\",\n  \n  '(:action keep ; Maintain or update the state of an entity\\n:parameters (?entity - entity ?state1 - state ?state2 - state)\\n:precondition (and (has_state ?entity ?state1))\\n:effect (and (not (has_state ?entity ?state1)) (has_state ?entity ?state2)))',\n  \n  '(:action study ; Study an item and update its status\\n:parameters (?npc - person ?item - object)\\n:precondition (and (selected ?item) (named ?item) (not (studied ?item)))\\n:effect (studied ?item))',\n  \n  '(:action nudge ; Nudge entities to ensure tasks are on track\\n:parameters (?npc - npc ?task - task)\\n:precondition (and (task_derailed ?task))\\n:effect (task_on_track ?task))',\n  \n  '(:action nudge_group_back_on_tracks ; Nudge the group back on track if the discussion gets derailed\\n:parameters (?npc - npc)\\n:precondition (discussion_derailed)\\n:effect (discussion_on_track))',\n  \n  '(:action strike ; Strike an agreement or perform a task\\n:parameters (?entity - entity ?target - target)\\n:precondition (not (struck ?entity ?target))\\n:effect (struck ?entity ?target))',\n  \n  '(:action bring ; Bring a resource and update task status\\n:parameters (?p - player ?item - object)\\n:precondition (and (prepared ?p) (not (brought ?p ?item)))\\n:effect (brought ?p ?item))',\n  \n  '(:action visit ; Visit a resource to gain information or update status\\n:parameters (?npc - person ?resource - object)\\n:precondition (and (visible ?npc) (not (visited ?npc ?resource)))\\n:effect (and (visited ?npc ?resource) (has_knowledge ?npc ?resource)))',\n  \n  '(:action putobjectinreceptacle ; Perform an action on an object or person and update status\\n:parameters (?a - agent ?o - object ?r - receptacle)\\n:precondition (not (status_updated ?a ?o ?r))\\n:effect (status_updated ?a ?o ?r))',\n  \n  '(:action market_new_member_group ; Market a new member group\\n:parameters (?npc - npc ?adrian - entity ?ss - entity)\\n:precondition (knowledge ?adrian unselected)\\n:effect (knowledge ?adrian selected))',\n  \n  '(:action market ; General marketing action\\n:parameters (?agent - agent ?entity - entity ?context - context)\\n:precondition (knowledge ?entity unselected)\\n:effect (knowledge ?entity selected))'\n]\n```"
]