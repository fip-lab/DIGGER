[
    "```pddl\n[\n  (:action create ; General action to create or modify an entity's state\n    :parameters (?npc - person ?item - object ?context - context)\n    :precondition (and \n                  (available ?npc)\n                  (not (created ?npc ?item ?context)))\n    :effect (and \n            (created ?npc ?item ?context)\n            (when (structured_approach ?item) (structured_approach ?npc))\n    )\n  ),\n  \n  (:action create_structibility\n    :parameters (?npc - person ?item - structibility ?context - context)\n    :precondition (and (available ?npc) (not (structured_approach ?npc)))\n    :effect (structured_approach ?npc)\n  ),\n\n  (:action create_journal\n    :parameters (?npc - person ?item - journal ?context - therapy_session)\n    :precondition (and (available ?npc) (journal_entry ?npc) (attended_therapy ?npc ?context))\n    :effect (and (journal_created ?item) (journal_for_therapy ?item))\n  ),\n\n  (:action create_location\n    :parameters (?npc - person ?item - location ?context - new_location)\n    :precondition (and (available ?npc) (at ?npc ?item))\n    :effect (and (not (at ?npc ?item)))\n  ),\n\n  (:action listen ; Universal listening action\n    :parameters (?npc - person ?item - object ?context - context)\n    :precondition (and \n                   (not (listened ?npc ?item))\n                   (or (and (topic_chosen ?npc ?context) (not (notes_taken ?npc)))\n                       (and (at ?npc ?context) (broadcasting ?item ?context))\n                       (and (journal_kept ?npc) (not (listened_to_family ?npc)))\n                       (and (dedicated ?npc journaling))\n                       (and (status ?item in_progress))\n                       (and (at ?npc library) (library_has_books ?context)))\n                  )\n    :effect (and \n             (listened ?npc ?item)\n             (or (notes_taken ?npc)\n                 (listened_to_family ?npc)\n                 (observing ?npc)\n                 (status ?item completed)\n                 (checked_library ?item)\n                 (checked_journal_items ?item))\n            )\n  ),\n\n  (:action use ; Utilize a resource or perform a task with an item\n    :parameters (?npc - person ?item - object)\n    :precondition (and (available ?npc) (not (used ?npc ?item)))\n    :effect (and (used ?npc ?item))\n  ),\n\n  (:action use\n    :parameters (?npc - person)\n    :precondition (and (notes_taken ?npc) (not (used ?npc ?visual_prompts)))\n    :effect (used ?npc ?visual_prompts)\n  ),\n\n  (:action use\n    :parameters (?npc - person ?j - journal)\n    :precondition (and (carrying ?npc ?j) (not (used ?npc ?writing_prompt)))\n    :effect (used ?npc ?writing_prompt)\n  ),\n\n  (:action use\n    :parameters (?npc - person)\n    :precondition (and (thoughts_organized ?npc) (word_count_set ?track) (not (used ?npc ?grammar)))\n    :effect (used ?npc ?grammar)\n  ),\n\n  (:action use\n    :parameters (?npc - person ?track - track)\n    :precondition (and (at ?npc ?track) (full_text_available ?track) (not (used ?npc ?full_text)))\n    :effect (used ?npc ?full_text)\n  ),\n\n  (:action use\n    :parameters (?npc - person ?library - library)\n    :precondition (and (at ?npc ?library) (interlibrary_loan_available ?library) (not (used ?npc ?interlibrary_loan)))\n    :effect (used ?npc ?interlibrary_loan)\n  ),\n\n  (:action evaluate ; Evaluate a resource and update status\n    :parameters (?npc - person ?resource - object ?aspect - aspect ?time - time-period ?goal - goal)\n    :precondition (and \n                   (journal_entry ?npc)\n                   (expressed_feelings ?npc)\n                   (journal_kept ?npc)\n                   (journal_in_use ?resource)\n                   (time_to_review ?time)\n                   (goal_set ?goal)\n                   (prayer_written ?npc)\n                   (not (evaluated ?npc ?resource ?aspect))\n                  )\n    :effect (and \n             (evaluated_actions ?npc)\n             (evaluated_thoughts ?npc)\n             (evaluated_emotions ?npc)\n             (journal_reviewed ?resource)\n             (entries_organized ?resource)\n             (evaluated ?npc ?resource ?aspect))\n  ),\n\n  (:action go ; Detail a person's interaction with an item and update its status\n    :parameters (?npc - person ?item - object)\n    :precondition (and (interaction_required ?item) (has_entry ?npc))\n    :effect (and (detailed_entry ?npc ?item))\n  ),\n\n  (:action think_of_journal_as_friend\n    :parameters (?npc - person ?j - journal)\n    :precondition (and (journal_for_therapy ?j) (writing_prompts ?npc ?j))\n    :effect (and (friendship_with_journal ?npc ?j))\n  ),\n\n  (:action think_of_solution_to_problem\n    :parameters (?npc - person ?problem - issue)\n    :precondition (and (problem_present ?problem) (thinking_cap ?npc))\n    :effect (and (solved ?problem ?npc))\n  ),\n\n  (:action think ; Think about a resource and update mental state\n    :parameters (?npc - person ?item - object)\n    :precondition (and (can_think ?npc) (relevant ?item))\n    :effect (thought_about ?npc ?item)\n  ),\n\n  (:action read\n    :parameters (?npc - person ?item - object ?location - location)\n    :precondition (and \n                   (at ?npc ?location)\n                   (or (inventory ?npc ?item) \n                       (friendship_with_journal ?npc ?item) \n                       (journal_for_therapy ?item) \n                       (reading ?npc ?item))\n                  )\n    :effect (and \n             (or (reading ?npc ?item)\n                 (slowing ?npc ?item)\n                 (journal_read ?npc ?item)\n                 (reflected_on_entries ?npc ?item)\n                 (knowledge ?npc))\n            )\n  ),\n\n  (:action keep ; Keep an item in a specified location, update tracking status, or ensure consistency\n    :parameters (?npc - person ?item - object ?location - location ?track - track)\n    :precondition (and \n                   (or (inventory ?npc ?item)\n                       (carrying ?npc ?item)\n                       (at ?item on_counter)\n                       (at ?npc ?location)\n                       (not (track_consistent ?track)) \n                       (location ?track present))\n                   (or (not (inventory ?npc ?item))\n                       (not (note_kept ?item))\n                       (not (track_consistent ?track))\n                       (not (at ?item on_counter)))\n                  )\n    :effect (and \n             (or (at ?item ?location)\n                 (note_kept ?item)\n                 (track_consistent ?track)\n                 (inventory ?npc ?item))\n            )\n  ),\n\n  (:action write ; Write information to a resource\n    :parameters (?npc - person ?resource - object ?target - object)\n    :precondition (and \n                   (or (inventory ?npc ?resource)\n                       (journal_kept ?npc))\n                   (inventory ?npc ?target)\n                   (or (not (written ?resource ?target))\n                       (not (page_numbers_written ?resource ?target))\n                       (not (prayer_written ?npc)))\n                  )\n    :effect (and \n             (or (written ?resource ?target)\n                 (page_numbers_written ?resource ?target)\n                 (prayer_written ?npc))\n            )\n  ),\n\n  (:action take ; Take an item and perform an associated task\n    :parameters (?npc - person ?item - object ?task - task)\n    :precondition (and \n                   (inventory ?npc ?item)\n                   (not (completed ?npc ?task))\n                   (or (and (task_type ?task note-taking) (reading ?npc ?item))\n                       (and (task_type ?task photography) (charged ?item))\n                       (and (task_type ?task inventory) (location ?item on_counter))\n                       (and (task_type ?task carrying) (not (carried ?item)))\n                      )\n                  )\n    :effect (completed ?npc ?task)\n  ),\n\n  (:action reflect ; Reflect on an item and record thoughts\n    :parameters (?npc - person ?item - object ?record - record)\n    :precondition (and (inventory ?npc ?item) (inventory ?npc ?record) (completed ?item))\n    :effect (and (reflection_recorded ?record ?item) (reflecting ?npc))\n  ),\n\n  (:action start\n    ; General action for starting or initiating various tasks\n    :parameters (?npc - person ?item - object ?location - location ?context - context)\n    :precondition (and \n                   (or (and (inventory ?npc ?item) (at ?npc home))\n                       (and (at ?npc ?location) (observing ?npc))\n                       (knowledge ?context)\n                       (carrying ?npc ?item))\n                  )\n    :effect (and \n             (or (carrying ?npc ?item)\n                 (recorded ?npc ?context)\n                 (fire_started ?context)\n                 (journal_finished ?item))\n            )\n  ),\n\n  (:action record ; Record an observation or data in a specified medium\n    :parameters (?npc - person ?item - object)\n    :precondition (carrying ?npc ?item)\n    :effect (recorded ?npc ?item)\n  ),\n\n  (:action attach ; Attach an item to a resource and update status\n    :parameters (?npc - person ?item - object ?resource - object)\n    :precondition (and (carrying ?npc ?resource) (inventory ?npc ?item))\n    :effect (and (attached ?resource ?item) (not (inventory ?npc ?item)))\n  ),\n\n  (:action draw ; Draw in a resource and update its content\n    :parameters (?npc - person ?resource - object)\n    :precondition (carrying ?npc ?resource)\n    :effect (drawing_added ?resource)\n  ),\n\n  (:action study ; Study a resource and update task status\n    :parameters (?npc - person ?resource - object)\n    :precondition (not (studied ?npc ?resource))\n    :effect (studied ?npc ?resource)\n  ),\n\n  (:action dedicate_time\n    :parameters (?npc - person ?activity - activity)\n    :precondition (at ?npc ?loc)\n    :effect (dedicated ?npc ?activity)\n  ),\n\n  (:action dedicate ; Dedicate a resource to an activity and update the status\n    :parameters (?npc - person ?activity - object)\n    :precondition (and (available ?npc) (at ?npc ?loc))\n    :effect (dedicated ?npc ?activity)\n  ),\n\n  (:action set ; Set a parameter or condition for an entity\n    :parameters (?npc - person ?param - parameter ?value - value)\n    :precondition (and (has_precondition ?npc ?param) (not (set ?npc ?param)))\n    :effect (and (set ?npc ?param) (value_assigned ?param ?value))\n  ),\n\n  (:action stay ; Ensure entity stays in a specific state\n    :parameters (?npc - person)\n    :precondition (visibility ?npc visible)\n    :effect (visibility ?npc invisible)\n  ),\n\n  (:action break ; Perform a state change on an entity to progress towards a goal state\n    :parameters (?npc - person ?item - object ?location - place)\n    :precondition (and \n                   (or (inventory ?npc ?item)\n                       (visible ?npc ?location)\n                       (present ?item ?location)\n                       (jerky ?item))\n                   (not (goal_state ?npc)))\n    :effect (not (writer_block ?npc))\n  ),\n\n  (:action ask_library_help_desk\n    :parameters (?npc - person ?library - library)\n    :precondition (and (at ?npc ?library) (help_desk_available ?library))\n    :effect (asked_help_desk ?library)\n  ),\n\n  (:action use_interlibrary_loan\n    :parameters (?npc - person ?library - library ?book - book)\n    :precondition (and (at ?npc ?library) (interlibrary_loan_available ?library))\n    :effect (requested_interlibrary_loan ?npc ?book)\n  ),\n\n  (:action ask ; Ask for assistance or request a resource\n    :parameters (?npc - person ?entity - object)\n    :precondition (and (at ?npc ?entity) (available ?entity))\n    :effect (requested ?npc ?entity)\n  ),\n\n  (:action divide ; Divide a resource into sections\n    :parameters (?npc - person ?resource - divisible)\n    :precondition (prepared ?npc)\n    :effect (divided ?resource)\n  ),\n\n  (:action share\n    :parameters (?npc - person ?item - object)\n    :precondition (and (available ?npc) (not (shared ?npc ?item)))\n    :effect (shared ?npc ?item)\n  ),\n\n  (:action journal ; Record a feeling or thought and update emotional state\n    :parameters (?npc - person ?s - state)\n    :precondition (and (feeling ?npc) (not (journal_entry ?npc ?s)))\n    :effect (and (journal_entry ?npc ?s) (expressed_feelings ?npc ?s))\n  ),\n\n  (:action reread ; Reread an item and update the status\n    :parameters (?npc - person ?item - object ?location - location)\n    :precondition (and (at ?npc ?location) (inventory ?npc ?item) (not (rereading ?npc ?item)))\n    :effect (rereading ?npc ?item)\n  ),\n\n  (:action be ; Transform the state of an entity to a desired property\n    :parameters (?npc - person ?property - property)\n    :precondition (not (?property ?npc))\n    :effect (?property ?npc)\n  ),\n\n  (:action revisit\n    :parameters (?npc - person ?resource - resource ?task - task)\n    :precondition (and (available ?npc) (not (completed ?npc ?task)) (knowledge ?npc))\n    :effect (and (completed ?npc ?task) (revisited ?npc ?resource) (observed ?npc ?resource) (recorded ?npc ?task))\n  ),\n\n  (:action proofread ; Proofread a resource and update its status\n    :parameters (?npc - person ?entry - document)\n    :precondition (and (thoughts_organized ?npc) (word_count_set ?entry) (grammar_checked ?npc) (not (proofread ?npc ?entry)))\n    :effect (proofread ?npc ?entry)\n  ),\n\n  (:action putobjectinreceptacle ; Place an item into a receptacle after performing necessary checks\n    :parameters (?npc - person ?item - object ?receptacle - location)\n    :precondition (and (proofread ?npc) (not (in_receptacle ?item)) (thoughts_organized ?npc) (word_count_set ?item) (grammar_checked ?npc))\n    :effect (in_receptacle ?item)\n  )\n]\n```"
]