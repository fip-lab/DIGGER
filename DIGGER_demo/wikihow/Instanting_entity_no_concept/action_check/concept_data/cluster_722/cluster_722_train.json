[
    "```pddl\n[\n    '(:action check\\n  ; Check a resource and update task status\\n  :parameters (?npc - entity ?item - object)\\n  :precondition (and\\n    (available ?npc)\\n    (not (checked ?npc ?item))\\n    (entity ?npc))\\n  :effect (and\\n    (checked ?npc ?item)\\n    (or\\n      (aware_of_pain ?npc)\\n      (symptoms_checked ?npc)\\n      (checkedKnee ?npc)\\n      (possibleBakersCyst ?npc)\\n      (loan_tracker ?npc ?item)\\n      (received_medical_attention ?npc ?item)\\n      (tested_for_cyst ?npc)\\n      (test_conducted ?item))))',\n      \n    '(:action schedule\\n  ; Schedule a task and update task status\\n  :parameters (?npc - entity ?task - task)\\n  :precondition (and (available ?npc) (not (scheduled ?npc ?task)))\\n  :effect (scheduled ?npc ?task))',\n  \n    '(:action call ; Call an entity and update their status\\n :parameters (?caller - person ?callee - person ?location - place ?task - task)\\n :precondition (and (at ?caller ?location) (available ?callee) (not (task_completed ?caller ?task)))\\n :effect (and (task_completed ?caller ?task) (busy ?callee)))',\n \n    '(:action ask ; Ask an entity about a specific topic and update the discussion state\\n  :parameters (?asker - person ?entity - entity ?topic - topic)\\n  :precondition (and \\n    (available_for_discussion ?entity ?topic) \\n    (focus ?asker on_topic ?topic)\\n    (not (discussed ?entity ?topic)))\\n  :effect (and \\n    (discussed ?entity ?topic)\\n    (updated_focus ?asker ?topic)))',\n \n    '(:action evaluate ; Evaluate options and update knowledge and visibility\\n  :parameters (?npc - person ?option - object)\\n  :precondition (and (knowledge ?npc ?option))\\n  :effect (and (knowledge ?npc ?option) (visibility ?npc visible)))',\n \n    '(:action consult ; Consult a specialist and update the status of the consultation\\n    :parameters (?npc - specialist ?patient - person ?issue - condition)\\n    :precondition (and (available ?npc) (hasIssue ?patient ?issue) (not (consulted ?npc ?patient ?issue)))\\n    :effect (and (consulted ?npc ?patient ?issue) (issueChecked ?patient ?issue)))',\n \n    '(:action treat\\n    :parameters (?entity - entity ?condition - condition ?resource - resource)\\n    :precondition (and \\n        (available ?resource)\\n        (or\\n            (and (volume ?entity silent))\\n            (and (hasCyst ?entity) (smallCyst ?entity))\\n            (and (not (awareness ?entity knee-injuries-risk)))\\n            (and (knowledgeable ?entity) (functional ?condition))\\n            (and (knowledgeable ?entity) (not (functional ?condition)))\\n            (and (discussed_treatment_options ?entity) (available ?resource))))\\n    :effect (and \\n        (or\\n            (and (volume ?entity talking) (stability ?entity supported)))))',\n            \n    '(:action understand\\n    ; Understand a treatment and update the focus/status\\n    :parameters (?npc - person ?item - object ?location - place)\\n    :precondition (and \\n        (available ?npc)\\n        (knowledge ?npc selected)\\n        (focus ?npc focused_on_treatment)\\n        (visible ?npc)\\n        (in ?npc ?location))\\n    :effect (and \\n        (focus ?npc admiring_treatment)\\n        (knowledge ?npc understood)\\n        (visibility ?npc visible)\\n        (clean ?location clean)\\n        (decoration ?item decorated)\\n        (volume ?item adjusted)\\n        (stability ?npc stable)))',\n \n    '(:action go_to_emergency_room\\n    :parameters (?npc - entity ?er - location)\\n    :precondition (and\\n      (not (at ?npc ?er)))\\n    :effect (and\\n      (at ?npc ?er)))',\n      \n    '(:action get_physical_examination\\n    :parameters (?npc - entity ?clinic - location)\\n    :precondition (and\\n      (not (examined ?npc))\\n      (at ?npc ?clinic))\\n    :effect (and\\n      (examined ?npc)))',\n      \n    '(:action go\\n    :parameters (?npc - entity ?location - location ?task - task)\\n    :precondition (and\\n        (not (completed ?npc ?task))\\n        (or\\n            (and (task_type_emergency ?task) (not (at ?npc ?location)))\\n            (and (task_type_physical_exam ?task) (at ?npc ?location))))\\n    :effect (and\\n        (completed ?npc ?task)\\n        (or\\n            (and (task_type_emergency ?task) (at ?npc ?location)))))',\n \n    '(:action learn ; Learn about a subject and gain knowledge\\n  :parameters (?npc - person ?subject - topic)\\n  :precondition (and (not (knowledge ?npc ?subject)))\\n  :effect (knowledge ?npc ?subject))',\n \n    '(:action remove\\n    :parameters (?npc - entity ?condition - condition)\\n    :precondition (and (checked ?npc ?condition) (not (removed ?npc ?condition)))\\n    :effect (removed ?npc ?condition))',\n \n    '(:action be ; Gain awareness or knowledge about a topic\\n  :parameters (?entity - person ?topic - topic)\\n  :precondition (and (person ?entity) (not (aware ?entity ?topic)))\\n  :effect (aware ?entity ?topic))',\n \n    '(:action determine\\n    ; Determine if removal of an entity is needed\\n    :parameters (?npc - doctor ?entity - object)\\n    :precondition (and (knowledge ?npc selected) (location ?npc in_drawer))\\n    :effect (and (location ?npc in_hand) (cleanness ?npc dirty) (dryness ?npc drier)))',\n \n    '(:action discuss ; Discuss options or suggestions with a person\\n  :parameters (?person - person ?partner - person)\\n  :precondition (and (available ?partner) (received_attention ?person))\\n  :effect (and (informed ?person) (discussed_options ?person)))'\n]\n```"
]