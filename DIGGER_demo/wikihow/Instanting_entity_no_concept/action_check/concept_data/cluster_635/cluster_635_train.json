[
    "```pddl\n[\n'(:action place\n    :parameters (?p - person ?item - object ?container - container)\n    :precondition (and \n        (inventory ?p ?item) \n        (inventory ?p ?container)\n        (not (in ?item ?container))\n    )\n    :effect (and \n        (in ?item ?container) \n        (not (inventory ?p ?item))\n    )\n)',\n\n'(:action add\n    :parameters (?entity1 - entity ?entity2 - entity ?container - entity)\n    :precondition (and \n        (available ?entity1) \n        (available ?entity2) \n        (in_container ?container)\n        (not (in_mixed_state ?container))\n    )\n    :effect (and \n        (not (available ?entity1))\n    )\n)',\n\n'(:action cook\n    :parameters (?agent - entity ?item - entity ?location - location ?tool - entity ?ingredient - entity)\n    :precondition (and\n        (at ?agent ?location)\n        (available ?item)\n        (clean ?location)\n        (off ?tool)\n        (not (prepared ?ingredient))\n        (not (cooked ?item))\n    )\n    :effect (and\n        (not (available ?item))\n    )\n)',\n\n'(:action serve\n    :parameters (?item1 - entity ?item2 - entity ?plate - entity)\n    :precondition (and\n        (is_cooked ?item1)\n        (at_location ?item1 ?loc1)\n        (at_location ?item2 ?loc2)\n    )\n    :effect (and\n        (not (at_location ?item1 ?loc1))\n    )\n)',\n\n'(:action cut_into_thickest_piece\n    :parameters (?steak - ingredient)\n    :precondition (and\n        (at ?steak kitchen_counter)\n        (whole ?steak)\n    )\n    :effect (and\n        (cut ?steak)\n        (not (whole ?steak))\n    )\n)',\n\n'(:action check_doneness_of_steak\n    :parameters (?steak - ingredient)\n    :precondition (and\n        (cut ?steak)\n        (at ?steak kitchen_counter)\n    )\n    :effect (and\n        (checked_doneness ?steak)\n    )\n)',\n\n'(:action cut\n    :parameters (?item - object)\n    :precondition (and\n        (at ?item kitchen_counter)\n        (or\n            (whole ?item)\n            (cut ?item)\n        )\n    )\n    :effect (and\n        (when (whole ?item)\n            (and\n                (cut ?item)\n                (not (whole ?item))\n            )\n        )\n    )\n)',\n\n'(:action check\n    :parameters (?npc - entity ?item - object ?location - place)\n    :precondition (and \n        (available ?npc) \n        (at ?item ?location)\n        (not (checked ?npc ?item))\n    )\n    :effect (checked ?npc ?item)\n)',\n\n'(:action use\n    :parameters (?entity - entity ?resource - resource)\n    :precondition (and \n        (available ?resource) \n        (requires_use ?entity ?resource)\n    )\n    :effect (and \n        (used ?entity ?resource) \n        (not (requires_use ?entity ?resource))\n    )\n)',\n\n'(:action submerge\n    :parameters (?p - person ?item - object ?liquid - substance)\n    :precondition (and \n        (inventory ?p ?item) \n        (inventory ?p ?liquid) \n        (not (submerged ?item)) \n        (can_be_submerged ?item ?liquid)\n    )\n    :effect (submerged ?item)\n)',\n\n'(:action choose\n    :parameters (?p - person ?item - object ?loc - location)\n    :precondition (and \n        (at ?p ?loc) \n        (at ?item ?loc) \n        (available ?item) \n        (not (chosen ?item))\n    )\n    :effect (and \n        (chosen ?item) \n        (not (available ?item))\n    )\n)',\n\n'(:action rest\n    :parameters (?entity - object ?loc - location)\n    :precondition (and \n        (at ?entity ?loc) \n        (prepared ?entity)\n    )\n    :effect (resting ?entity)\n)',\n\n'(:action finish\n    :parameters (?p - person ?item - object ?loc - location)\n    :precondition (and \n        (at ?p ?loc) \n        (status ?item in_progress)\n    )\n    :effect (and \n        (status ?item completed)\n    )\n)',\n\n'(:action store_chuck_steak\n    :parameters (?p - player ?cs - chuck_steak ?l - location)\n    :precondition (and \n        (chosen ?cs) \n        (at ?p ?l)\n    )\n    :effect (and \n        (stored ?cs) \n        (not (chosen ?cs))\n    )\n)',\n\n'(:action cook_chuck_steak\n    :parameters (?p - player ?cs - chuck_steak ?k - kitchen)\n    :precondition (and \n        (chosen ?cs) \n        (at ?p ?k) \n        (stored ?cs)\n    )\n    :effect (and \n        (cooked ?cs) \n        (not (stored ?cs))\n    )\n)',\n\n'(:action store_or_cook\n    :parameters (?p - player ?item - object ?loc - location ?kitchen - kitchen)\n    :precondition (and \n        (chosen ?item) \n        (at ?p ?loc) \n        (or \n            (not (stored ?item)) \n            (and \n                (at ?p ?kitchen) \n                (stored ?item)\n            )\n        )\n    )\n    :effect (and \n        (or \n            (and \n                (stored ?item) \n                (not (chosen ?item))\n            )\n        )\n    )\n)',\n\n'(:action marinate\n    :parameters (?entity - entity ?marinade - entity)\n    :precondition (and \n        (at_location ?entity plain) \n        (has_visibility ?entity visible) \n        (has_flavor ?entity none)\n    )\n    :effect (and \n        (not (at_location ?entity plain))\n    )\n)',\n\n'(:action apply\n    :parameters (?p - person ?entity - object ?loc - location)\n    :precondition (and \n        (at ?p ?loc) \n        (chosen ?entity) \n        (ready ?p)\n    )\n    :effect (applied ?entity)\n)'\n]\n```"
]