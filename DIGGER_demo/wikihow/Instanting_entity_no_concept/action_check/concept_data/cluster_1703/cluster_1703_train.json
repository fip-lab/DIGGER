[
    "```lisp\n[\n  '(:action remove\n    :parameters (?actor - agent ?item - entity ?state - state)\n    :precondition (and (has_state ?item ?state))\n    :effect (not (has_state ?item ?state)))',\n  '(:action remove\n    :parameters (?p - person ?nail - nail ?state - shine)\n    :precondition (and (has_state ?nail shine))\n    :effect (not (has_state ?nail shine)))',\n  '(:action remove\n    :parameters (?p - person ?nail - nail ?state - tape)\n    :precondition (and (has_state ?nail tape))\n    :effect (not (has_state ?nail tape)))',\n  '(:action remove\n    :parameters (?npc - person ?item - entity ?state - excess_nail_polish)\n    :precondition (and (has_state ?item excess_nail_polish))\n    :effect (not (has_state ?item excess_nail_polish)))',\n  '(:action add\n    :parameters (?p - person ?item - object ?target - object)\n    :precondition (and (available ?p) (not (applied ?item ?target)) (at ?p ?target))\n    :effect (and (applied ?item ?target) (status_updated ?target ?item)))',\n  '(:action wipe\n    :parameters (?p - person ?e - entity ?m - method)\n    :precondition (and \n        (available ?p) \n        (not (cleaned ?e)) \n        (or \n            (and (applied ?e ?m) (cured ?e ?m)) \n            (and (shiny ?e) (has ?p ?m)) \n            (and (dirty ?e) (dry ?m)) \n            (and (on ?e ?tape)) \n            (and (applied ?polish ?e)) \n            (and (wrapped ?e ?rb))\n        )\n    )\n    :effect (and \n        (cleaned ?e) \n        (not (shiny ?e))))',\n  '(:action choose\n    :parameters (?p - person ?item - object ?location - location ?container - container)\n    :precondition (and \n        (available ?p) \n        (or (at ?item ?location) (not (chosen ?item))) \n        (or (cleaned ?p) (not (chosen ?item))) \n        (or (disorganized ?item) (empty ?container)) \n        (or (opened ?item) (not (size_chosen ?item)))\n    )\n    :effect (and \n        (selected ?item) \n        (not (at ?item ?location))))',\n  '(:action paint\n    :parameters (?npc - person ?item - object ?material - material)\n    :precondition (and \n        (available ?npc) \n        (inventory ?npc ?material) \n        (not (applied ?material ?item))\n    )\n    :effect (and \n        (applied ?material ?item) \n        (not (inventory ?npc ?material))))',\n  '(:action modify\n    :parameters (?npc - person ?item - object ?attr - attribute ?value - value)\n    :precondition (and (available ?npc) (not (attribute_value ?item ?attr ?value)))\n    :effect (attribute_value ?item ?attr ?value))',\n  '(:action modify\n    :parameters (?npc - person ?book - book ?attr - attribute ?value - value)\n    :precondition (and (available ?npc) (not (checked_list ?book ?attr ?value)))\n    :effect (checked_list ?book ?attr ?value))',\n  '(:action modify\n    :parameters (?npc - person ?nail - nail ?attr - attribute ?value - value)\n    :precondition (and (at ?npc ?loc) (not (chipped ?nail ?attr ?value)))\n    :effect (chipped ?nail ?attr ?value))',\n  '(:action modify\n    :parameters (?npc - person ?np - nail_polish ?attr - attribute ?value - value)\n    :precondition (and (available ?npc) (not (quick_dry ?np ?attr ?value)))\n    :effect (quick_dry ?np ?attr ?value))',\n  '(:action condition\n    :parameters (?npc - person ?nail - nail ?item - object)\n    :precondition (and \n        (at ?npc ?loc) \n        (or \n            (and (not (gel_applied ?nail)) (has ?npc ?item)) \n            (and (gel_applied ?nail) (not (chipped ?nail))) \n            (and (chipped ?nail) (has ?npc ?item)) \n            (and (peelable ?nail) (not (gel_removed ?nail)))\n        )\n    )\n    :effect (and \n        (chipped ?nail) \n        (peelable ?nail) \n        (gel_removed ?nail) \n        (conditioned ?nail)))',\n  '(:action open\n    :parameters (?actor - agent ?item - object)\n    :precondition (and (at ?actor ?item) (closed ?item))\n    :effect (and (opened ?item) (not (closed ?item))))',\n  '(:action take\n    :parameters (?agent - entity ?item - object)\n    :precondition (not (taken ?agent ?item))\n    :effect (taken ?agent ?item))',\n  '(:action use\n    :parameters (?user - agent ?resource - object ?context - context ?target - object)\n    :precondition (and (available ?user) (not (used ?resource ?context ?target)))\n    :effect (used ?resource ?context ?target))',\n  '(:action apply\n    :parameters (?actor - entity ?item - object ?target - entity)\n    :precondition (and \n        (available ?actor) \n        (holds ?actor ?item) \n        (suitable ?target) \n        (not (applied ?item ?target)))\n    :effect (and \n        (applied ?item ?target) \n        (not (holds ?actor ?item))))',\n  '(:action reuse\n    :parameters (?user - user ?item - object ?purpose - purpose)\n    :precondition (and \n        (clean ?item) \n        (selected ?user))\n    :effect (and \n        (repurposed ?item ?purpose) \n        (not (clean ?item))))'\n]\n```"
]