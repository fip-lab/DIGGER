{
    "heat": [
        "(:action heat_surface\n    :parameters (?p - player ?s - stove_knob ?v - velveeta)\n    :precondition (and (at ?p kitchen) (temperature ?s cool) (power ?s off))\n    :effect (and (temperature ?s hot) (power ?s on) (temperature ?v warming))\n)\n\n",
        "(:action heat_peanut_oil\n    :parameters (?npc - npc ?oil - peanut_oil ?pot - pot)\n    :precondition (and (at ?npc ?pot) (not (heated ?oil)))\n    :effect (heated ?oil)\n)\n```\n\n#### Action: cook\n```lisp\n",
        "(:action heat-oil\n    :parameters (?p - pan)\n    :precondition (and (inPan ?m ?p) (not (hot ?p)))\n    :effect (and (hot ?p) (not (cold ?p)))\n)\n\n",
        "(:action fry_ingredients\n    :parameters (?egg_rolls - ingredient ?bowl - container ?kitchen - location)\n    :precondition (and\n      (rolls_finished)\n      (at ?egg_rolls ?bowl)\n      (at ?bowl ?kitchen)\n    )\n    :effect (and\n      (fried ?egg_rolls)\n    )\n  )\n\n  ;; Action 7: Serve\n  ",
        "(:action fry_egg\n    :parameters (?egg - ingredient ?oil - ingredient ?pan - tool ?stove - appliance ?loc - location)\n    :precondition (and\n      (at ?egg ?loc)\n      (at ?oil ?loc)\n      (at-tool ?pan ?loc)\n      (at-appliance ?stove ?loc)\n      (has-power ?stove)\n      (clean ?pan)\n    )\n    :effect (and\n      (fried ?egg)\n      (heated ?pan)\n      (not (clean ?pan))\n      (in-pan ?egg ?pan)\n      (not (at ?egg ?loc))\n    )\n  )\n\n  ;; Action: Flip and Eat\n  ",
        "(:action crack_egg_on_metal ; crack an egg onto the metal surface\n    :parameters (?egg - egg ?p - npc ?metal - heat)\n    :precondition (and (inventory ?p ?egg) (in_sunlight ?metal) (heating ?metal) (is_egg ?egg))\n    :effect (and (not (inventory ?p ?egg)) (cracked ?egg) (on_metal ?egg))\n)\n\n",
        "(:action crack_egg_on_sidewalk ; crack a second egg onto the sidewalk\n    :parameters (?egg - egg ?p - npc ?l - location)\n    :precondition (and (inventory ?p ?egg) (at ?p ?l) (is_egg ?egg) (very_hot_day))\n    :effect (and (not (inventory ?p ?egg)) (cracked ?egg) (on_sidewalk ?egg))\n)\n\n",
        "(:action enhance-flavor\n    :parameters (?m - mixture)\n    :precondition (and (mixed ?m))\n    :effect (and (flavored ?m) (not (plain ?m)))\n)\n\n",
        "(:action boil_potatoes\n    :parameters (?potato - ingredient ?stove - appliance)\n    :precondition (and\n      (peeled ?potato)\n      (at ?potato kitchen_counter)\n      (at ?stove kitchen_stove)\n      (heated ?stove)\n    )\n    :effect (and\n      (boiled ?potato)\n    )\n  )\n\n  ;; Action: Pour Oil into Pan\n  "
    ],
    "cook": [
        "(:action prepare_surface\n    :parameters (?p - player ?r - rolling_surface)\n    :precondition (and (at ?p kitchen) (fullness ?r empty))\n    :effect (fullness ?r full)\n)\n\n",
        "(:action knead_and_divide\n    :parameters (?p - player ?d - dough)\n    :precondition (and (at ?p kitchen) (location ?d in_bowl) (temperature ?d cold))\n    :effect (and (location ?d on_counter) (temperature ?d warm))\n)\n\n",
        "(:action cook-eggs\n    :parameters (?e - eggs ?p - pan)\n    :precondition (and (inPan ?e ?p) (not (overCooked ?e)))\n    :effect (and (cooked ?e) (not (raw ?e)))\n)\n\n",
        "(:action cook_vegetables\n    :parameters (?vegetables - ingredient ?kitchen - location)\n    :precondition (and\n      (at ?vegetables ?kitchen)\n    )\n    :effect (and\n      (cooked ?vegetables)\n    )\n  )\n\n  ;; Action 2: Add the wet ingredients\n  ",
        "(:action make_spring_rolls\n    :parameters (?ingredients - ingredient ?wrapper - object ?table - location)\n    :precondition (and\n      (at ?ingredients ?table)\n      (at ?wrapper ?table)\n      (wet ?ingredients)\n    )\n    :effect (and\n      (wrapped ?ingredients ?wrapper)\n    )\n  )\n\n  ;; Action 4: Lift the wrapper over the top and tuck it in under the filling\n  ",
        "(:action make_huevos_rancheros\n    :parameters (?egg - ingredient ?person - person ?loc - location)\n    :precondition (and\n      (prepared ?egg)\n      (at ?egg ?loc)\n      (at ?person ?loc)\n    )\n    :effect (and\n      (prepared ?egg)\n      (prepared ?person)\n    )\n  )\n)\n```\n\nIn these actions, we have captured the relevant state changes for the task of frying an egg. The actions include preconditions and effects that reflect the changes in the state of the egg and the tools involved in the process. The actions are designed to be modular and can be extended or modified based on additional requirements or steps in the task.",
        "(:action fold_and_roll_wrapped\n    :parameters (?wrap - wrap ?filling - filling ?towel - towel)\n    :precondition (and (in_container ?filling) (in_container ?wrap) (clean ?towel))\n    :effect (and (folded ?wrap) (rolled ?wrap) (dirty ?towel))\n)\n```\n\n#### Action: be_amazed\n```lisp\n",
        "(:action assemble-ingredients\n    :parameters (?m - mixture)\n    :precondition (and (separate ?m))\n    :effect (and (mixed ?m) (not (separate ?m)))\n)\n\n",
        "(:action lay-eggs-and-tomatoes\n    :parameters (?e - eggs ?t - tomato ?d - dish)\n    :precondition (and (cooked ?e) (chopped ?t))\n    :effect (and (onDish ?e ?d) (onDish ?t ?d))\n)\n\n"
    ],
    "roll": [
        "(:action roll_balls\n    :parameters (?a - alice ?d - dough)\n    :precondition (and (location ?d on_counter) (temperature ?d warm))\n    :effect (location ?d balled)\n)\n\n"
    ],
    "finish": [
        "(:action finish_roti\n    :parameters (?p - player ?s - stove_knob ?v - velveeta)\n    :precondition (and (at ?p kitchen) (temperature ?s hot) (power ?s on) (texture ?v melted))\n    :effect (and (temperature ?s cool) (power ?s off) (texture ?v solid))\n)\n\n",
        "(:action finish-wreath\n    :parameters (?w - wreath)\n    :precondition (and (inProgress ?w))\n    :effect (and (completed ?w) (not (inProgress ?w)))\n)\n```\n\nExplanation:\n1. **assemble-ingredients**: Mixes the ingredients together.\n2. **add-ingredients-into-bowl**: Adds the eggs into a bowl and mixes them.\n3. **pour-oil-into-pan**: Pours oil into a pan.\n4. **cook-eggs**: Cooks the eggs in a pan.\n5. **chop-tomatoes**: Chops tomatoes and places them into a bowl.\n6. **heat-oil**: Heats the oil in the pan.\n7. **enhance-flavor**: Adds salt and sugar to the mixture to enhance its flavor.\n8. **toast-bread**: Toasts the bread.\n9. **lay-eggs-and-tomatoes**: Places the cooked eggs and chopped tomatoes on a dish.\n10. **finish-wreath**: Completes the wreath (assuming this is part of the breakfast decoration).\n\nThese actions and their respective preconditions and effects capture the state changes of the entities involved in the task.",
        "(:action repeat_roll\n    :parameters (?npc - npc ?rolling_board - location)\n    :precondition (and\n      (tucked ?wrapper ?filling)\n      (at ?npc ?rolling_board)\n    )\n    :effect (and\n      (rolls_finished)\n    )\n  )\n\n  ;; Action 6: Fry the egg rolls\n  "
    ],
    "remove": [
        "(:action remove_and_repeat_with_roti\n    :parameters (?p - player ?d - dough)\n    :precondition (and (at ?p kitchen) (location ?d in_pan) (texture ?d rigid))\n    :effect (and (location ?d on_counter) (temperature ?d warm))\n)\n\n",
        "(:action remove_from_heat\n    :parameters (?stove - appliance ?knob - appliance)\n    :precondition (and\n      (heated ?stove)\n      (at ?knob kitchen_stove)\n    )\n    :effect (and\n      (not (heated ?stove))\n    )\n  )\n\n  ;; Action: Shape Mixture into Ball Shape\n  ",
        "(:action drain_cooked\n    :parameters (?eggroll - eggroll ?npc - npc ?towel - towel)\n    :precondition (and (cooked ?eggroll) (clean ?towel))\n    :effect (and (drained ?eggroll) (dirty ?towel))\n)\n```\n\n### Summary of Entity States and Changes\n- **wrap**: `placement`, `location`, `cleanness`, `size`, `movement`\n- **mixing_bowl**: `location`, `volume`, `weight`, `composition`, `wetness`, `temperature`, `size`\n- **eggroll**: `location`, `temperature`, `texture`\n- **npc**: `decoration`, `visibility`\n- **towel**: `cleanness`, `color`, `wetness`, `weight`\n\nThese actions capture the step-by-step process of making egg rolls, focusing on the relevant state changes for each entity involved in the process.",
        "(:action brush_and_flatten_bread\n    :parameters (?bread - ingredient ?egg_wash - ingredient ?brush - tool ?table - location)\n    :precondition (and\n      (at ?bread ?table)\n      (at ?egg_wash ?table)\n      (at ?brush ?table)\n      (flattened ?bread)\n    )\n    :effect (and\n      (brushed ?bread ?egg_wash)\n    )\n  )\n\n;; Action 2: Spread egg wash over the bottom of an unbaked pie crust\n",
        "(:action peel_potatoes\n    :parameters (?potato - ingredient ?stove - appliance)\n    :precondition (and\n      (at ?potato kitchen_counter)\n      (at ?stove kitchen_stove)\n    )\n    :effect (and\n      (peeled ?potato)\n    )\n  )\n\n  ;; Action: Boil Potatoes\n  "
    ],
    "add": [
        "(:action add_wet_ingredients\n    :parameters (?wet_ingredients - ingredient ?bowl - container)\n    :precondition (and\n      (cooked ?vegetables)\n      (at ?wet_ingredients ?bowl)\n    )\n    :effect (and\n      (in ?wet_ingredients ?bowl)\n      (wet ?bowl)\n    )\n  )\n\n  ;; Action 3: Make the spring rolls\n  ",
        "(:action add-ingredients-into-bowl\n    :parameters (?e - eggs ?b - bowl)\n    :precondition (and (separate ?e) (empty ?b))\n    :effect (and (inBowl ?e ?b) (not (separate ?e)) (full ?b))\n)\n\n",
        "(:action seal_edges_pastry\n    :parameters (?pastry - ingredient ?egg_wash - ingredient ?brush - tool ?table - location)\n    :precondition (and\n      (at ?pastry ?table)\n      (at ?egg_wash ?table)\n      (at ?brush ?table)\n      (edges_unsealed ?pastry)\n    )\n    :effect (and\n      (edges_sealed ?pastry ?egg_wash)\n    )\n  )\n\n;; Action 4: Cover the top of the baked goods\n"
    ],
    "place": [
        "(:action tuck_wrapper\n    :parameters (?wrapper - object ?filling - ingredient ?table - location)\n    :precondition (and\n      (wrapped ?filling ?wrapper)\n      (at ?wrapper ?table)\n    )\n    :effect (and\n      (tucked ?wrapper ?filling)\n    )\n  )\n\n  ;; Action 5: Repeat until all the rolls are finished\n  ",
        "(:action place_in_container\n    :parameters (?wrap - wrap ?surface - flat_surface)\n    :precondition (and (at ?wrap ?surface) (not (in_container ?wrap)))\n    :effect (in_container ?wrap)\n)\n```\n\n#### Action: put_ingredients_in_container\n```lisp\n",
        "(:action place_in_fridge\n    :parameters (?egg - ingredient ?loc - location)\n    :precondition (and\n      (prepared ?egg)\n      (at ?egg ?loc)\n    )\n    :effect (and\n      (in-fridge ?egg)\n      (not (at ?egg ?loc))\n    )\n  )\n\n  ;; Action: Make Huevos Rancheros\n  ",
        "(:action place_in_sunlight ; place tin foil or metal pan in direct sunlight to heat up\n    :parameters (?object - heat ?p - npc ?l - location)\n    :precondition (and (at ?p ?l) (inventory ?p ?object) (is_metal ?object) (not (heated ?object)))\n    :effect (and (not (inventory ?p ?object)) (in_sunlight ?object) (heating ?object))\n)\n\n",
        "(:action put_ingredients_in_container\n    :parameters (?ingredient - filling ?bowl - mixing_bowl ?surface - table)\n    :precondition (and (at ?bowl ?surface) (not (in_container ?ingredient)))\n    :effect (in_container ?ingredient)\n)\n```\n\n#### Action: fold_and_roll_wrapped\n```lisp\n",
        "(:action pour-oil-into-pan\n    :parameters (?m - mixture ?p - pan)\n    :precondition (and (mixed ?m) (empty ?p))\n    :effect (and (inPan ?m ?p) (not (empty ?p)) (full ?p))\n)\n\n",
        "(:action pour_oil_into_pan\n    :parameters (?pan - utensil ?oil - ingredient ?stove - appliance ?knob - appliance)\n    :precondition (and\n      (at ?pan kitchen_stove)\n      (at ?oil kitchen_counter)\n      (at ?stove kitchen_stove)\n      (at ?knob kitchen_stove)\n      (clean ?pan)\n    )\n    :effect (and\n      (has_oil ?pan)\n      (dirty ?pan)\n    )\n  )\n\n  ;; Action: Remove from Heat\n  ",
        "(:action spread_egg_wash_pie_crust\n    :parameters (?pie_crust - ingredient ?egg_wash - ingredient ?brush - tool ?table - location)\n    :precondition (and\n      (at ?pie_crust ?table)\n      (at ?egg_wash ?table)\n      (at ?brush ?table)\n      (unbaked ?pie_crust)\n    )\n    :effect (and\n      (spread ?pie_crust ?egg_wash)\n    )\n  )\n\n;; Action 3: Seal the edges of pastry with egg wash\n",
        "(:action cover_baked_items\n    :parameters (?baked_goods - ingredient ?egg_wash - ingredient ?brush - tool ?table - location)\n    :precondition (and\n      (at ?baked_goods ?table)\n      (at ?egg_wash ?table)\n      (at ?brush ?table)\n      (baked ?baked_goods)\n    )\n    :effect (and\n      (covered ?baked_goods ?egg_wash)\n    )\n  )\n\n;; Action 5: Use the egg wash to secure seeds, sugar, or pastry\n",
        "(:action wrap_bread\n    :parameters (?bread - ingredient ?filling - ingredient)\n    :precondition (and\n      (cut ?bread)\n      (shaped ?filling)\n      (at ?bread kitchen_counter)\n      (at ?filling kitchen_counter)\n    )\n    :effect (and\n      (wrapped ?bread ?filling)\n    )\n  )\n\n  ;; Action: Deep Fry\n  "
    ],
    "serve": [
        "(:action serve\n    :parameters (?npc - npc ?kitchen - location)\n    :precondition (and\n      (fried ?egg_rolls)\n      (at ?npc ?kitchen)\n    )\n    :effect (and\n      (served ?egg_rolls)\n    )\n  )\n)\n```\n\nEach action captures the intended state changes and requirements for making crispy vegetable spring rolls. The steps have been translated into PDDL actions, focusing on the relevant state changes of the entities involved.",
        "(:action serve_potatoes\n    :parameters (?item - ingredient ?dish - dish ?sauce - ingredient)\n    :precondition (and\n      (fried ?item)\n      (at ?dish dining_table)\n    )\n    :effect (and\n      (in_dish ?item ?dish)\n      (not (fried ?item))\n    )\n  )\n)\n```\n\nThese actions reflect the steps and state changes necessary for making Indian Potato Bread Rolls, as described."
    ],
    "flip": [
        "(:action flip_and_eat\n    :parameters (?egg - ingredient ?pan - tool ?person - person ?loc - location)\n    :precondition (and\n      (fried ?egg)\n      (in-pan ?egg ?pan)\n      (at-tool ?pan ?loc)\n    )\n    :effect (and\n      (not (fried ?egg))\n      (cooked ?egg)\n      (not (in-pan ?egg ?pan))\n      (prepared ?egg)\n    )\n  )\n\n  ;; Action: Place in Fridge\n  ",
        "(:action discard_eggs ; discard the eggs when you're finished\n    :parameters (?egg1 - egg ?egg2 - egg ?p - npc ?l - location)\n    :precondition (and (at ?p ?l) (cracked ?egg1) (cracked ?egg2) (or (on_metal ?egg1) (on_sidewalk ?egg2)))\n    :effect (and (not (cracked ?egg1)) (not (cracked ?egg2)) (discarded ?egg1) (discarded ?egg2))\n)\n```\n\n### Explanation of PDDL Actions\n\n1. **wait_for_hot_day**:\n   - **Action Name**: wait_for_hot_day\n   - **Parameters**: `?p` (npc)\n   - **Preconditions**: The npc must be outside.\n   - **Effect**: It becomes a very hot day.\n\n2. **place_in_sunlight**:\n   - **Action Name**: place_in_sunlight\n   - **Parameters**: `?object` (heat), `?p` (npc), `?l` (location)\n   - **Preconditions**: The npc must be at location `?l`, have the `?object` in inventory, the object must be metal and not already heated.\n   - **Effect**: The object is placed in sunlight and starts heating.\n\n3. **crack_egg_on_metal**:\n   - **Action Name**: crack_egg_on_metal\n   - **Parameters**: `?egg` (egg), `?p` (npc), `?metal` (heat)\n   - **Preconditions**: The npc must have the egg in inventory, the metal object must be in sunlight and heating, and the item must be an egg.\n   - **Effect**: The egg is cracked and placed on the metal surface.\n\n4. **crack_egg_on_sidewalk**:\n   - **Action Name**: crack_egg_on_sidewalk\n   - **Parameters**: `?egg` (egg), `?p` (npc), `?l` (location)\n   - **Preconditions**: The npc must have the egg in inventory, be at location `?l`, the item must be an egg, and it must be a very hot day.\n   - **Effect**: The egg is cracked and placed on the sidewalk.\n\n5. **discard_eggs**:\n   - **Action Name**: discard_eggs\n   - **Parameters**: `?egg1` (egg), `?egg2` (egg), `?p` (npc), `?l` (location)\n   - **Preconditions**: The npc must be at location `?l`, both eggs must be cracked, and either egg must be on metal or sidewalk.\n   - **Effect**: Both eggs are discarded.\n\nThese actions accurately reflect the state changes and conditions required for each step of the task \"How to Fry an Egg on the Sidewalk.\""
    ],
    "wait": [
        "(:action wait_for_hot_day ; wait for a very hot day\n    :parameters (?p - npc)\n    :precondition (and (at ?p outside))\n    :effect (very_hot_day)\n)\n\n"
    ],
    "chop": [
        "(:action chop-tomatoes\n    :parameters (?t - tomato ?b - bowl)\n    :precondition (and (whole ?t) (empty ?b))\n    :effect (and (chopped ?t) (inBowl ?t ?b) (not (whole ?t)) (full ?b))\n)\n\n",
        "(:action cut_bread\n    :parameters (?bread - ingredient)\n    :precondition (and\n      (at ?bread kitchen_counter)\n    )\n    :effect (and\n      (cut ?bread)\n    )\n  )\n\n  ;; Action: Wrap Bread\n  "
    ],
    "toast": [
        "(:action toast-bread\n    :parameters (?b - bread)\n    :precondition (and (raw ?b))\n    :effect (and (toasted ?b) (not (raw ?b)))\n)\n\n"
    ],
    "secure": [
        "(:action secure_seeds_with_egg_wash\n    :parameters (?seeds - ingredient ?egg_wash - ingredient ?brush - tool ?table - location)\n    :precondition (and\n      (at ?seeds ?table)\n      (at ?egg_wash ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (secured ?seeds ?egg_wash)\n    )\n  )\n```\n\n### Explanation of Actions\n\n1. **brush_and_flatten_bread**:\n   - **Parameters**: Bread, egg wash, brush, table.\n   - **Preconditions**: The bread is flattened and all items are on the table.\n   - **Effect**: The bread is brushed with egg wash.\n\n2. **spread_egg_wash_pie_crust**:\n   - **Parameters**: Pie crust, egg wash, brush, table.\n   - **Preconditions**: The pie crust is unbaked and all items are on the table.\n   - **Effect**: The egg wash is spread over the pie crust.\n\n3. **seal_edges_pastry**:\n   - **Parameters**: Pastry, egg wash, brush, table.\n   - **Preconditions**: The pastry edges are unsealed and all items are on the table.\n   - **Effect**: The edges of the pastry are sealed with egg wash.\n\n4. **cover_baked_items**:\n   - **Parameters**: Baked goods, egg wash, brush, table.\n   - **Preconditions**: The baked goods are baked and all items are on the table.\n   - **Effect**: The baked goods are covered with egg wash.\n\n5. **secure_seeds_with_egg_wash**:\n   - **Parameters**: Seeds, egg wash, brush, table.\n   - **Preconditions**: All items are on the table.\n   - **Effect**: The seeds are secured with egg wash.\n\nThese actions reflect the steps and descriptions provided for making an egg wash and using it in various ways."
    ],
    "shape": [
        "(:action shape_into_ball_shape\n    :parameters (?mixture - ingredient)\n    :precondition (and\n      (at ?mixture kitchen_counter)\n    )\n    :effect (and\n      (shaped ?mixture)\n    )\n  )\n\n  ;; Action: Cut Bread\n  "
    ],
    "be": [
        "(:action be_amazed\n    :parameters (?npc - npc)\n    :precondition (and (cooked ?eggroll) (not (amazed ?npc)))\n    :effect (amazed ?npc)\n)\n```\n\n#### Action: heat_peanut_oil\n```lisp\n"
    ],
    "deep": [
        "(:action deep_fry\n    :parameters (?item - ingredient ?pan - utensil ?oil - ingredient)\n    :precondition (and\n      (wrapped ?item ?oil)\n      (has_oil ?pan)\n      (at ?pan kitchen_stove)\n      (heated ?stove)\n    )\n    :effect (and\n      (fried ?item)\n      (dirty ?pan)\n    )\n  )\n\n  ;; Action: Serve Potatoes\n  "
    ]
}