{
    "cook": [
        "(:action make_horizontal_bar\n    :parameters (?npc - npc ?beef - beef)\n    :precondition (and (inventory ?npc ?beef) (uncooked ?beef))\n    :effect (and (horizontal_bar ?beef) (not (uncooked ?beef)))\n)\n\n",
        "(:action make_cheese\n    :parameters (?npc - npc ?cheese - cheese)\n    :precondition (and (inventory ?npc ?cheese))\n    :effect (and (processed ?cheese))\n)\n\n",
        "(:action make_boiled_dish\n    :parameters (?pot - pot ?stove - stove)\n    :precondition (and (at ?pot ?stove) (on ?stove) (hot ?stove))\n    :effect (and (boiled ?pot))\n)\n\n",
        "(:action make_chuck\n  :parameters (?p - player ?gc - ground_cheese ?c - chuck)\n  :precondition (and (inventory ?p ?gc) (not (prepared ?c)))\n  :effect (and (prepared ?c) (not (inventory ?p ?gc)))\n)\n\n",
        "(:action make_polenta_recipe\n    :parameters (?alice - agent ?mixture - entity)\n    :precondition (and\n      (at_location ?mixture on_stove_top)\n      (step ?alice unselected)\n    )\n    :effect (and\n      (not (step ?alice unselected))\n      (step ?alice selected)\n      (composition ?mixture mixed)\n      (temperature ?mixture hotter)\n    )\n)\n\n; Action for Step 3\n",
        "(:action cook_beef\n    :parameters (?npc - npc ?beef - beef ?pot - pot)\n    :precondition (and (inventory ?npc ?beef) (at ?pot ?stove) (boiled ?pot))\n    :effect (and (cooked ?beef) (not (inventory ?npc ?beef)) (in ?beef ?pot))\n)\n\n",
        "(:action cook_burger\n    :parameters (?burger - ingredient)\n    :precondition (and\n      (seasoned ?burger)\n      (flattened ?burger)\n      (at ?burger in_pan)\n      (heated ?pan)\n    )\n    :effect (and\n      (cooked ?burger)\n      (not (raw ?burger))\n      (brown ?burger)\n    )\n)\n\n;; Action 5: Flatten the patties in the container\n",
        "(:action cook_patties\n    :parameters (?patties - ingredient ?stove - appliance)\n    :precondition (and\n      (flattened ?patties)\n      (at ?patties on_stove)\n      (heated ?stove)\n    )\n    :effect (and\n      (cooked ?patties)\n      (brown ?patties)\n      (not (raw ?patties))\n    )\n)\n```\n\nEach action reflects the state changes of the entities involved in the task, ensuring their preconditions and effects are properly defined.",
        "(:action cook_meat\n    :parameters (?p - player ?b - beef)\n    :precondition (and (at ?p kitchen) (in ?b pan) (raw ?b))\n    :effect (and (cooked ?b) (not (raw ?b)))\n)\n\n",
        "(:action cook_final\n    :parameters (?p - player ?k - kitchen)\n    :precondition (and (at ?p ?k) (finished ?b) (finished ?m) (finished ?bread))\n    :effect (and (meal_ready burger_bites))\n)\n```\n\n### Explanation of Actions:\n\n1. **defrost_mixture**:\n   - **Parameters**: ?m (mixture)\n   - **Precondition**: The mixture is in the freezer and is frozen.\n   - **Effect**: The mixture is defrosted and no longer frozen.\n\n2. **prepare_bread**:\n   - **Parameters**: ?p (player), ?b (bread), ?mb (mixing_bowl)\n   - **Precondition**: The player is in the kitchen, and the bread is in the mixing bowl.\n   - **Effect**: The bread is prepared and moved to the counter.\n\n3. **prepare_sauce**:\n   - **Parameters**: ?p (player), ?s (stove_knob), ?v (velveeta)\n   - **Precondition**: The player is in the kitchen, the velveeta is on the counter, and the stove knob is off.\n   - **Effect**: The velveeta is melted, the stove knob is turned on, and the velveeta is in the saucepan.\n\n4. **cook_meat**:\n   - **Parameters**: ?p (player), ?b (beef)\n   - **Precondition**: The player is in the kitchen, the beef is in the pan, and the beef is raw.\n   - **Effect**: The beef is cooked and no longer raw.\n\n5. **finish_meat**:\n   - **Parameters**: ?p (player), ?b (beef)\n   - **Precondition**: The player is in the kitchen, and the beef is cooked.\n   - **Effect**: The beef is finished and no longer just cooked.\n\n6. **finish_ingredients**:\n   - **Parameters**: ?p (player), ?b (bread)\n   - **Precondition**: The player is in the kitchen, and the bread is prepared.\n   - **Effect**: The bread is finished and no longer just prepared.\n\n7. **finish_mixture**:\n   - **Parameters**: ?p (player), ?m (mixture)\n   - **Precondition**: The player is in the kitchen, and the mixture is defrosted.\n   - **Effect**: The mixture is finished and no longer just defrosted.\n\n8. **cook_final**:\n   - **Parameters**: ?p (player), ?k (kitchen)\n   - **Precondition**: The player is in the kitchen, and the beef, bread, and mixture are all finished.\n   - **Effect**: The meal (burger bites) is ready.\n\nThese actions capture the necessary steps and state transitions required to make burger bites, as described in the task.",
        "(:action cook\n    :parameters (?p - player ?b - burger_patties ?g - grill)\n    :precondition (and (at ?p ?g) (at ?b ?g) (on ?g) (not (cooked ?b)))\n    :effect (cooked ?b)\n)\n\n",
        "(:action prepare_cheese\n    :parameters (?npc - npc ?cheese - cheese ?beef - beef)\n    :precondition (and (inventory ?npc ?cheese) (cooked ?beef))\n    :effect (and (with_cheese ?beef) (not (inventory ?npc ?cheese)))\n)\n\n",
        "(:action prepare_add_ingredients\n    :parameters (?burger - tool ?loc - location)\n    :precondition (and\n      (created ?burger)\n      (at-tool ?burger ?loc)\n    )\n    :effect (cooked ?burger)\n  )\n\n  ;; Action 10: Cover each with the top half of its bun\n  ",
        "(:action prepare_bread\n    :parameters (?p - player ?b - bread ?mb - mixing_bowl)\n    :precondition (and (at ?p kitchen) (in ?b ?mb))\n    :effect (and (prepared ?b) (not (in ?b ?mb)) (on ?b counter))\n)\n\n",
        "(:action prepare_sauce\n    :parameters (?p - player ?s - stove_knob ?v - velveeta)\n    :precondition (and (at ?p kitchen) (on ?v counter) (off ?s))\n    :effect (and (melted ?v) (on ?s) (in ?v saucepan))\n)\n\n",
        "(:action prepare_grill\n    :parameters (?p - player ?g - grill ?k - stove_knob)\n    :precondition (and (at ?p ?g) (off ?g) (off ?k))\n    :effect (and (on ?g) (on ?k))\n)\n\n",
        "(:action create_burger\n    :parameters (?bowl - tool ?loc - location)\n    :precondition (and\n      (mixed ?bowl)\n      (at-tool ?bowl ?loc)\n    )\n    :effect (created ?bowl)\n  )\n\n  ;; Action 7: Arrange the burgers on a plate\n  ",
        "(:action build_burger\n    :parameters (?bowl - tool ?loc - location)\n    :precondition (and\n      (created ?bowl)\n      (at-tool ?bowl ?loc)\n    )\n    :effect (and\n      (at-tool ?bowl ?loc)\n    )\n  )\n\n  ;; Action 8: Choose your cooking method\n  ",
        "(:action build_fire\n  :parameters (?p - player ?bh - brickhouse)\n  :precondition (and (at ?p ?bh) (not (fire ?bh)))\n  :effect (fire ?bh)\n)\n\n",
        "(:action form_into_ball\n  :parameters (?p - player ?gc - ground_cheese)\n  :precondition (and (inventory ?p ?gc) (prepared ?gc))\n  :effect (and (formed_ball ?gc) (not (inventory ?p ?gc)))\n)\n\n",
        "(:action form_patties\n  :parameters (?p - player ?pc - patty ?gc - ground_cheese)\n  :precondition (and (tight ?pc) (formed_ball ?gc))\n  :effect (and (formed_patties ?pc) (not (formed_ball ?gc)))\n)\n\n"
    ],
    "boil": [
        "(:action boil_corned_beef\n    :parameters (?npc - npc ?pot - pot ?stove - stove ?beef - beef)\n    :precondition (and (inventory ?npc ?beef) (at ?pot ?stove) (boiled ?pot) (cooked ?beef))\n    :effect (and (boiled_corned_beef ?beef) (not (inventory ?npc ?beef)) (in ?beef ?pot))\n)\n```\n\n### Explanation of Actions:\n\n1. **make_horizontal_bar**:\n   - **Parameters**: `?npc` (the player), `?beef` (the beef).\n   - **Preconditions**: The player has the beef and the beef is uncooked.\n   - **Effect**: The beef is made into a horizontal bar and is no longer uncooked.\n\n2. **make_cheese**:\n   - **Parameters**: `?npc` (the player), `?cheese` (the cheese).\n   - **Preconditions**: The player has the cheese.\n   - **Effect**: The cheese is processed.\n\n3. **make_boiled_dish**:\n   - **Parameters**: `?pot` (the pot), `?stove` (the stove).\n   - **Preconditions**: The pot is on the stove, and the stove is on and hot.\n   - **Effect**: The pot is boiled.\n\n4. **cook_beef**:\n   - **Parameters**: `?npc` (the player), `?beef` (the beef), `?pot` (the pot).\n   - **Preconditions**: The player has the beef, the pot is on the stove, and the pot is boiled.\n   - **Effect**: The beef is cooked and placed in the pot.\n\n5. **prepare_cheese**:\n   - **Parameters**: `?npc` (the player), `?cheese` (the cheese), `?beef` (the cooked beef).\n   - **Preconditions**: The player has the cheese, and the beef is cooked.\n   - **Effect**: The beef is prepared with cheese and the player no longer has the cheese.\n\n6. **boil_corned_beef**:\n   - **Parameters**: `?npc` (the player), `?pot` (the pot), `?stove` (the stove), `?beef` (the beef).\n   - **Preconditions**: The player has the beef, the pot is on the stove, the pot is boiled, and the beef is cooked.\n   - **Effect**: The corned beef is boiled and placed in the pot.\n\nThese actions reflect the steps and state changes required to boil corned beef, focusing on the key entities and their transitions.",
        "(:action smash_meat\n    :parameters (?meat - ingredient ?pan - tool)\n    :precondition (and\n      (at ?meat in_pan)\n      (at-tool ?pan on_stove)\n      (heated ?pan)\n    )\n    :effect (and\n      (flattened ?meat)\n      (in-pan ?meat ?pan)\n    )\n)\n\n;; Action 3: Season the burgers\n",
        "(:action flatten_patties\n    :parameters (?patties - ingredient ?container - tool)\n    :precondition (and\n      (at ?patties in_container)\n      (clean ?container)\n    )\n    :effect (and\n      (flattened ?patties)\n      (in-container ?patties ?container)\n    )\n)\n\n;; Action 6: Cook the patties on the stove\n",
        "(:action light-flavorful-toast\n    :parameters (?t - toast)\n    :precondition (untreated ?t)\n    :effect (and (lightly_toasted ?t) (flavorful ?t) (not (plain ?t)))\n  )\n\n  ",
        "(:action defrost_mixture\n    :parameters (?m - mixture)\n    :precondition (and (at ?m freezer) (frozen ?m))\n    :effect (and (not (frozen ?m)) (defrosted ?m))\n)\n\n"
    ],
    "finish": [
        "(:action start_with_meat\n    :parameters (?meat - ingredient ?loc - location)\n    :precondition (at ?meat ?loc)\n    :effect (and\n      (at ?meat ?loc)\n    )\n  )\n\n  ;; Action 2: Place the ground beef in a bowl\n  ",
        "(:action start_with_fresh_ground_chuck\n  :parameters (?p - player ?gc - ground_cheese)\n  :precondition (and (at ?p fridge) (at ?gc fridge) (closed fridge))\n  :effect (and (inventory ?p ?gc) (not (at ?gc fridge)) (open fridge))\n)\n\n",
        "(:action finish_meat\n    :parameters (?p - player ?b - beef)\n    :precondition (and (at ?p kitchen) (cooked ?b))\n    :effect (and (finished ?b) (not (cooked ?b)))\n)\n\n",
        "(:action finish_ingredients\n    :parameters (?p - player ?b - bread)\n    :precondition (and (at ?p kitchen) (prepared ?b))\n    :effect (and (finished ?b) (not (prepared ?b)))\n)\n\n",
        "(:action finish_mixture\n    :parameters (?p - player ?m - mixture)\n    :precondition (and (at ?p kitchen) (defrosted ?m))\n    :effect (and (finished ?m) (not (defrosted ?m)))\n)\n\n",
        "(:action finish_wreath\n  :parameters (?p - player ?w - wreath)\n  :precondition (and (in_progress ?w))\n  :effect (completed ?w)\n)\n```\n\n### Explanation of Actions:\n1. **start_with_fresh_ground_chuck**: This action involves starting with fresh ground cheese, taking it from the fridge.\n2. **make_chuck**: This action involves preparing the chuck.\n3. **chill_beef_patties**: This action involves chilling the beef patties.\n4. **season_meat**: This action involves seasoning the chilled beef patties.\n5. **form_into_ball**: This action involves forming the ground cheese into a ball.\n6. **pull_in_sides**: This action involves pulling in the sides of the patty to make it tight.\n7. **form_patties**: This action involves forming the tight ball into patties.\n8. **build_fire**: This action involves building a fire in the brickhouse.\n9. **place_burger_on_grill**: This action involves placing the seasoned beef patties on the grill.\n10. **check_doneness**: This action involves checking the doneness of the burger.\n11. **cook**: This action involves cooking the checked burger.\n12. **finish_wreath**: This action involves finishing the wreath.\n\nEach action captures the preconditions and effects accurately reflecting the state changes of the entities involved in the task."
    ],
    "place": [
        "(:action place_ingredients\n    :parameters (?beef - ingredient ?bowl - tool ?loc - location)\n    :precondition (and\n      (at ?beef ?loc)\n      (at-tool ?bowl ?loc)\n    )\n    :effect (and\n      (in ?beef ?bowl)\n      (not (at ?beef ?loc))\n    )\n  )\n\n  ;; Action 3: Roughly chop the onion and garlic\n  ",
        "(:action place_burger_on_grill\n  :parameters (?p - player ?bp - beef ?sk - stove_knob)\n  :precondition (and (seasoned ?bp) (fire ?sk))\n  :effect (and (on_grill ?bp) (not (seasoned ?bp)))\n)\n\n",
        "(:action wrap_bun\n    :parameters (?burger - tool ?loc - location)\n    :precondition (and\n      (cooked ?burger)\n      (at-tool ?burger ?loc)\n    )\n    :effect (wrapped ?burger)\n  )\n)\n```\n\nThis PDDL domain definition captures the steps required to cook a cheeseburger, including the state changes and the transitions of the entities involved in the task.",
        "(:action season_burgers\n    :parameters (?burgers - ingredient)\n    :precondition (and\n      (flattened ?burgers)\n      (in-pan ?burgers)\n    )\n    :effect (and\n      (seasoned ?burgers)\n    )\n)\n\n;; Action 4: Cook the burger\n",
        "(:action season_meat\n  :parameters (?p - player ?bp - beef)\n  :precondition (and (chilled ?bp))\n  :effect (seasoned ?bp)\n)\n\n",
        "(:action garnish-with-cheese\n    :parameters (?f - food ?c - container)\n    :precondition (and (inContainer ?f ?c) (full ?c))\n    :effect (and (garnished ?f) (not (ungarnished ?f)))\n  )\n)\n```\n\nExplanation of the actions:\n\n1. **gather-ingredients**: This action gathers the ingredients, changing their state from separate to mixed.\n2. **combine-ingredients**: This action combines the corned beef hash mixture into a mixing bowl, changing the state of the container from empty to full and placing the mixture inside the container.\n3. **light-flavorful-toast**: This action lightly toasts the bread, making it flavorful.\n4. **garnish-with-cheese**: This action garnishes the mixture with cheese, changing its state from ungarnished to garnished.\n\nThese actions reflect the state changes of the entities involved in the task of making corned beef hash."
    ],
    "choose": [
        "(:action choose_ingredient\n    :parameters (?ingredient - ingredient ?loc - location)\n    :precondition (at ?ingredient ?loc)\n    :effect (and\n      (chopped ?ingredient)\n      (not (at ?ingredient ?loc))\n    )\n  )\n\n  ;; Action 4: Add the egg yolk\n  ",
        "(:action choose_cooking_method\n    :parameters (?stove - appliance ?loc - location)\n    :precondition (at-appliance ?stove ?loc)\n    :effect (has-power ?stove)\n  )\n\n  ;; Action 9: While the burgers are cooking, prepare the toppings\n  ",
        "(:action choose_burger\n    :parameters (?p - player ?b - burger_patties)\n    :precondition (and (at ?p fridge) (in ?b fridge))\n    :effect (and (inventory ?p ?b) (not (in ?b fridge)))\n)\n\n",
        "(:action gather-ingredients\n    :parameters (?e - entity)\n    :precondition (separate ?e)\n    :effect (and (mixed ?e) (not (separate ?e)))\n  )\n\n  ",
        "(:action gather_ingredients\n    :parameters (?mixture - entity)\n    :precondition (and\n      (at_location ?mixture in_cabinet)\n    )\n    :effect (and\n      (not (at_location ?mixture in_cabinet))\n      (at_location ?mixture on_stove_top)\n    )\n)\n\n; Action for Step 2\n"
    ],
    "add": [
        "(:action add_ingredients\n    :parameters (?egg - ingredient ?bowl - tool ?loc - location)\n    :precondition (and\n      (at ?egg ?loc)\n      (at-tool ?bowl ?loc)\n    )\n    :effect (and\n      (in ?egg ?bowl)\n      (not (at ?egg ?loc))\n    )\n  )\n\n  ;; Action 5: Mix it all together\n  ",
        "(:action mix_ingredients\n    :parameters (?canola_oil - entity ?blender - entity)\n    :precondition (and\n      (at_location ?canola_oil in_drawer)\n      (power ?blender off)\n      (composition ?blender isolated)\n    )\n    :effect (and\n      (not (at_location ?canola_oil in_drawer))\n      (at_location ?canola_oil in_blender)\n      (power ?blender on)\n      (composition ?blender mixed)\n      (volume ?blender fuller)\n      (weight ?blender heavier)\n    )\n)\n\n; Action for Step 5\n",
        "(:action combine-ingredients\n    :parameters (?e - entity ?c - container)\n    :precondition (and (mixed ?e) (empty ?c))\n    :effect (and (inContainer ?e ?c) (full ?c) (not (empty ?c)))\n  )\n\n  ",
        "(:action stir_ingredients\n    :parameters (?cream_cheese - entity ?mixing_bowl - entity)\n    :precondition (and\n      (at_location ?cream_cheese in_container)\n      (at_location ?mixing_bowl empty)\n    )\n    :effect (and\n      (not (at_location ?cream_cheese in_container))\n      (at_location ?cream_cheese in_bowl)\n      (composition ?cream_cheese combined)\n      (composition ?mixing_bowl mixed)\n      (wetness ?mixing_bowl wetter)\n    )\n)\n\n; Action for Step 4\n"
    ],
    "chill": [
        "(:action chill_beef_patties\n  :parameters (?p - player ?bp - beef)\n  :precondition (and (inventory ?p ?bp) (not (chilled ?bp)))\n  :effect (and (chilled ?bp) (not (inventory ?p ?bp)))\n)\n\n"
    ],
    "pull": [
        "(:action pull_in_sides\n  :parameters (?p - player ?pc - patty)\n  :precondition (and (formed_ball ?pc) (not (tight ?pc)))\n  :effect (tight ?pc)\n)\n\n"
    ],
    "check": [
        "(:action check_doneness\n  :parameters (?p - player ?bp - beef)\n  :precondition (and (on_grill ?bp))\n  :effect (checked ?bp)\n)\n\n"
    ],
    "free": [
        "(:action free_patties\n    :parameters (?p - player ?b - burger_patties ?g - grill)\n    :precondition (and (inventory ?p ?b) (on ?g) (not (cooked ?b)))\n    :effect (and (at ?b ?g) (not (inventory ?p ?b)))\n)\n\n"
    ],
    "remove": [
        "(:action remove_burger\n    :parameters (?p - player ?b - burger_patties ?g - grill)\n    :precondition (and (at ?p ?g) (at ?b ?g) (cooked ?b))\n    :effect (and (inventory ?p ?b) (not (at ?b ?g)))\n)\n\n"
    ],
    "eat": [
        "(:action eat_burger\n    :parameters (?p - player ?b - burger_patties)\n    :precondition (and (inventory ?p ?b) (cooked ?b))\n    :effect (and (consumed ?b) (not (inventory ?p ?b)))\n)\n```\n\n### Explanation of Actions\n\n1. **choose_burger**:\n   - **Parameters**: `?p` (player), `?b` (burger patties)\n   - **Preconditions**: Player is at the fridge and the burger patties are in the fridge.\n   - **Effect**: Player has the burger patties in their inventory, and the patties are no longer in the fridge.\n\n2. **prepare_grill**:\n   - **Parameters**: `?p` (player), `?g` (grill), `?k` (stove knob)\n   - **Preconditions**: Player is at the grill, and both the grill and stove knob are off.\n   - **Effect**: Both the grill and stove knob are turned on.\n\n3. **free_patties**:\n   - **Parameters**: `?p` (player), `?b` (burger patties), `?g` (grill)\n   - **Preconditions**: Player has the burger patties in their inventory, the grill is on, and the patties are not cooked.\n   - **Effect**: Patties are placed on the grill, and they are no longer in the player's inventory.\n\n4. **cook**:\n   - **Parameters**: `?p` (player), `?b` (burger patties), `?g` (grill)\n   - **Preconditions**: Player is at the grill, the patties are on the grill, the grill is on, and the patties are not cooked.\n   - **Effect**: Patties are cooked.\n\n5. **remove_burger**:\n   - **Parameters**: `?p` (player), `?b` (burger patties), `?g` (grill)\n   - **Preconditions**: Player is at the grill, the patties are on the grill, and the patties are cooked.\n   - **Effect**: Player has the cooked patties in their inventory, and the patties are no longer on the grill.\n\n6. **eat_burger**:\n   - **Parameters**: `?p` (player), `?b` (burger patties)\n   - **Preconditions**: Player has the cooked patties in their inventory.\n   - **Effect**: Patties are consumed, and they are no longer in the player's inventory.\n```\n\nThese actions accurately reflect the steps and state changes involved in grilling a burger on a Foreman Grill."
    ],
    "serve": [
        "(:action serve_polenta\n    :parameters (?polenta - entity ?mixing_bowl - entity)\n    :precondition (and\n      (at_location ?polenta in_pan)\n      (temperature ?polenta hot)\n    )\n    :effect (and\n      (not (at_location ?polenta in_pan))\n      (at_location ?polenta in_bowl)\n      (not (at_location ?mixing_bowl empty))\n      (at_location ?mixing_bowl empty)\n    )\n)\n```\n\nEach action captures the necessary state changes for the entities involved in the task of cooking polenta, ensuring that the preconditions and effects reflect the transitions accurately."
    ]
}