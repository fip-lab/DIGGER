{
    "mix": [
        "(:action mix-dry-ingredients\n    :parameters (?m - mixture ?b - mixing_bowl ?p - pot)\n    :precondition (and (assembled ?m) (empty ?b) (clean ?p))\n    :effect (and (inBowl ?m ?b) (mixed ?m) (not (empty ?b)) (not (clean ?p)) (dirty ?p))\n)\n\n",
        "(:action add-salt-to-water\n    :parameters (?s - salt ?w - water)\n    :precondition (full ?w)\n    :effect (and (salted ?w) (not (full ?w)))\n)\n```\n\n### Explanation of Actions:\n\n1. **vary-grain-size**\n    - **Parameters:** `?g - grass_tinder`\n    - **Preconditions:** `full ?g` (The grass tinder is full)\n    - **Effects:** `not (full ?g)` (The grass tinder is no longer full), `empty ?g` (The grass tinder is now empty)\n\n2. **add-salt-to-painting**\n    - **Parameters:** `?s - salt`, `?p - paint`, `?o - canola_oil`\n    - **Preconditions:** `wet ?p` (The paint is wet), `inContainer ?o` (The canola oil is in a container)\n    - **Effects:** `salted ?p` (The paint is now salted), `not (wet ?p)` (The paint is no longer wet)\n\n3. **wait-1-2-minutes**\n    - **Parameters:** `?p - paint`, `?m - minutes`\n    - **Preconditions:** `wet ?p` (The paint is wet), `younger ?m` (The minutes are younger)\n    - **Effects:** `dry ?p` (The paint is dry), `older ?m` (The minutes are older)\n\n4. **add-salt-to-water**\n    - **Parameters:** `?s - salt`, `?w - water`\n    - **Preconditions:** `full ?w` (The water is full)\n    - **Effects:** `salted ?w` (The water is now salted), `not (full ?w)` (The water is no longer full)\n\nThese actions capture the state changes of the entities involved in the task of salt-speckling paper, focusing on the relevant attributes such as fullness, wetness, and the addition of salt.",
        "(:action seal-larger-beads\n    :parameters (?e - entity ?c - container)\n    :precondition (and (filled ?e) (empty ?c))\n    :effect (and (sealed ?c) (full ?c) (not (empty ?c)))\n)\n```\n\n### Explanation:\n1. **mix-ingredients**:\n   - **Parameters**: `?e1` for the entity (ingredients), `?b` for the mixing bowl.\n   - **Preconditions**: The ingredients are in separate packages, and the mixing bowl is empty.\n   - **Effects**: The ingredients become mixed, and the mixing bowl is filled.\n\n2. **add-ingredient**:\n   - **Parameters**: `?e` for the entity (mixed ingredients), `?c` for the food color.\n   - **Preconditions**: The ingredients are mixed, and the food color is separate.\n   - **Effects**: The ingredients are mixed with food color.\n\n3. **add-ingredients-to-frume-oil**:\n   - **Parameters**: `?u` for the user, `?e` for the entity (ingredients mixed with color).\n   - **Preconditions**: The user is selected, and the ingredients are mixed with color.\n   - **Effects**: Fragrance oil is added to the ingredients.\n\n4. **add-ingredients**:\n   - **Parameters**: `?e` for the entity (ingredients with fragrance), `?c` for the citric acid, `?cup` for the cup.\n   - **Preconditions**: Fragrance is added to the ingredients, and the citric acid is in the cup.\n   - **Effects**: Citric acid is added to the ingredients.\n\n5. **pour-salt-into-glass**:\n   - **Parameters**: `?e` for the entity (ingredients with citric acid), `?f` for the faucet, `?g` for the fizzy drink.\n   - **Preconditions**: Citric acid is added to the ingredients, the faucet is off, and the fizzy drink container is empty.\n   - **Effects**: The fizzy drink container is filled, and the faucet is turned on.\n\n6. **seal-larger-beads**:\n   - **Parameters**: `?e` for the entity (fizzy salts), `?c` for the container.\n   - **Preconditions**: The fizzy salts are filled, and the container is empty.\n   - **Effects**: The container is sealed and full.\n\nThese actions capture the steps and the state changes of the entities involved in the task of making fizzy salts.",
        "(:action string-letters\n    :parameters (?npc - npc ?t - track ?c - covering_tracks)\n    :precondition (lettersPainted ?npc)\n    :effect (and (stringed ?npc) (tracksCovered ?c ?t))\n)\n```\n\nExplanation of Actions:\n1. **gather-ingredients**: Gathers the ingredients for the salt dough and places them in a mixing bowl.\n2. **make-dough**: Mixes the ingredients in the mixing bowl to form dough.\n3. **knead-dough**: Kneads the dough to prepare it for shaping.\n4. **divide-dough**: Divides the dough into pieces based on the letters in the name.\n5. **shape-dough**: Shapes the dough into the letters of the name.\n6. **poke-holes**: Pokes holes in the top of each letter for stringing later.\n7. **decorate-room**: Decorates the living room.\n8. **bake-letters**: Bakes the shaped letters.\n9. **paint-letters**: Paints the baked letters and adds decorations.\n10. **string-letters**: Strings together all the letters to form the name banner and covers tracks.",
        "(:action blend-oil\n    :parameters (?n - npc)\n    :precondition (visible ?n)\n    :effect (and (oilBlended ?n) (not (visible ?n)) (invisible ?n))\n)\n\n"
    ],
    "pour": [
        "(:action pour-salt-into-bag\n    :parameters (?s - salt ?b - bag)\n    :precondition (and (onPaper ?s) (empty ?b))\n    :effect (and (inBag ?s ?b) (full ?b))\n)\n\n",
        "(:action place-mixture-in-container\n    :parameters (?u - user1 ?s - screw1 ?c - container1 ?m - mixture)\n    :precondition (and (mixed ?m) (clean ?c) (empty ?c))\n    :effect (and (inContainer ?m ?c) (full ?c) (lidScrewed ?s ?c) (not (empty ?c)))\n)\n\n",
        "(:action scrape-off-crust\n    :parameters (?c - crust ?b - mixing_bowl)\n    :precondition (and (heated ?b) (formedCrust ?b))\n    :effect (and (scraped ?c) (not (formedCrust ?b)))\n)\n\n",
        "(:action put-ingredients-in-bowl\n    :parameters (?u - user ?b - bowl ?s - salt)\n    :precondition (and (user ?u) (bowl ?b) (salt ?s) (empty ?b))\n    :effect (and (inBowl ?s ?b) (not (empty ?b)))\n)\n\n",
        "(:action set_area\n    :parameters (?a - area)\n    :precondition (unselected ?a)\n    :effect (and (selected ?a) (not (unselected ?a)))\n)\n\n",
        "(:action sprinkle_salt\n    :parameters (?p - papyrus)\n    :precondition (wet ?p)\n    :effect (and (salted ?p))\n)\n\n",
        "(:action cover-with-sheet\n    :parameters (?n - npc ?s - sheet ?t - track)\n    :precondition (and (plain ?n) (visible ?n) (inCabinet ?s) (present ?t))\n    :effect (and (camouflaged ?n) (invisible ?n) (onCountertop ?s) (absent ?t))\n)\n\n"
    ],
    "boil": [
        "(:action boil-water\n    :parameters (?n - agent ?w - water)\n    :precondition (and (cold ?w) (emptier ?w) (inPipes ?w))\n    :effect (and (hot ?w) (fuller ?w) (outOfFaucet ?w) (not (cold ?w)) (not (inPipes ?w)))\n)\n\n",
        "(:action wet_paper\n    :parameters (?npc - npc ?p - papyrus)\n    :precondition (and (dry ?p) (visible ?npc))\n    :effect (and (wet ?p) (not (dry ?p)))\n)\n\n",
        "(:action dry_painting\n    :parameters (?p - papyrus)\n    :precondition (salted ?p)\n    :effect (and (dry ?p) (not (wet ?p)))\n)\n\n",
        "(:action heat-liquid\n    :parameters (?n - agent ?l - liquid)\n    :precondition (and (onStove ?l) (cooler ?l))\n    :effect (and (hotter ?l) (reduced ?l) (not (cooler ?l)))\n)\n\n",
        "(:action dissolve-salt\n    :parameters (?w - water ?f - faucet ?s - salt)\n    :precondition (and (water ?w) (faucet ?f) (salt ?s) (power ?f off) (cold ?w))\n    :effect (and (power ?f on) (hot ?w) (dissolved ?s))\n)\n\n",
        "(:action vary-grain-size\n    :parameters (?g - grass_tinder)\n    :precondition (full ?g)\n    :effect (and (not (full ?g)) (empty ?g))\n)\n\n"
    ],
    "keep": [
        "(:action keep-process-going\n    :parameters (?p - process)\n    :precondition (and (unfinished ?p))\n    :effect (and (ongoing ?p))\n)\n\n"
    ],
    "drain": [
        "(:action drain-lemon-salt\n    :parameters (?c - crust ?n - npc)\n    :precondition (and (inBowl ?c) (juicy ?c))\n    :effect (and (drained ?c) (dry ?c))\n)\n\n"
    ],
    "eat": [
        "(:action eat-cheese\n    :parameters (?c - crust ?n - npc)\n    :precondition (and (inContainer ?c) (not (empty ?c)))\n    :effect (and (eaten ?c) (not (full ?v)))\n)\n```\n\n### Explanation of Actions:\n\n1. **mix-lemon-juice-and-salt**: Mixes lemon juice and salt in a mixing bowl.\n   - Preconditions: The mixing bowl must be empty, and the lemon juice and salt must be measured.\n   - Effects: The lemon juice and salt are now in the bowl and mixed.\n\n2. **place-mixture-on-stove**: Places the mixed lemon juice and salt on the stove and turns the stove on.\n   - Preconditions: The mixture must be ready, and the stove must be off.\n   - Effects: The mixture is now on the stove and heating.\n\n3. **scrape-off-crust**: Scrapes off the crust formed on the mixture.\n   - Preconditions: The mixture must be heated and have formed a crust.\n   - Effects: The crust is scraped off.\n\n4. **place-crust-in-bowl**: Places the scraped crust into a clean bowl.\n   - Preconditions: The crust must be scraped, and the clean bowl must be empty.\n   - Effects: The crust is now in the clean bowl.\n\n5. **boil-water**: Boils water in a pot on the stove.\n   - Preconditions: The water must be in the pot, and the pot must be on the stove.\n   - Effects: The water is boiled, and the pot is hot.\n\n6. **keep-process-going**: Keeps the boiling process ongoing.\n   - Preconditions: The process must be unfinished.\n   - Effects: The process continues.\n\n7. **drain-lemon-salt**: Drains the lemon salt from the crust.\n   - Preconditions: The crust must be in the bowl and juicy.\n   - Effects: The crust is now drained and dry.\n\n8. **put-crust-in-container**: Puts the dried crust into a container.\n   - Preconditions: The crust must be drained, and the container must be empty.\n   - Effects: The crust is now in the container, and the container is full.\n\n9. **eat-cheese**: Eats the cheese (crust) little by little.\n   - Preconditions: The crust must be in the container and not empty.\n   - Effects: The crust is eaten, and the container is no longer full.\n\nThese actions reflect the state changes of the entities involved in the task of making lemon salt."
    ],
    "create": [
        "(:action create_painting\n    :parameters (?w - watercolors ?p - papyrus)\n    :precondition (and (wet ?p) (dry ?w))\n    :effect (and (wet ?w) (painted ?p) (not (dry ?w)))\n)\n\n",
        "(:action make-dough\n    :parameters (?npc - npc ?b - mixing_bowl)\n    :precondition (and (inBowl ?b) (holdingFlourAndSalt ?b))\n    :effect (and (mixed ?b) (not (holdingFlourAndSalt ?b)))\n)\n\n",
        "(:action knead-dough\n    :parameters (?d - dough ?b - mixing_bowl)\n    :precondition (and (mixed ?b) (inBowl ?d ?b))\n    :effect (and (kneaded ?d) (not (inBowl ?d ?b)))\n)\n\n",
        "(:action bake-letters\n    :parameters (?npc - npc ?d - dough)\n    :precondition (and (shaped ?d) (lettersFormed ?npc))\n    :effect (and (baked ?d) (lettersBaked ?npc))\n)\n\n",
        "(:action paint-letters\n    :parameters (?npc - npc ?d - dough)\n    :precondition (lettersBaked ?npc)\n    :effect (and (painted ?d) (lettersPainted ?npc))\n)\n\n",
        "(:action assemble-ingredients\n    :parameters (?m - mixture)\n    :precondition (separate ?m)\n    :effect (and (assembled ?m) (not (separate ?m)))\n)\n\n"
    ],
    "tip": [
        "(:action tip_paper_add_salt\n    :parameters (?npc - npc ?p - papyrus)\n    :precondition (and (dry ?p) (salted ?p))\n    :effect (and (excess_salt_removed ?p))\n)\n\n"
    ],
    "finish": [
        "(:action finish_wreath\n    :parameters (?w - wreath-1)\n    :precondition (in_progress ?w)\n    :effect (and (completed ?w) (not (in_progress ?w)))\n)\n```\n\nEach action is designed to reflect the changes in the state of the entities involved in the task, following the structure and logic provided in the example."
    ],
    "gather": [
        "(:action gather-ingredients\n    :parameters (?s - salt_dough ?b - mixing_bowl)\n    :precondition (and (inPantry ?s) (empty ?b))\n    :effect (and (inBowl ?s ?b) (not (inPantry ?s)) (not (empty ?b)) (holdingFlourAndSalt ?b))\n)\n\n",
        "(:action select-flavorful-liquid\n    :parameters (?a - agent ?f - flavor)\n    :precondition (and (unselected ?f) (nameless ?f))\n    :effect (and (selected ?f) (named ?f) (not (unselected ?f)) (not (nameless ?f)))\n)\n\n",
        "(:action choose-chalk-color\n    :parameters (?a - agent ?c - chalk)\n    :precondition (and (unselected ?a) (nameless ?a))\n    :effect (and (selected ?a) (named ?a))\n)\n\n",
        "(:action get-done\n    :parameters (?n - npc)\n    :precondition (and (camouflaged ?n) (invisible ?n))\n    :effect (and (done ?n))\n)\n```\n\n### Explanation of Actions\n\n1. **choose-chalk-color**:\n   - **Parameters**: ?a (agent, e.g., Alice), ?c (chalk)\n   - **Preconditions**: The agent must be unselected and nameless.\n   - **Effect**: The agent becomes selected and named.\n\n2. **cover-with-sheet**:\n   - **Parameters**: ?n (npc), ?s (sheet), ?t (track)\n   - **Preconditions**: The NPC is plain and visible, the sheet is in the cabinet, and the track is present.\n   - **Effect**: The NPC becomes camouflaged and invisible, the sheet is placed on the countertop, and the track is absent.\n\n3. **pour-salt-onto-paper**:\n   - **Parameters**: ?s (salt), ?p (paper), ?t (table)\n   - **Preconditions**: The table is clear, and the paper is empty.\n   - **Effect**: The salt is on the paper, and the table becomes cluttered.\n\n4. **place-chalk-on-table**:\n   - **Parameters**: ?c (chalk), ?t (table)\n   - **Preconditions**: The chalk is dry, and the table is clear.\n   - **Effect**: The chalk is placed on the table, and the table becomes cluttered.\n\n5. **pour-salt-into-bag**:\n   - **Parameters**: ?s (salt), ?b (bag)\n   - **Preconditions**: The salt is on the paper, and the bag is empty.\n   - **Effect**: The salt is in the bag, and the bag becomes full.\n\n6. **get-done**:\n   - **Parameters**: ?n (npc)\n   - **Preconditions**: The NPC is camouflaged and invisible.\n   - **Effect**: The task is marked as done for the NPC.\n\nThese actions capture the steps and the changes in the states of the entities involved in making colored salt."
    ],
    "divide": [
        "(:action divide-dough\n    :parameters (?d - dough ?npc - npc)\n    :precondition (kneaded ?d)\n    :effect (and (divided ?d) (lettersCreated ?npc))\n)\n\n"
    ],
    "shape": [
        "(:action shape-dough\n    :parameters (?d - dough ?npc - npc)\n    :precondition (divided ?d)\n    :effect (and (shaped ?d) (lettersFormed ?npc))\n)\n\n"
    ],
    "poke": [
        "(:action poke-holes\n    :parameters (?l - letter)\n    :precondition (shaped ?l)\n    :effect (and (holesPoked ?l))\n)\n\n"
    ],
    "decorate": [
        "(:action decorate-room\n    :parameters (?r - livingroom)\n    :precondition (unmade ?r)\n    :effect (and (decorated ?r) (not (unmade ?r)))\n)\n\n"
    ],
    "take": [
        "(:action take-bath\n    :parameters (?n - npc ?w - water ?s - salt)\n    :precondition (and (npc ?n) (water ?w) (salt ?s) (dissolved ?s))\n    :effect (and (relaxed ?n) (unwound ?n))\n)\n```\n\n### Explanation:\n1. **put-ingredients-in-bowl**:\n   - **Parameters**: User, bowl, salt.\n   - **Preconditions**: The bowl is empty.\n   - **Effect**: The salt is now in the bowl, and the bowl is no longer empty.\n\n2. **add-salt-to-leaves**:\n   - **Parameters**: Alice, salt, leaves.\n   - **Preconditions**: Alice has the salt, and it is in the bowl.\n   - **Effect**: The leaves are now seasoned.\n\n3. **mix-salt-and-oil**:\n   - **Parameters**: Mixture, glass container, salt, oil.\n   - **Preconditions**: The mixture is separate.\n   - **Effect**: The mixture is now mixed, and it is in the glass container which is now full.\n\n4. **dissolve-salt**:\n   - **Parameters**: Water, faucet, salt.\n   - **Preconditions**: The faucet is off, and the water is cold.\n   - **Effect**: The faucet is turned on, the water becomes hot, and the salt is dissolved.\n\n5. **take-bath**:\n   - **Parameters**: NPC, water, salt.\n   - **Preconditions**: The salt is dissolved in the water.\n   - **Effect**: The NPC is relaxed and unwound after the bath."
    ],
    "use": [
        "(:action use-bath-salt\n    :parameters (?a - alice ?b - bath_salt)\n    :precondition (and (inContainer ?b ?c) (full ?c))\n    :effect (and (used ?b) (not (full ?c)) (empty ?c))\n)\n```\n\n### Descriptions of PDDL Actions:\n\n1. **assemble-ingredients**:\n    - **Parameters**: `?m` - mixture\n    - **Preconditions**: The mixture is separate.\n    - **Effects**: The mixture is assembled and no longer separate.\n\n2. **mix-dry-ingredients**:\n    - **Parameters**: `?m` - mixture, `?b` - mixing bowl, `?p` - pot\n    - **Preconditions**: The mixture is assembled, the mixing bowl is empty, and the pot is clean.\n    - **Effects**: The mixture is in the bowl, mixed, the bowl is no longer empty, and the pot becomes dirty.\n\n3. **add-ingredients**:\n    - **Parameters**: `?e` - essential oil, `?o` - oil, `?b` - bottle1\n    - **Preconditions**: The essential oil and oil are in their respective bottles, and the target bottle is empty.\n    - **Effects**: The essential oil and oil are added to the target bottle, making it full.\n\n4. **add-drops-to-drink**:\n    - **Parameters**: `?m` - mixture\n    - **Preconditions**: The mixture is mixed.\n    - **Effects**: The mixture becomes flavored and is no longer plain.\n\n5. **place-mixture-in-container**:\n    - **Parameters**: `?u` - user1, `?s` - screw1, `?c` - container1, `?m` - mixture\n    - **Preconditions**: The mixture is mixed, the container is clean and empty.\n    - **Effects**: The mixture is placed in the container, the container is full, and the lid is screwed on.\n\n6. **blend-oil**:\n    - **Parameters**: `?n` - npc\n    - **Preconditions**: The NPC is visible.\n    - **Effects**: The oil is blended by the NPC, and the NPC becomes invisible.\n\n7. **use-bath-salt**:\n    - **Parameters**: `?a` - alice, `?b` - bath_salt\n    - **Preconditions**: The bath salt is in the container and the container is full.\n    - **Effects**: The bath salt is used, and the container becomes empty.\n\nThese actions capture the essential steps and state changes required to make Sandalwood Bath Salts, ensuring that the task is accurately represented in PDDL."
    ],
    "wait": [
        "(:action wait-1-2-minutes\n    :parameters (?p - paint ?m - minutes)\n    :precondition (and (wet ?p) (younger ?m))\n    :effect (and (dry ?p) (older ?m))\n)\n\n"
    ]
}