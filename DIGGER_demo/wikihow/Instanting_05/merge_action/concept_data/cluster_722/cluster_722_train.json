{
    "drink": [
        "(:action drink_water\n    :parameters (?npc - person)\n    :precondition (and (alive ?npc) (dehydrated ?npc))\n    :effect (and (not (dehydrated ?npc)) (hydrated ?npc))\n)\n\n"
    ],
    "take": [
        "(:action take_antibiotics\n    :parameters (?npc - person)\n    :precondition (and (alive ?npc) (infected ?npc))\n    :effect (and (not (infected ?npc)) (treated_infection ?npc))\n)\n\n"
    ],
    "get": [
        "(:action get_hormonal_treatment\n    :parameters (?npc - person)\n    :precondition (and (alive ?npc) (hormonal_imbalance ?npc))\n    :effect (and (not (hormonal_imbalance ?npc)) (balanced_hormones ?npc))\n)\n\n",
        "(:action get_immediate_care\n    :parameters (?npc - entity)\n    :precondition (and)\n    :effect (and (received_immediate_care ?npc))\n)\n\n",
        "(:action get_eraser\n    :parameters (?npc - person)\n    :precondition (and (not (has_eraser ?npc)))\n    :effect (and (has_eraser ?npc))\n)\n\n",
        "(:action get_treatment_for_ganglion_cyst\n    :parameters (?npc - person)\n    :precondition (and (not (treated_ganglion_cyst ?npc)))\n    :effect (and (treated_ganglion_cyst ?npc))\n)\n\n",
        "(:action get_medical_attention\n    :parameters (?npc - npc ?lemon - lemon)\n    :precondition (and (inventory ?npc ?lemon))\n    :effect (and (medical_attention_received ?npc))\n)\n\n",
        "(:action call_doctor\n    :parameters (?npc - person ?philly - location)\n    :precondition (and (at ?npc ?philly) (not (called ?npc)))\n    :effect (and (called ?npc) (not (at ?npc ?philly)))\n)\n\n"
    ],
    "remove": [
        "(:action remove_cysts\n    :parameters (?npc - person)\n    :precondition (and (alive ?npc) (cysts_present ?npc))\n    :effect (and (not (cysts_present ?npc)) (cysts_removed ?npc))\n)\n```\n\n### Descriptions:\n1. **drink_water**: The action of drinking water will hydrate the npc.\n2. **take_antibiotics**: The action of taking antibiotics will treat any infection in the npc.\n3. **get_hormonal_treatment**: The action of getting hormonal treatment will balance the npc's hormones.\n4. **remove_cysts**: The action of surgically removing the cysts will ensure that the cysts are no longer present in the npc.\n\n### Entity State Transitions:\n- **npc**:\n  - **hydrated**: (hydrated ?npc) vs. (dehydrated ?npc)\n  - **infection**: (infected ?npc) vs. (treated_infection ?npc)\n  - **hormonal balance**: (hormonal_imbalance ?npc) vs. (balanced_hormones ?npc)\n  - **cysts**: (cysts_present ?npc) vs. (cysts_removed ?npc)\n\nThese actions reflect the steps and state changes required to treat breast cysts in a medical context.",
        "(:action remove_surgery\n    :parameters (?npc - patient)\n    :precondition (and (checked_symptoms ?npc) (not (surgery_done ?npc)))\n    :effect (surgery_done ?npc)\n)\n\n",
        "(:action clean_area\n  :parameters (?a - area)\n  :precondition (and (not (clean ?a)))\n  :effect (and (clean ?a))\n)\n\n"
    ],
    "place": [
        "(:action place_bandage_over_cyst\n  :parameters (?user - person ?bandage - bandage ?cyst - cyst)\n  :precondition (and (inventory ?user ?bandage) (draining ?cyst) (not (bandaged ?cyst)))\n  :effect (and (bandaged ?cyst))\n)\n\n"
    ],
    "leave": [
        "(:action leave_it_alone\n  :parameters (?p - person ?cyst - cyst)\n  :precondition (and (not (interfering ?p ?cyst)))\n  :effect (and (not (infected ?cyst)))\n)\n```\n\n### Descriptions for Clarity:\n1. **apply_warm_compress**:\n   - **Action Name**: apply_warm_compress\n   - **Parameters**: \n     - ?p - person (e.g., Alice)\n     - ?compress - compress (e.g., warm compress)\n   - **Preconditions**: \n     - The person has the compress in their inventory.\n     - The compress has not been applied yet.\n   - **Effect**: \n     - The compress is applied.\n     - The person experiences relief.\n\n2. **clean_area**:\n   - **Action Name**: clean_area\n   - **Parameters**: \n     - ?a - area (e.g., area1)\n   - **Preconditions**: \n     - The area is not clean.\n   - **Effect**: \n     - The area becomes clean.\n\n3. **place_bandage_over_cyst**:\n   - **Action Name**: place_bandage_over_cyst\n   - **Parameters**: \n     - ?user - person (e.g., user1)\n     - ?bandage - bandage\n     - ?cyst - cyst\n   - **Preconditions**: \n     - The person has the bandage in their inventory.\n     - The cyst is draining.\n     - The cyst is not bandaged.\n   - **Effect**: \n     - The cyst is bandaged.\n\n4. **leave_it_alone**:\n   - **Action Name**: leave_it_alone\n   - **Parameters**: \n     - ?p - person (e.g., npc)\n     - ?cyst - cyst\n   - **Preconditions**: \n     - The person is not interfering with the cyst.\n   - **Effect**: \n     - The cyst does not get infected.\n\nThese actions capture the state changes and logical flow of the task \"How to Drain a Cyst\" while adhering to the PDDL format and structure."
    ],
    "check": [
        "(:action monitor_pelvic_pain\n    :parameters (?npc - npc ?ovarian_customies - ovarian_customies)\n    :precondition (and (aware ?npc) (symptoms_present ?ovarian_customies))\n    :effect (and (monitoring_pain ?npc) (informed_pain ?npc))\n)\n\n",
        "(:action check_symptoms\n    :parameters (?npc - patient)\n    :precondition (not (checked_symptoms ?npc))\n    :effect (checked_symptoms ?npc)\n)\n\n",
        "(:action check_knee_is_injured\n    :parameters (?y - person)\n    :precondition (and (kneePain ?y) (not (checked ?y)))\n    :effect (and (checked ?y) (possibleBakersCyst ?y))\n)\n\nExplanation:\n1. **treat_small_cysts**: This action is for treating small skin cysts using heat. The precondition checks if the person has a small cyst and has not been treated yet. The effect is that the person is treated and no longer has the small cyst.\n2. **visibility**: This action is for checking the visibility of a lump on the wrist. The precondition checks if there is a lump on the wrist and it is not visible. The effect is that the lump becomes visible.\n3. **check_knee_is_injured**: This action is for checking if the knee is injured, indicating a possible Baker\u2019s cyst. The precondition checks if the person has knee pain and has not checked it yet. The effect is that the knee is checked and there is a possibility of a Baker\u2019s cyst.\n\nThese actions are designed to reflect the steps and descriptions provided for the task \"How to Prevent Cysts\".",
        "(:action listen_to_shelter\n    :parameters (?npc - person)\n    :precondition (and (informed ?npc) (not (listened ?npc)))\n    :effect (and (listened ?npc) (consideration ?npc))\n)\n\n",
        "(:action listen_to_doctor\n    :parameters (?you - person ?doctor - doctor)\n    :precondition (and (knowledgeable ?doctor))\n    :effect (and (received_advice ?you ?doctor))\n)\n\n"
    ],
    "schedule": [
        "(:action schedule_check\n    :parameters (?npc - npc)\n    :precondition (and (informed_pain ?npc) (informed_symptoms ?npc) (informed_risk_factors ?npc))\n    :effect (scheduled_appointment ?npc)\n)\n```\n\n### Descriptions of Each Action:\n\n1. **monitor_pelvic_pain**: \n    - **Parameters**: `?npc` (non-player character), `?ovarian_customies` (ovarian customies).\n    - **Preconditions**: The npc must be aware and the ovarian customies must have symptoms present.\n    - **Effect**: The npc starts monitoring pelvic pain and becomes informed about the pain.\n\n2. **check_symptoms**:\n    - **Parameters**: `?npc` (non-player character), `?ovarian_customies` (ovarian customies).\n    - **Preconditions**: The npc must be aware and the ovarian customies must have symptoms present.\n    - **Effect**: The npc checks symptoms and becomes informed about the symptoms.\n\n3. **be_informed**:\n    - **Parameters**: `?npc` (non-player character).\n    - **Preconditions**: The npc must be aware.\n    - **Effect**: The npc becomes informed about the risk factors.\n\n4. **schedule_check**:\n    - **Parameters**: `?npc` (non-player character).\n    - **Preconditions**: The npc must be informed about the pain, symptoms, and risk factors.\n    - **Effect**: The npc schedules a doctor's appointment.\n\nThese actions capture the process of monitoring, checking symptoms, being informed, and scheduling a check-up for ovarian cysts, reflecting the state changes in terms of awareness and information of the npc."
    ],
    "consider": [
        "(:action treat_small_cysts\n    :parameters (?p - person)\n    :precondition (and (hasSmallCyst ?p) (not (treated ?p)))\n    :effect (and (treated ?p) (not (hasSmallCyst ?p)))\n)\n\n",
        "(:action treat_gastro_stratified\n    :parameters (?person_treated - person)\n    :precondition (and (not (treated_gastro_stratified ?person_treated)))\n    :effect (and (treated_gastro_stratified ?person_treated))\n)\n\n",
        "(:action consider_minimally_invasive_procedures\n    :parameters (?npc - entity)\n    :precondition (and (consulted_doctor ?npc))\n    :effect (and (minimally_invasive_procedures_considered ?npc))\n)\n\n",
        "(:action consider_surgery\n    :parameters (?npc - entity)\n    :precondition (and (fibroids_interfering ?npc))\n    :effect (and (surgery_considered ?npc))\n)\n```\n\nDescriptions and Entity State Transitions:\n\n1. `get_immediate_care`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: None\n   - **Effect**: The NPC has received immediate care (`received_immediate_care ?npc`).\n\n2. `see_doctor_for_pain`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The NPC has persistent pain (`has_persistent_pain ?npc`).\n   - **Effect**: The NPC has consulted a doctor (`consulted_doctor ?npc`).\n\n3. `ask_doctor_for_medication`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The NPC has consulted a doctor (`consulted_doctor ?npc`).\n   - **Effect**: Medication has been discussed with the NPC (`medication_discussed ?npc`).\n\n4. `discuss_hormonal_contraceptives`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The NPC has consulted a doctor (`consulted_doctor ?npc`).\n   - **Effect**: Hormonal contraceptives have been discussed (`hormonal_contraceptives_discussed ?npc`).\n\n5. `ask_about_FUS`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The NPC has consulted a doctor (`consulted_doctor ?npc`).\n   - **Effect**: MRI-guided focused ultrasound surgery (FUS) has been discussed (`FUS_discussed ?npc`).\n\n6. `consider_minimally_invasive_procedures`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The NPC has consulted a doctor (`consulted_doctor ?npc`).\n   - **Effect**: Minimally-invasive procedures have been considered (`minimally_invasive_procedures_considered ?npc`).\n\n7. `consider_surgery`\n   - **Parameters**: `?npc` (entity)\n   - **Preconditions**: The fibroids are interfering with the NPC's life (`fibroids_interfering ?npc`).\n   - **Effect**: Surgery has been considered (`surgery_considered ?npc`).",
        "(:action consider_hemorrhoidectomy\n    :parameters (?person - person ?doctor - doctor ?bathroom - bathroom)\n    :precondition (and (received_advice ?person ?doctor) (in ?person ?bathroom))\n    :effect (and (considering_surgery ?person))\n)\n```\n\n### Descriptions:\n\n1. **Seek medical attention for severe hemorrhoids:**\n   - Action: `get_medical_attention`\n   - Parameters: `?npc` (npc), `?lemon` (lemon)\n   - Preconditions: `?npc` must have `?lemon` in their inventory.\n   - Effects: `?npc` has received medical attention.\n\n2. **Discuss non-surgical treatment options with your doctor:**\n   - Action: `listen_to_doctor`\n   - Parameters: `?you` (person), `?doctor` (doctor)\n   - Preconditions: The `?doctor` must be knowledgeable.\n   - Effects: `?you` has received advice from the `?doctor`.\n\n3. **Consider having a hemorrhoidectomy:**\n   - Action: `consider_hemorrhoidectomy`\n   - Parameters: `?person` (person), `?doctor` (doctor), `?bathroom` (bathroom)\n   - Preconditions: `?person` has received advice from the `?doctor` and is in the `?bathroom`.\n   - Effects: `?person` is considering surgery.\n\n### Entity State Transitions:\n\n- **doctor:**\n  - `knowledgeable`: Indicates the doctor is capable of providing advice.\n\n- **person:**\n  - `received_advice`: The person has received medical advice from the doctor.\n  - `considering_surgery`: The person is considering undergoing surgery.\n\n- **npc:**\n  - `medical_attention_received`: The npc has received medical attention.\n\n- **bathroom:**\n  - `in`: Indicates the location of the person.\n\n### Notes:\n- The step \"be_injured person bathroom npc\" does not seem relevant to the task and has been replaced with a more appropriate action, \"consider_hemorrhoidectomy\".\n- The entity states have been adjusted to fit the context of the task."
    ],
    "see": [
        "(:action see_doctor_for_pain\n    :parameters (?npc - entity)\n    :precondition (and (has_persistent_pain ?npc))\n    :effect (and (consulted_doctor ?npc))\n)\n\n"
    ],
    "ask": [
        "(:action ask_doctor_for_medication\n    :parameters (?npc - entity)\n    :precondition (and (consulted_doctor ?npc))\n    :effect (and (medication_discussed ?npc))\n)\n\n",
        "(:action ask_about_FUS\n    :parameters (?npc - entity)\n    :precondition (and (consulted_doctor ?npc))\n    :effect (and (FUS_discussed ?npc))\n)\n\n",
        "(:action ask_doctor_about_removal\n    :parameters (?you - person ?npc - doctor)\n    :precondition (and (called ?npc) (not (asked ?you)))\n    :effect (and (asked ?you) (informed ?you))\n)\n\n",
        "(:action ask_about_hormonal_treat\n    :parameters (?npc - patient)\n    :precondition (and (checked_symptoms ?npc) (not (hormonal_treatment_discussed ?npc)))\n    :effect (hormonal_treatment_discussed ?npc)\n)\n```\n\n### Descriptions and State Changes:\n\n1. **Check Symptoms**:\n   - **Description**: See your doctor if you have symptoms of an ovarian cyst.\n   - **Precondition**: The patient's symptoms have not been checked.\n   - **Effect**: The patient's symptoms are checked.\n\n2. **Remove Surgery**:\n   - **Description**: Discuss surgery to remove large, painful, or complicated cysts.\n   - **Precondition**: The patient's symptoms have been checked and surgery has not yet been done.\n   - **Effect**: Surgery is done on the patient.\n\n3. **Ask About Hormonal Treatment**:\n   - **Description**: Ask about using hormone treatments to prevent future cysts.\n   - **Precondition**: The patient's symptoms have been checked and hormonal treatment has not yet been discussed.\n   - **Effect**: Hormonal treatment is discussed with the patient.\n\nThese actions focus on the logical sequence of medical consultation and treatment for ovarian cysts, ensuring that each step is contingent on the completion of the previous step."
    ],
    "understand": [
        "(:action understand_treatment_of_testicular_cyst\n    :parameters (?npc - person)\n    :precondition (and (not (understood_treatment ?npc)))\n    :effect (and (understood_treatment ?npc))\n)\n```\n\nEach action is designed to reflect the state changes of the entities involved, based on the provided task steps and descriptions. If a step seemed irrelevant or incorrect, it was modified to be relevant to the task."
    ],
    "apply": [
        "(:action apply_warm_compress\n  :parameters (?p - person ?compress - compress)\n  :precondition (and (inventory ?p ?compress) (not (applied ?compress)))\n  :effect (and (applied ?compress) (relieved ?p))\n)\n\n"
    ],
    "be": [
        "(:action be_informed\n    :parameters (?npc - npc)\n    :precondition (aware ?npc)\n    :effect (informed_risk_factors ?npc)\n)\n\n"
    ],
    "visibility": [
        "(:action visibility\n    :parameters (?a - agent ?l - lump ?w - wrist)\n    :precondition (and (hasLump ?w ?l) (not (visible ?a ?l)))\n    :effect (and (visible ?a ?l) (not (notVisible ?a ?l)))\n)\n\n"
    ],
    "discuss": [
        "(:action discuss_hormonal_contraceptives\n    :parameters (?npc - entity)\n    :precondition (and (consulted_doctor ?npc))\n    :effect (and (hormonal_contraceptives_discussed ?npc))\n)\n\n"
    ],
    "determine": [
        "(:action determine_if_removal_of_skin_cyst\n    :parameters (?npc - doctor)\n    :precondition (and (consideration ?npc) (not (determined_skin_cyst ?npc)))\n    :effect (and (determined_skin_cyst ?npc) (decision_made ?npc))\n)\n\n"
    ],
    "removal": [
        "(:action removal_of_cyst\n    :parameters (?npc - doctor)\n    :precondition (and (decision_made ?npc) (not (removed_cyst ?npc)))\n    :effect (and (removed_cyst ?npc) (cyst_gone ?npc))\n)\n\n"
    ]
}