{
    "wash": [
        "(:action wash_diapers\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (at ?npc laundry_room) (moisture ?diapers dry))\n    :effect (and (moisture ?diapers wet) (cleanness ?diapers clean) (not (cleanness ?diapers dirty)))\n)\n\n",
        "(:action wash-hair\n    :parameters (?hair - entity)\n    :precondition (bleached ?hair)\n    :effect (and\n              (clean ?hair)\n              (not (lemon-juice-applied ?hair))\n            )\n)\n```\n\n### Key Points:\n- **start-with-unprocessed-hair**: Ensures the hair starts unprocessed.\n- **check-conditioner**: Applies conditioner to the hair, reducing the conditioner volume.\n- **juice-lemon**: Prepares the lemon juice.\n- **dilute-lemon-juice**: Dilutes the juice in a pitcher.\n- **pour-into-bottle**: Transfers the diluted juice to a spray bottle.\n- **spray-with-lemon-juice**: Applies the juice to the hair.\n- **sit-in-sunshine**: Bleaches the hair by sitting in the sun.\n- **wash-hair**: Cleans the hair after bleaching.\n\nThese actions reflect the state changes necessary for each step of the task.",
        "(:action wash_clothes\n    :parameters (?npc - npc ?garment - garment)\n    :precondition (lightened ?garment)\n    :effect (cleaned ?garment)\n)\n```\n\n### Explanation:\n1. **read_tag**: This action checks if the garment's tag is unread and ensures it is safe to bleach once read.\n2. **gather_garments**: This action gathers garments that are safe to bleach.\n3. **fill_spice_bottle**: This action fills a bottle with bleach and water, making it ready for use.\n4. **spritz_with_garnish**: This action lightens the garment by applying the bleach solution.\n5. **wash_clothes**: This action washes the lightened garment according to its care label.\n\nThese actions reflect the logical sequence and state changes needed for the task of lightening clothing with bleach.",
        "(:action wash_paper\n    :parameters (?p - person ?paper - paper ?loc - location)\n    :precondition (and (held_under_acetone ?paper) (at ?p ?loc))\n    :effect (and (washed ?paper) (not (held_under_acetone ?paper)))\n)\n\n",
        "(:action set_washer_to_highest_heat\n    :parameters (?washer - washer ?heat - heat)\n    :precondition (and (washer ?washer) (heat ?heat) (not (set_to_highest_heat ?washer)))\n    :effect (and (set_to_highest_heat ?washer) (temperature ?heat hot))\n)\n\n",
        "(:action pour_bleach\n    :parameters (?a - alice ?b - bleach ?gc - glass_container)\n    :precondition (and (in_bottle ?b) (not (in_container ?b ?gc)))\n    :effect (and (in_container ?b ?gc) (not (in_bottle ?b)))\n)\n\n",
        "(:action pour-into-bottle\n    :parameters (?pitcher - entity ?bottle - entity)\n    :precondition (and (full ?pitcher) (empty ?bottle))\n    :effect (and\n              (empty ?pitcher)\n              (full ?bottle)\n              (juice-in-bottle ?bottle)\n            )\n)\n\n;; Action to spray hair with lemon juice solution\n",
        "(:action dip_rag_in_bleach\n    :parameters (?u - user1 ?c - cloth1 ?s - sponge1 ?gc - glass_container)\n    :precondition (and (dry ?c) (in_container bleach ?gc))\n    :effect (and (wet ?c) (not (dry ?c)))\n)\n\n",
        "(:action blot_shirt\n    :parameters (?npc - designer ?s - shirt ?ws - work_station)\n    :precondition (and (decorated ?s) (wet ?ws))\n    :effect (and (bleached ?s) (not (wet ?ws)))\n)\n\n",
        "(:action fill_bucket\n    :parameters (?p - person ?bucket - container ?water - water)\n    :precondition (and (at ?p ?bucket) (empty ?bucket) (in_pipes ?water))\n    :effect (and (full ?bucket ?water) (not (in_pipes ?water)) (hot ?water))\n)\n\n",
        "(:action fill_spice_bottle\n    :parameters (?user - user ?bottle - bottle)\n    :precondition (empty ?bottle)\n    :effect (and\n              (full ?bottle)\n              (contains_bleach ?bottle))\n)\n\n;; Action 4: Spritz the garment with bleach solution\n",
        "(:action fill_bathtub\n    :parameters (?npc - npc ?bathtub - bathtub ?water - water)\n    :precondition (and (at ?npc bathroom) (emptiness ?bathtub empty) (location ?water in_pipes))\n    :effect (and (emptiness ?bathtub full) (location ?water out_of_faucet))\n)\n\n",
        "(:action soak_laundry\n    :parameters (?p - person ?laundry - items ?bucket - container)\n    :precondition (and (at ?p ?bucket) (mixed ?bucket) (not (soaked ?laundry)))\n    :effect (and (soaked ?laundry) (contains ?bucket ?laundry))\n)\n\n",
        "(:action soak_npc\n    :parameters (?npc - npc ?bathtub - bathtub)\n    :precondition (and (at ?npc bathroom) (emptiness ?bathtub full) (in_bath chlorine_blend))\n    :effect (and (soaked ?npc))\n)\n\n",
        "(:action spray-with-lemon-juice\n    :parameters (?hair - entity ?bottle - entity)\n    :precondition (and (juice-in-bottle ?bottle) (conditioned ?hair))\n    :effect (and\n              (lemon-juice-applied ?hair)\n              (empty ?bottle)\n            )\n)\n\n;; Action to sit outside in bright sunshine\n",
        "(:action spritz_with_garnish\n    :parameters (?npc - npc ?garment - garment ?bottle - bottle)\n    :precondition (and\n                    (gathered ?garment)\n                    (full ?bottle)\n                    (contains_bleach ?bottle))\n    :effect (and\n              (lightened ?garment)\n              (not (full ?bottle)))\n)\n\n;; Action 5: Machine wash the clothes according to the care label\n",
        "(:action garnish_soap\n    :parameters (?soap - soap ?container - container)\n    :precondition (and\n      (solid ?soap)\n      (empty ?container)\n    )\n    :effect (and\n      (grated ?soap)\n      (not (solid ?soap))\n      (not (empty ?container))\n      (contains ?container ?soap)\n    )\n)\n\n;;; Action 2: Add Hydrogen Peroxide to Container\n",
        "(:action put_gloves_on\n    :parameters (?p - person ?gloves - gloves)\n    :precondition (and (inventory ?p ?gloves) (hands_free ?p))\n    :effect (and (gloves_on ?p) (not (hands_free ?p)))\n)\n\n"
    ],
    "lay": [
        "(:action lay_diapers_flat\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (at ?npc outdoor_area) (moisture ?diapers wet))\n    :effect (and (location ?diapers on_ground) (not (location ?diapers in_bucket)))\n)\n\n",
        "(:action lay_on_floor\n    :parameters (?s - shirt ?f - floor)\n    :precondition (and (not (flat ?s)) (on_surface ?f))\n    :effect (and (flat ?s) (on ?s ?f))\n)\n\n",
        "(:action create_paste\n    :parameters (?container - container)\n    :precondition (and\n      (contains ?container ?soap)\n      (contains ?container hydrogen_peroxide)\n    )\n    :effect (and\n      (paste_made ?container)\n      (not (contains ?container ?soap))\n      (not (contains ?container hydrogen_peroxide))\n    )\n)\n\n;;; Action 4: Apply Paste to Skin\n",
        "(:action prepare_acetone_wash\n    :parameters (?p - person ?loc - location ?acetone - acetone ?pan - pan)\n    :precondition (and (at ?p ?loc) (empty ?pan) (inventory ?p ?acetone))\n    :effect (and (acetone_wash_prepared ?pan) (not (empty ?pan)))\n)\n\n"
    ],
    "wait": [
        "(:action line_dry_diapers\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (at ?npc outdoor_area) (location ?diapers on_ground))\n    :effect (and (moisture ?diapers dry))\n)\n\n",
        "(:action wait_for_bleach\n    :parameters (?u - user1 ?b - bleach ?bt - bottle)\n    :precondition (and (in_container ?b ?bt))\n    :effect (and (bleached ?b) (not (in_container ?b ?bt)))\n)\n\n",
        "(:action wait_for_paste_to_set\n    :parameters (?agent - agent)\n    :precondition (paste_applied ?agent)\n    :effect (paste_set ?agent)\n)\n\n;;; Action 6: Clean Paste with Water\n"
    ],
    "choose": [
        "(:action choose_sunny_day\n    :parameters (?npc - npc)\n    :precondition (and (weather sunny))\n    :effect (and (optimal_bleaching_conditions))\n)\n\n",
        "(:action choose_design\n    :parameters (?npc - designer ?ws - work_station)\n    :precondition (and (plain ?ws) (visible ?npc))\n    :effect (and (camouflaged ?ws) (not (plain ?ws)))\n)\n\n",
        "(:action choose-bleach-product\n    :parameters (?person - person ?bleach - bleach)\n    :precondition (and (not (chosen ?bleach)) (recommended-for-laundry ?bleach))\n    :effect (chosen ?bleach))\n```\n\n### Explanation:\n- **mix-bleach-solution**: This action ensures that bleach is mixed with either water or soap in a well-ventilated area, but not with other cleaning products. The precondition checks that the bleach is not already mixed with water or soap and that the location is well-ventilated. The effect reflects the mixed state of bleach with water or soap.\n  \n- **wear-rubber-gloves**: This action requires the person to wear protective rubber gloves. The precondition ensures the person is not already wearing gloves and that the gloves are protective. The effect is that the person is now wearing gloves.\n\n- **choose-bleach-product**: This action involves selecting a bleach product that is recommended for laundry. The precondition checks that the bleach has not been chosen yet and that it is suitable for laundry use. The effect is that the bleach product is chosen.\n\nThese actions reflect the task of safely bleaching towels while taking necessary precautions.",
        "(:action gather_garments\n    :parameters (?npc - npc ?garment - garment)\n    :precondition (and \n                    (safe_to_bleach ?garment)\n                    (not (gathered ?garment)))\n    :effect (gathered ?garment)\n)\n\n;; Action 3: Fill a spray bottle with bleach and water\n"
    ],
    "bring": [
        "(:action bring_diapers_inside\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (time afternoon) (location ?diapers on_ground))\n    :effect (and (location ?diapers indoors))\n)\n\n",
        "(:action bring_materials\n    :parameters (?w - work_area ?m - materials)\n    :precondition (and (unselected ?w) (not (at ?m ?w)))\n    :effect (and (selected ?w) (at ?m ?w))\n)\n\n",
        "(:action slide_and_protect\n    :parameters (?r - rags ?s - shirt)\n    :precondition (and (on_ground ?r) (flat ?s))\n    :effect (and (in_shirt ?r ?s) (not (on_ground ?r)))\n)\n\n"
    ],
    "repeat": [
        "(:action repeat_bleaching_process\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (stains ?diapers stubborn) (location ?diapers indoors))\n    :effect (and (location ?diapers on_ground) (stains ?diapers treated))\n)\n\n",
        "(:action finish_wreath\n    :parameters (?wreath - wreath)\n    :precondition (and (wreath ?wreath) (status ?wreath in_progress))\n    :effect (and (status ?wreath completed))\n)\n```\n\n### Explanation of Actions:\n\n1. **set_washer_to_highest_heat**: Sets the washer to the highest heat setting. The state change involves the washer's temperature being set to \"hot.\"\n\n2. **add_detergent_and_bleach**: Adds detergent and bleach to the machine. The machine's state changes to contain both detergent and bleach.\n\n3. **add_water**: Adds water to the machine. The water moves from \"in pipes\" to \"out of faucet,\" and the machine's fullness changes to \"full with water.\"\n\n4. **add_bleach_to_cycle**: Represents adding bleach to the wash cycle after a delay, marked by Alice selecting the step.\n\n5. **add_clothing**: Adds clothing to the machine. The clothing's cleanness state changes from \"dirty\" to \"clean.\"\n\n6. **run_washer**: Runs the washer, turning it on and involving the bike and oil in the process. The washer's electric conductivity changes to \"on,\" the bike moves, and the oil's location changes to \"in water.\"\n\n7. **finish_wreath**: Marks the wreath as completed, changing its status from \"in progress\" to \"completed.\"\n\nThese actions reflect the logical steps and state changes necessary to bleach cotton as per the task description.",
        "(:action start-with-unprocessed-hair\n    :parameters (?hair - entity)\n    :precondition (not (processed ?hair))\n    :effect (unprocessed ?hair)\n)\n\n;; Action to pre-condition hair with conditioner\n"
    ],
    "dry": [
        "(:action dry_diapers_in_dryer\n    :parameters (?npc - npc ?diapers - cloth_diapers)\n    :precondition (and (location ?diapers indoors) (moisture ?diapers wet))\n    :effect (and (moisture ?diapers dry))\n)\n```\n\n### Explanation:\n- **wash_diapers**: This action involves washing the cloth diapers, changing their moisture state from dry to wet and making them clean.\n- **lay_diapers_flat**: This action lays the diapers flat on the ground for drying.\n- **line_dry_diapers**: This action describes drying the diapers by laying them out in the sun, resulting in a change in moisture from wet to dry.\n- **choose_sunny_day**: This action ensures that the conditions are optimal for solar bleaching.\n- **apply_lemon_juice**: This action involves treating the stains with lemon juice, a natural bleaching agent.\n- **bring_diapers_inside**: This action involves bringing the diapers inside after they have been bleached in the sun.\n- **repeat_bleaching_process**: This action is for repeating the process if the stains are stubborn and need further treatment.\n- **dry_diapers_in_dryer**: This action involves drying the diapers in a dryer to ensure they are completely dry after bleaching.\n\nThese actions are designed to reflect the process of solar bleaching cloth diapers, incorporating state changes as specified in the entity attributes.",
        "(:action dry_shirt\n    :parameters (?npc - designer ?s - shirt)\n    :precondition (and (wet ?s))\n    :effect (and (dry ?s) (not (wet ?s)))\n)\n```\n\nThese actions are designed to reflect the state changes of the entities involved in the task, such as the shirt, bleach, rags, and the work area. Each action captures the relevant preconditions and effects to ensure a logical flow in the task of bleaching a shirt.",
        "(:action dilute-lemon-juice\n    :parameters (?juice - entity ?pitcher - entity)\n    :precondition (and (juice-squeezed ?juice) (empty ?pitcher))\n    :effect (and\n              (diluted-juice ?juice)\n              (full ?pitcher)\n            )\n)\n\n;; Action to pour the solution into a spray bottle\n",
        "(:action lighten_skin\n    :parameters (?npc - npc)\n    :precondition (paste_removed ?npc)\n    :effect (and\n      (skin_lightened ?npc)\n      (not (dark_skin_patch ?npc))\n    )\n)\n```\n\n### Explanation:\n\n- **garnish_soap**: Grates the soap into the container, changing its state from solid to grated.\n- **add_hydrogen_peroxide**: Adds hydrogen peroxide to the container, filling it and changing its state.\n- **create_paste**: Combines the soap and hydrogen peroxide to form a paste.\n- **apply_ingredients_to_skin**: Applies the paste to the dark skin patch.\n- **wait_for_paste_to_set**: Represents the time needed for the paste to set on the skin.\n- **clean_paste_with_water**: Cleans the paste off the skin using water.\n- **lighten_skin**: Represents the final effect of the treatment, lightening the skin.\n\nThese actions capture the sequence and state changes necessary to carry out the task of bleaching skin with peroxide."
    ],
    "add": [
        "(:action add_detergent_and_bleach\n    :parameters (?machine - machine)\n    :precondition (and (machine ?machine) (not (contains_detergent ?machine)) (not (contains_bleach ?machine)))\n    :effect (and (contains_detergent ?machine) (contains_bleach ?machine))\n)\n\n",
        "(:action add_water\n    :parameters (?water - water ?machine - machine)\n    :precondition (and (water ?water) (machine ?machine) (location ?water in_pipes))\n    :effect (and (location ?water out_of_faucet) (fullness ?machine full_with_water))\n)\n\n",
        "(:action add_bleach_to_cycle\n    :parameters (?alice - alice ?machine - machine)\n    :precondition (and (alice ?alice) (step ?alice unselected) (contains_bleach ?machine))\n    :effect (and (step ?alice selected))\n)\n\n",
        "(:action add_clothing\n    :parameters (?clothing - clothing ?machine - machine)\n    :precondition (and (clothing ?clothing) (machine ?machine) (cleanness ?clothing dirty))\n    :effect (and (fullness ?machine full_with_clothing) (cleanness ?clothing clean))\n)\n\n",
        "(:action add_detergent\n    :parameters (?p - person ?machine - washing_machine ?detergent - ingredient ?items - laundry)\n    :precondition (and (at ?p ?machine) (off ?machine) (full ?machine ?items) (mixed ?bucket))\n    :effect (and (treated ?machine) (contains ?machine ?detergent))\n)\n\n",
        "(:action add_salt_and_ingredients ; heat and soak on the stove with salt and baking soda\n    :parameters (?npc - npc ?oil - canola_oil ?knob - stove_knob ?cheese - velveeta)\n    :precondition (and (at ?npc kitchen) \n                       (inventory ?npc ?oil) \n                       (inventory ?npc ?cheese) \n                       (stove_off ?knob))\n    :effect (and (stove_on ?knob)\n                 (oil_heated ?oil)\n                 (cheese_melted ?cheese)\n                 (linen_bleached ?npc))\n)\n```\n\n### Explanation:\n\n1. **let_sun_set**: This action represents using sunlight to bleach the linen. The precondition checks that the NPC is at a location with sunlight, and the effect is that the linen is bleached.\n\n2. **use_as_cleaning_machine**: This action uses non-bleach alternatives for cleaning. The precondition ensures that the NPC has an alternative cleaning agent, and the effect is that the linen is clean.\n\n3. **add_salt_and_ingredients**: This action involves heating and soaking ingredients on the stove. The precondition checks that the NPC is in the kitchen with the necessary ingredients and that the stove is off. The effect is turning the stove on, heating the oil, melting the cheese, and bleaching the linen.\n\nThese actions reflect the task's requirements and the state changes of the involved entities.",
        "(:action add_hydrogen_peroxide\n    :parameters (?container - container)\n    :precondition (and\n      (contains ?container ?soap)\n      (empty ?container)\n    )\n    :effect (and\n      (contains ?container hydrogen_peroxide)\n      (not (empty ?container))\n    )\n)\n\n;;; Action 3: Create Paste\n",
        "(:action mix_ingredients\n    :parameters (?p - person ?bucket - container ?bleach - ingredient)\n    :precondition (and (at ?p ?bucket) (full ?bucket ?water) (not (mixed ?bucket)))\n    :effect (and (mixed ?bucket) (contains ?bucket ?bleach))\n)\n\n",
        "(:action mix-bleach-solution\n    :parameters (?person - person ?bleach - bleach ?water - water ?soap - soap)\n    :precondition (and (not (mixed ?bleach ?water)) (not (mixed ?bleach ?soap)) (well-ventilated ?location))\n    :effect (and (mixed ?bleach ?water) (or (mixed ?bleach ?soap) (not (mixed ?bleach ?cleaning-products)))))\n\n",
        "(:action mix_neutralizer\n    :parameters (?n - neutralizer ?b - mixing_bowl)\n    :precondition (and\n      (not (mixed ?n))\n      (empty ?b)\n    )\n    :effect (and\n      (mixed ?n)\n      (not (empty ?b))\n      (contains ?b ?n)\n    )\n)\n\n;; Action 5: Apply Neutralizing Agent\n",
        "(:action mix_chlorine_bleach\n    :parameters (?npc - npc ?chlorine - chlorine_blend ?bathtub - bathtub)\n    :precondition (and (at ?npc bathroom) (emptiness ?bathtub full) (location ?chlorine in_container))\n    :effect (and (in_bath ?chlorine) (not (location ?chlorine in_container)))\n)\n\n",
        "(:action blend_wood\n    :parameters (?w - wood)\n    :precondition (and\n      (not (blended ?w))\n    )\n    :effect (blended ?w)\n)\n\n;; Action 3: Clean Wood\n",
        "(:action blend_bath\n    :parameters (?npc - npc ?bathroom - bathroom)\n    :precondition (and (at ?npc bathroom) (moisturized ?npc))\n    :effect (and (completed_bleach_bath ?npc))\n)\n```\n\n### Explanation:\n1. **fill_bathtub**: This action fills the bathtub with water. The precondition checks if the NPC is in the bathroom, the bathtub is empty, and the water is in the pipes. The effect changes the bathtub's state to full and the water's location to out of the faucet.\n\n2. **mix_chlorine_bleach**: This action mixes chlorine bleach into the bathtub. The precondition checks if the NPC is in the bathroom, the bathtub is full, and the chlorine is in the container. The effect is that the chlorine is now in the bath.\n\n3. **soak_npc**: This action allows the NPC to soak in the bathtub. The precondition requires the NPC to be in the bathroom, the bathtub to be full, and the chlorine to be mixed in. The effect is that the NPC becomes soaked.\n\n4. **rinse_npc**: This action rinses the NPC off. The precondition is that the NPC is soaked. The effect is that the NPC is now rinsed and no longer soaked.\n\n5. **moisturize_body**: This action moisturizes the NPC's body. The precondition is that the NPC is rinsed. The effect is that the NPC becomes moisturized.\n\n6. **blend_bath**: This action completes the bleach bath process. The precondition is that the NPC is moisturized. The effect is that the bleach bath process is marked as completed for the NPC.\n\nEach action reflects the state changes in the entities involved, ensuring a logical flow through the steps of the task."
    ],
    "run": [
        "(:action run_washer\n    :parameters (?washer - washer ?machine - machine ?bike - bike ?oil - oil)\n    :precondition (and (washer ?washer) (machine ?machine) (bike ?bike) (oil ?oil) (electric_conductivity ?washer off))\n    :effect (and (electric_conductivity ?washer on) (movement ?bike moving) (location ?oil in_water))\n)\n\n"
    ],
    "clean": [
        "(:action peel_design\n    :parameters (?npc - designer ?s - shirt)\n    :precondition (and (bleached ?s) (decorated ?s))\n    :effect (and (plain ?s) (not (decorated ?s)))\n)\n\n",
        "(:action clean_tape\n    :parameters (?npc - designer)\n    :precondition (and (dirty ?npc))\n    :effect (and (clean ?npc) (not (dirty ?npc)))\n)\n\n",
        "(:action clean_items\n    :parameters (?p - person ?laundry - items ?water - water)\n    :precondition (and (at ?p ?laundry) (soaked ?laundry) (full ?bucket ?water))\n    :effect (and (clean ?laundry) (not (soaked ?laundry)) (emptier ?bucket))\n)\n```\n\n### Explanation\n\n1. **fill_bucket**: This action fills a bucket with hot water, transitioning the water from \"in pipes\" to \"out of faucet\" and changing its temperature to \"hot.\"\n\n2. **mix_ingredients**: This action involves mixing bleach into the water in the bucket, marking it as \"mixed.\"\n\n3. **add_detergent**: This action adds detergent to the washing machine, treating the laundry items and transitioning the machine to a \"treated\" state.\n\n4. **soak_laundry**: This action soaks the laundry in the mixed solution, changing the laundry's state to \"soaked.\"\n\n5. **clean_items**: This action rinses the laundry, making it \"clean\" and changing the water in the bucket to an \"emptier\" state. \n\nThese actions capture the steps of the task and the relevant state changes of the entities involved.",
        "(:action clean_wood\n    :parameters (?f - fir ?l - log)\n    :precondition (and\n      (not (cleaned ?f ?l))\n      (dirty ?f)\n      (dirty ?l)\n    )\n    :effect (and\n      (cleaned ?f ?l)\n      (not (dirty ?f))\n      (not (dirty ?l))\n    )\n)\n\n;; Action 4: Mix Neutralizer\n",
        "(:action clean_paste_with_water\n    :parameters (?agent - agent)\n    :precondition (and\n      (paste_set ?agent)\n      (has_water ?agent)\n    )\n    :effect (and\n      (paste_removed ?agent)\n      (not (paste_set ?agent))\n    )\n)\n\n;;; Action 7: Lighten Skin\n",
        "(:action wear-rubber-gloves\n    :parameters (?person - person ?gloves - gloves)\n    :precondition (and (not (wearing ?person ?gloves)) (protective ?gloves))\n    :effect (wearing ?person ?gloves))\n\n",
        "(:action rinse_npc\n    :parameters (?npc - npc ?bathtub - bathtub)\n    :precondition (and (soaked ?npc) (emptiness ?bathtub full))\n    :effect (and (rinsed ?npc) (not (soaked ?npc)))\n)\n\n"
    ],
    "use": [
        "(:action use_as_cleaning_machine ; use non-bleach alternatives in laundry\n    :parameters (?npc - npc ?cleaner - cleaning_alternative)\n    :precondition (and (inventory ?npc ?cleaner) (alternative_cleaner ?cleaner))\n    :effect (and (linen_clean ?npc))\n)\n\n"
    ],
    "check": [
        "(:action check-conditioner\n    :parameters (?hair - entity ?conditioner - entity)\n    :precondition (and (unprocessed ?hair) (not (conditioned ?hair)))\n    :effect (and\n              (conditioned ?hair)\n              (less-full ?conditioner)\n            )\n)\n\n;; Action to juice several lemons\n"
    ],
    "sit": [
        "(:action sit-in-sunshine\n    :parameters (?hair - entity)\n    :precondition (lemon-juice-applied ?hair)\n    :effect (bleached ?hair)\n)\n\n;; Action to wash the hair\n"
    ],
    "read": [
        "(:action read_tag\n    :parameters (?npc - npc ?garment - garment)\n    :precondition (and \n                    (tag_attached ?garment)\n                    (unread_tag ?garment))\n    :effect (and\n              (read_tag ?garment)\n              (safe_to_bleach ?garment))\n)\n\n;; Action 2: Gather garments for the bleaching process\n"
    ],
    "hold": [
        "(:action hold_ink_stained_paper\n    :parameters (?p - person ?paper - paper ?acetone - acetone ?pan - pan)\n    :precondition (and (gloves_on ?p) (ink_stained ?paper) (acetone_wash_prepared ?pan))\n    :effect (and (held_under_acetone ?paper) (not (ink_stained ?paper)))\n)\n\n"
    ],
    "apply": [
        "(:action apply_lemon_juice\n    :parameters (?npc - npc ?juice - lemon_juice ?diapers - cloth_diapers)\n    :precondition (and (inventory ?npc ?juice) (location ?diapers on_ground))\n    :effect (and (stains ?diapers treated))\n)\n\n",
        "(:action apply_design\n    :parameters (?npc - designer ?ws - work_station ?s - shirt)\n    :precondition (and (camouflaged ?ws) (flat ?s))\n    :effect (and (decorated ?s) (not (camouflaged ?ws)))\n)\n\n",
        "(:action apply_neutralizing_agent\n    :parameters (?a - agent ?n - neutralizer)\n    :precondition (and\n      (determined ?a)\n      (mixed ?n)\n      (not (applied ?a ?n))\n    )\n    :effect (and\n      (applied ?a ?n)\n      (neutralized ?a)\n    )\n)\n```\n\n### Explanation:\n\n1. **Determine Neutralizing Agent**: This action captures the necessity of identifying the correct neutralizing agent. The state change involves setting the agent as \"determined.\"\n\n2. **Blend Wood**: This action is included to represent any preparatory action on the wood before cleaning. The state change is marked as the wood being \"blended.\"\n\n3. **Clean Wood**: This action involves cleaning the wood, changing the state from \"dirty\" to \"clean.\"\n\n4. **Mix Neutralizer**: This action involves mixing the neutralizer in a mixing bowl. The state change reflects the bowl containing the mixed neutralizer.\n\n5. **Apply Neutralizing Agent**: This action involves applying the neutralizing agent to the relevant surface or object. The state change reflects the agent being \"applied\" and the task being \"neutralized.\"\n\nThese actions are designed to reflect the task's logical flow and the necessary state changes of the involved entities.",
        "(:action apply_ingredients_to_skin\n    :parameters (?agent - agent ?container - container)\n    :precondition (and\n      (paste_made ?container)\n      (dark_skin_patch ?agent)\n    )\n    :effect (and\n      (paste_applied ?agent)\n      (not (paste_made ?container))\n    )\n)\n\n;;; Action 5: Wait for Paste to Set\n"
    ],
    "let": [
        "(:action let_sun_set ; let the sun do the work\n    :parameters (?npc - npc ?loc - location)\n    :precondition (and (at ?npc ?loc) (has_sunlight ?loc))\n    :effect (and (bleached_linen ?npc))\n)\n\n",
        "(:action let_paper_air_dry\n    :parameters (?p - person ?paper - paper ?towels - towels ?loc - location)\n    :precondition (and (washed ?paper) (at ?p ?loc) (available ?towels))\n    :effect (and (dry ?paper) (not (washed ?paper)))\n)\n```\n\n### Explanation of Actions\n\n1. **prepare_acetone_wash**: This action involves preparing an acetone wash in a glass casserole pan. The precondition requires the person to be at the location with an empty pan and acetone in their inventory. The effect is that the pan contains an acetone wash.\n\n2. **put_gloves_on**: This action involves putting on rubber gloves. The precondition requires the person to have gloves in their inventory and their hands to be free. The effect is that the person is now wearing gloves.\n\n3. **hold_ink_stained_paper**: This action involves holding the ink-stained paper under acetone. The precondition requires the person to be wearing gloves, the paper to be ink-stained, and the acetone wash to be prepared. The effect is that the paper is held under acetone and is no longer ink-stained.\n\n4. **wash_paper**: This action involves washing the paper at a workstation. The precondition requires the paper to be held under acetone, and the person to be at the workstation. The effect is that the paper becomes washed.\n\n5. **let_paper_air_dry**: This action involves letting the washed paper air dry on paper towels. The precondition requires the paper to be washed and the towels to be available at the location. The effect is that the paper becomes dry.\n\nThese actions capture the necessary steps and state changes required to bleach paper, as per the task description."
    ],
    "juice": [
        "(:action juice-lemon\n    :parameters (?faucet - entity ?juice - entity)\n    :precondition (not (juice-squeezed ?juice))\n    :effect (juice-squeezed ?juice)\n)\n\n;; Action to dilute the lemon juice\n"
    ],
    "determine": [
        "(:action determine_agent\n    :parameters (?a - agent)\n    :precondition (and\n      (not (determined ?a))\n    )\n    :effect (determined ?a)\n)\n\n;; Action 2: Blend Wood\n"
    ],
    "moisturize": [
        "(:action moisturize_body\n    :parameters (?npc - npc ?bathroom - bathroom)\n    :precondition (and (at ?npc bathroom) (rinsed ?npc))\n    :effect (and (moisturized ?npc))\n)\n\n"
    ]
}