[
    "```pddl\n(:action choose ; General action for selection and preparation\n    :parameters (?entity - entity ?context - context ?resource - resource)\n    :precondition (and \n        (available ?entity)\n        (not (chosen ?entity ?resource))\n        (contextual_precondition ?context ?entity ?resource)\n    )\n    :effect (and \n        (chosen ?entity ?resource)\n        (contextual_effect ?context ?entity ?resource)\n    )\n)\n\n(:action round ; Round up resources and update organizational status\n    :parameters (?resource - object ?location - place)\n    :precondition (and (disorganized ?resource) (unfinished ?location))\n    :effect (and (organized ?resource) (completed ?location) (not (disorganized ?resource)))\n)\n\n(:action decorate\n    :parameters (?agent - agent ?entity - object ?attribute - attribute)\n    :precondition (and (available ?agent) (modifiable ?entity) (has-attribute ?entity ?attribute))\n    :effect (and (modified ?entity ?attribute) (not (modifiable ?entity)))\n)\n\n(:action add\n    :parameters (?entity - object ?resource - entity_type)\n    :precondition (and (requires_addition ?entity) (available_for_addition ?resource))\n    :effect (and (added ?entity ?resource) (not (requires_addition ?entity)))\n)\n\n(:action write ; Write to an entity and update its status\n    :parameters (?entity - entity ?target - target)\n    :precondition (and (modifiable ?entity) (requires_update ?target))\n    :effect (and (updated ?entity ?target) (not (modifiable ?entity)))\n)\n\n(:action hold ; Secure a resource and update its visibility\n    :parameters (?agent - agent ?resource - item)\n    :precondition (and (possessed ?agent ?resource) (not (secured ?resource)))\n    :effect (and (secured ?resource) (visible ?resource))\n)\n\n(:action create\n    :parameters (?entity - entity ?context - context)\n    :precondition (and (not (created ?entity)) (context_ready ?context))\n    :effect (and (created ?entity) (updated ?context))\n)\n\n(:action pick ; Select an option and update selection status\n    :parameters (?entity - agent ?option - choice)\n    :precondition (and (unselected ?entity ?option) (nameless ?entity ?option))\n    :effect (and (selected ?entity ?option) (named ?entity ?option))\n)\n\n(:action bring ; Bring an object to a specified state or location\n    :parameters (?entity - object ?location - location)\n    :precondition (and (not (at_desired_state ?entity)) (specified ?location))\n    :effect (and (at_desired_state ?entity) (featured ?location))\n)\n\n(:action scan ; Scan a resource and update its status\n    :parameters (?agent - agent ?target - object ?location - location ?context - context)\n    :precondition (and \n        (present ?agent ?location)\n        (relevant ?context ?target)\n    )\n    :effect (and \n        (scanned ?target ?agent)\n        (updated_status ?context ?target)\n    )\n)\n\n(:action put ; Universal action to place or set an item or state\n    :parameters (?agent - agent ?item - object ?target - target)\n    :precondition (and (involved ?agent ?item) (ready ?target))\n    :effect (and (placed ?item ?target) (not (involved ?agent ?item)))\n)\n\n(:action cut ; Cut a target object and update its state\n    :parameters (?actor - agent ?target - object ?context - context)\n    :precondition (and (ready_to_cut ?target ?context) (capable ?actor ?context))\n    :effect (and (cut ?target) (updated ?context))\n)\n\n(:action protect ; Protect a resource and ensure its secured status\n    :parameters (?entity - object)\n    :precondition (and (unsecured ?entity))\n    :effect (and (secured ?entity) (not (unsecured ?entity)))\n)\n\n(:action dedicate ; Dedicate a resource and update its status\n    :parameters (?agent - agent ?resource - item)\n    :precondition (and (at ?agent location) (not (dedicated ?resource)))\n    :effect (and (dedicated ?resource) (not (blank ?resource)))\n)\n\n(:action celebrate ; Celebrate the completion of a task or project\n    :parameters (?entity - object)\n    :precondition (in_progress ?entity)\n    :effect (completed ?entity)\n)\n\n(:action use ; Utilize a resource and update its state\n    :parameters (?npc - agent ?resource - entity)\n    :precondition (and (at ?npc location) (on ?resource context))\n    :effect (and (used ?resource) (updated ?resource))\n)\n\n(:action finish ; Complete a task involving multiple objects\n    :parameters (?agent - agent ?task - task ?object1 - object ?object2 - object)\n    :precondition (and (at ?agent ?task) (dedicated ?object1) (dedicated ?object2))\n    :effect (task_completed ?task)\n)\n\n(:action upload\n    :parameters (?entity - resource ?destination - location)\n    :precondition (and (selected ?destination) (not (uploaded ?entity)))\n    :effect (uploaded ?entity)\n)\n\n(:action customize ; Customize a resource and update its status\n    :parameters (?entity - object ?context - context)\n    :precondition (and (in_context ?context) (not (customized ?entity ?context)))\n    :effect (customized ?entity ?context)\n)\n\n(:action transform_visibility ; Transform the visibility and appearance of an object\n    :parameters (?entity - object ?state1 - state ?state2 - state)\n    :precondition (and (entity ?entity) (state ?entity ?state1))\n    :effect (and (not (state ?entity ?state1)) (state ?entity ?state2))\n)\n\n(:action be\n    :parameters (?entity - entity ?location - location ?state - state)\n    :precondition (and (at ?entity ?location))\n    :effect (and (?state ?entity))\n)\n```"
]