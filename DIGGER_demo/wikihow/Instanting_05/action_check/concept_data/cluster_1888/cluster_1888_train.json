[
    "```python\n[\n    \"(:action wait\\n      :parameters (?p - npc)\\n      :precondition (and (at ?p outdoor))\\n      :effect (waiting ?p)\\n   )\",\n    \"(:action place_in_sunlight\\n      :parameters (?object - item ?location - place)\\n      :precondition (and (at ?object ?location) (sunlit ?location))\\n      :effect (sunlit_positioned ?object)\\n   )\",\n    \"(:action wait\\n   :parameters (?entity - thing ?location - place)\\n   :precondition (and (at ?entity ?location) (outdoor ?location))\\n   :effect (waiting ?entity)\\n   )\",\n    \"(:action place\\n    :parameters (?agent - npc ?item - object ?target - target)\\n    :precondition (and\\n        (at ?agent ?location)\\n        (inventory ?agent ?item)\\n        (or\\n            (and (is_metal_surface ?item) (sunny ?location))\\n            (and (clean ?item) (at ?target flat_surface))\\n            (and (fried ?item) (at-appliance ?target ?location))\\n            (and (empty ?target) (at ?target ?location))\\n            (and (beaten ?item ?target) (inventory ?agent ?oil) (empty ?pan))\\n            (cut ?item)\\n            (and (at ?item kitchen_counter) (at ?target kitchen_counter))\\n            (at ?item on_counter)\\n        )\\n    )\\n    :effect (not (inventory ?agent ?item))\\n   )\",\n    \"(:action crack\\n  :parameters (?actor - person ?item - object ?location - place ?container - object ?tool - object ?appliance - object ?ingredient - object)\\n  :precondition (and\\n    (at ?actor ?location)\\n    (inventory ?actor ?item)\\n    (or (heating ?tool) (is_sidewalk ?location) (at ?item in_container) (has-power ?appliance))\\n    (or (clean ?tool) (at ?tool ?location))\\n  )\\n  :effect (not (inventory ?actor ?item))\\n   )\",\n    \"(:action flip\\n  :parameters (?agent - npc ?item - object ?surface - location ?tool - tool)\\n  :precondition (and\\n    (at ?agent ?surface)\\n    (or (cracked ?item) (in-pan ?item ?tool))\\n    (or (heated ?tool) (cracked ?item))\\n  )\\n  :effect (and\\n    (flipped ?item)\\n    (not (on_surface ?item ?surface)))\\n   )\",\n    \"(:action cook\\n  :parameters (?agent - person ?item - object ?location - location ?container - container ?tool - object)\\n  :precondition (and\\n    (at ?agent ?location)\\n    (or (at ?item ?location) (in ?item ?container))\\n    (not (cooked ?item))\\n    (or (oven_on) (on ?tool))\\n  )\\n  :effect (cooked ?item)\\n   )\",\n    \"(:action add\\n  :parameters (?item - object ?container - object ?npc - agent)\\n  :precondition (and\\n    (or (inventory ?npc ?item) (at ?item ?container))\\n    (not (contained ?item ?container))\\n  )\\n  :effect (and\\n    (contained ?item ?container)\\n    (not (inventory ?npc ?item)))\\n   )\",\n    \"(:action lift\\n  :parameters (?agent - entity ?item - object ?location - place)\\n  :precondition (and\\n    (at ?item ?location)\\n    (available ?agent)\\n    (not (processed ?item))\\n  )\\n  :effect (and\\n    (processed ?item)\\n    (not (available ?agent)))\\n   )\",\n    \"(:action repeat\\n  :parameters (?agent - entity ?task_object - object ?goal_state - state)\\n  :precondition (and\\n    (at ?agent ?task_object)\\n    (not (in_state ?task_object ?goal_state))\\n  )\\n  :effect (in_state ?task_object ?goal_state))\\n   )\",\n    \"(:action serve\\n  :parameters (?agent - agent ?item1 - ingredient ?item2 - ingredient ?dish - dish ?loc - location)\\n  :precondition (and\\n    (fried ?item1)\\n    (at ?item2 ?loc)\\n    (at-dish ?dish ?loc)\\n  )\\n  :effect (and\\n    (on-plate ?item1 ?dish)\\n    (on-plate ?item2 ?dish)\\n    (not (at ?item2 ?loc)))\\n   )\",\n    \"(:action secure\\n  :parameters (?egg_wash - ingredient ?item1 - ingredient ?item2 - ingredient ?table - location)\\n  :precondition (and\\n    (at ?egg_wash ?table)\\n    (at ?item1 ?table)\\n    (at ?item2 ?table)\\n  )\\n  :effect (secured ?item1 ?item2))\\n   )\",\n    \"(:action roll\\n  :parameters (?actor - agent ?object - entity ?location - place)\\n  :precondition (and\\n    (current_state ?object)\\n    (at ?actor ?location))\\n  :effect (and\\n    (transformed_state ?object)\\n    (updated_state ?location)))\\n   )\",\n    \"(:action cut\\n  :parameters (?actor - agent ?item - object ?tool - object)\\n  :precondition (and\\n    (available ?actor)\\n    (in_state ?item pre_cut)\\n    (at ?item location)\\n    (at ?tool location)\\n    (clean ?tool))\\n  :effect (and\\n    (in_state ?item cut)\\n    (if (is_type ?tool utensil) (not (clean ?tool))))\\n   )\",\n    \"(:action shape_into_ball_shape\\n  :parameters (?mixture - ingredient)\\n  :precondition (and\\n    (at ?mixture kitchen_counter)\\n    (mixed ?mixture))\\n  :effect (and\\n    (shaped ?mixture)\\n    (ball_shape ?mixture)))\\n   )\",\n    \"(:action cut_edges_off_bread_slices\\n  :parameters (?bread - ingredient)\\n  :precondition (and\\n    (at ?bread kitchen_counter)\\n    (sliced ?bread))\\n  :effect (and\\n    (shaped ?bread)\\n    (edges_cut ?bread)))\\n   )\",\n    \"(:action shape\\n  :parameters (?item - ingredient ?shape_type - shape)\\n  :precondition (and\\n    (at ?item kitchen_counter)\\n    (ready_for_shape ?item))\\n  :effect (and\\n    (shaped ?item)\\n    (?shape_type ?item)))\\n   )\",\n    \"(:action deep\\n  :parameters (?ingredient - ingredient ?utensil - utensil ?location - place)\\n  :precondition (and\\n    (prepared ?ingredient)\\n    (at ?utensil ?location)\\n    (ready ?location))\\n  :effect (and\\n    (processed ?ingredient)\\n    (dirty ?utensil)))\\n   )\",\n    \"(:action transition_state\\n  :parameters (?actor - entity ?target - entity)\\n  :precondition (not (final_state ?target))\\n  :effect (transitioned ?target))\\n   )\"\n]\n```"
]