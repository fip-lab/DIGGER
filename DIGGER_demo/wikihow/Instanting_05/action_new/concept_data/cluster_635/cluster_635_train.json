[
    "(:action choose_chuck_steak\n    :parameters (?p - player ?s - steak)\n    :precondition (and (available ?s) (not (chosen ?s)))\n    :effect (and (chosen ?s) (not (available ?s))",
    "(:action store_chuck_steak\n    :parameters (?p - player ?s - steak)\n    :precondition (and (chosen ?s) (available ?p))\n    :effect (and (stored ?s) (not (chosen ?s))",
    "(:action choose\n    :parameters (?agent - agent ?item - item)\n    :precondition (and (available ?item) (not (chosen ?item)) (available ?agent))\n    :effect (and (chosen ?item) (not (available ?item))",
    "(:action store\n    :parameters (?agent - agent ?item - object ?place - location)\n    :precondition (and (selected ?item) (not (stored ?item)) (at ?agent ?place))\n    :effect (and (stored ?item) (location ?item ?place))",
    "(:action cut ; Cut an item into a desired form\n    :parameters (?item - object ?tool - utensil)\n    :precondition (and\n      (at ?item location)\n      (at ?tool location)\n      (clean ?tool)\n    )\n    :effect (and\n      (modified ?item)\n      (not (clean ?tool))",
    "(:action check\n  ; Check a resource, update task status, and transform entity state\n  :parameters (?agent - actor ?entity - entity ?location - place)\n  :precondition (and\n    (available ?agent)\n    (at ?entity ?location)\n    (not (checked ?entity))\n  )\n  :effect (and\n    (checked ?entity)\n  )",
    "(:action make ; Create or prepare an item using available resources\n  :parameters (?npc - npc ?resource - entity ?location - entity)\n  :precondition (and\n    (available ?npc)\n    (at ?npc ?location)\n    (not (prepared ?resource))\n    (available ?resource)\n  )\n  :effect (and\n    (prepared ?resource)\n    (used ?resource)\n    (not (available ?resource))",
    "(:action use ; Use a resource or tool on an item and update its state\n  :parameters (?agent - entity ?item - thing ?resource - resource)\n  :precondition (and (ready ?item) (available ?resource))\n  :effect (and (processed ?item) (not (unprocessed ?item))",
    "(:action place_and_transform\n    :parameters (?agent - agent ?entity - entity ?container - container ?modifier - modifier)\n    :precondition (and \n        (possessed ?agent ?entity) \n        (available ?modifier)\n        (not (transformed ?entity))\n        (not (contained ?entity ?container))\n        (empty ?container)\n    )\n    :effect (and \n        (contained ?entity ?container) \n        (transformed ?entity) \n        (not (empty ?container))",
    "(:action add\n  :parameters (?entity1 - entity ?entity2 - entity ?target - entity)\n  :precondition (and \n    (form ?entity1 whole) \n    (form ?entity2 whole)\n    (at_location ?garlic in_pantry)\n    (at_location ?herbs in_pantry)\n    (has_cleanliness ?target clean)\n    (has_volume ?target empty)\n    (not (mixed ?target))\n  )\n  :effect (and \n    (form ?entity1 chopped) \n    (form ?entity2 diced)\n    (not (form ?entity1 whole))",
    "(:action submerge ; Submerge an entity in a medium to modify its state\n:parameters (?actor - agent ?entity - item ?medium - substance)\n:precondition (and (inventory ?actor ?entity) (inventory ?actor ?medium) (not (submerged ?entity)))\n:effect (and (submerged ?entity) (modified ?entity))",
    "(:action serve ; Serve a dish by combining entities and updating their status\n    :parameters (?main - entity ?side - entity)\n    :precondition (and\n        (has_cooked ?main grilled)\n        (at_location ?main on_grill)\n        (at_location ?side in_pantry)\n    )\n    :effect (and\n        (not (at_location ?main on_grill))",
    "(:action brush ; Modify the attributes of an item and its location\n :parameters (?item - object ?src - location ?dest - location ?attr_before - attribute ?attr_after - attribute)\n :precondition (and (location ?item ?src) (attribute ?item ?attr_before))\n :effect (and (location ?item ?dest) (attribute ?item ?attr_after) \n             (not (location ?item ?src))",
    "(:action prepare_and_cook\n    :parameters (?p - player ?i - ingredient ?l1 - location ?l2 - stove)\n    :precondition (and \n        (available ?i) \n        (at ?p ?l1) \n        (power ?l2 on) \n        (temperature ?l2 hot)\n    )\n    :effect (and \n        (cooked ?i) \n        (temperature ?i hot) \n        (location ?i ?l2) \n        (not (available ?i))",
    "(:action chopped ; Chop an item and update its state\n  :parameters (?agent - entity ?item - object)\n  :precondition (and (at ?agent area) (whole ?item))\n  :effect (and (chopped ?item) (not (whole ?item))",
    "(:action marinate\n    :parameters (?entity - entity ?substance - entity)\n    :precondition (and\n      (has_flavor ?entity plain)\n      (has_openness ?substance closed)\n      (at_location ?substance in_pantry)\n    )\n    :effect (and\n      (not (has_flavor ?entity plain))"
]