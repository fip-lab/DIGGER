[
    "(:action choose ; General action for selecting or preparing an item\n    :parameters (?agent - agent ?item - object ?container - container)\n    :precondition (and\n        (available ?agent)\n        (not (selected ?item))\n        (or (visible ?agent)\n            (nails_prepared ?agent)\n            (open ?container)\n            (disorganized ?item)\n            (at ?agent storage_area)\n            (at ?agent ?item))\n        (or (bare ?agent)\n            (empty ?container)\n            (dirty ?item)\n            (unselected ?item)))\n    :effect (and\n        (selected ?item)\n        (or (camouflaged ?agent)\n            (nails_whitened ?agent)\n            (size_chosen ?container)\n            (organized ?item)\n            (fuller ?container)\n            (clean ?item)\n            (in_inventory ?agent ?item))",
    "(:action clean\n  :parameters (?entity - object ?agent - agent)\n  :precondition (and \n      (requires_cleaning ?entity) \n      (can_clean ?agent ?entity)\n  )\n  :effect (and \n      (cleaned ?entity)\n      (not (requires_cleaning ?entity))",
    "(:action use ; Use a resource for a specific task\n    :parameters (?agent - agent ?resource - object ?target - entity)\n    :precondition (and \n                    (available ?resource) \n                    (not (used ?resource ?target))\n                    (requires_treatment ?target))\n    :effect (and \n              (used ?resource ?target)\n              (treated ?target ?resource)\n              (not (requires_treatment ?target))",
    "(:action wipe\n    :parameters (?agent - agent ?target - object ?tool - tool)\n    :precondition (and\n        (available ?agent)\n        (at ?agent ?target)\n        (not (clean ?target))\n        (in_hand ?agent ?tool)\n        (suitable_for_wiping ?tool ?target))\n    :effect (and\n        (clean ?target)\n        (dirty ?tool)\n        (not (in_hand ?agent ?tool))",
    "(:action add ; Add an item to a container or apply a layer to an object\n  :parameters (?actor - entity ?item - object ?target - target_entity)\n  :precondition (and (prepared ?target) (selected ?item))\n  :effect (and (modified ?target) (not (prepared ?target))",
    "(:action make ; General action to create or modify objects and states\n  :parameters (?agent - person ?item1 - object ?item2 - object)\n  :precondition (and \n    (in_inventory ?agent ?item1)\n    (available ?item2)\n    (not (completed ?item1))\n  )\n  :effect (and \n    (completed ?item1)\n    (organized ?item1)\n    (not (available ?item2))",
    "(:action avoid ; Avoid using a resource and preserve its associated state\n :parameters (?actor - entity ?resource - object ?related_entity - entity)\n :precondition (and (available ?resource) (related ?actor ?related_entity))\n :effect (and (not (used ?resource))",
    "(:action chip ; Chip or hasten the drying of a nail polish\n   :parameters (?entity - object ?tool - object)\n   :precondition (and (applied ?entity) (available ?tool) (not (final_state ?entity)))\n   :effect (and (altered ?entity) (not (available ?tool))",
    "(:action condition\n   :parameters (?entity - object ?target - object ?tool - object)\n   :precondition (and (prepared ?target) (inventory ?entity ?tool))\n   :effect (and (conditioned ?target) (not (inventory ?entity ?tool))",
    "(:action treat\n    :parameters (?agent - agent ?item - object ?area - area)\n    :precondition (and\n                    (requires_treatment ?area)\n                    (has_item ?agent ?item))\n    :effect (and\n              (treated_area ?area ?item)\n              (not (requires_treatment ?area))",
    "(:action dry\n  :parameters (?entity - object ?method - method)\n  :precondition (and \n    (requires_drying ?entity)\n    (method_applicable ?method ?entity)\n  )\n  :effect (and \n    (dried ?entity)\n    (not (requires_drying ?entity))",
    "(:action open ; Open a container and update its state\n    :parameters (?entity - object ?opener - agent)\n    :precondition (and (at ?opener ?entity) (closed ?entity))\n    :effect (and (open ?entity) (not (closed ?entity))",
    "(:action take ; Take a resource and update its status\n    :parameters (?actor - agent ?item - object)\n    :precondition (and (accessible ?actor ?item) (not (taken ?actor ?item)))\n    :effect (and (taken ?actor ?item))",
    "(:action apply_polish\n    :parameters (?p - person ?nail - nail ?product - nail_product)\n    :precondition (and \n        (clean ?nail)\n        (selected ?product)\n        (or (bare ?nail) (foundation_cured ?nail) (regular_polish_dried ?nail)))\n    :effect (and \n        (not (bare ?nail))",
    "(:action reuse\n  :parameters (?user - agent ?resource - object)\n  :precondition (and \n    (available ?resource)\n    (clean ?resource)\n    (not (in_use ?resource))\n    (ready ?user)\n  )\n  :effect (and\n    (in_use ?resource)\n    (not (available ?resource))"
]