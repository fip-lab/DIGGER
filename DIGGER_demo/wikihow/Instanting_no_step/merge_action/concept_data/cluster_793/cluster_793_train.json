{
    "pour": [
        "(:action pour-sea-salt-into-bowl\n    :parameters (?salt - entity ?bowl - container)\n    :precondition (and (fine-grain ?salt) (empty ?bowl))\n    :effect (and (in ?salt ?bowl) (not (empty ?bowl)))\n)\n```\n\n#### Step 2: Consider adding 15 to 30 drops of scented or essential oil to the sea salt.\n```lisp\n",
        "(:action wring-towels\n    :parameters (?towel - cloth)\n    :precondition (and (wet ?towel) (not (wrung ?towel)))\n    :effect (and (wrung ?towel) (not (wet ?towel)))\n)\n```\n**Explanation:** This action represents wringing out the towels to remove excess water. The precondition ensures the towel is wet and not already wrung, and the effect is the towel becoming wrung and less wet.\n\n---\n\n#### 9. **Action: wrap-towels-with-cellophane**\n```lisp\n",
        "(:action wrap-towels-with-cellophane\n    :parameters (?towel - cloth ?cellophane - material)\n    :precondition (and (wrung ?towel) (available ?cellophane))\n    :effect (and (wrapped ?towel ?cellophane))\n)\n```\n**Explanation:** This action corresponds to wrapping a layer of cellophane over the towels. The precondition ensures the towel is wrung and cellophane is available, and the effect is the towel being wrapped with cellophane.\n\n---\n\n#### 10. **Action: cover-body**\n```lisp\n",
        "(:action cover-body\n    :parameters (?person - agent ?wrap - entity ?blanket - cloth)\n    :precondition (and (wrapped ?wrap) (available ?blanket))\n    :effect (and (covered ?person ?wrap ?blanket))\n)\n```\n**Explanation:** This action represents covering the body with a thick blanket or robe to keep the wraps warm. The precondition ensures the wrap is ready and a blanket is available, and the effect is the person being covered with the wrap and blanket.\n\n---\n\n#### 11. **Action: rinse-off-wrap**\n```lisp\n",
        "(:action place-crust-in-bowl\n    :parameters (?crust - solid ?clean-bowl - container)\n    :precondition (and (removed ?crust ?pan) (empty ?clean-bowl))\n    :effect (and (in ?crust ?clean-bowl) (not (empty ?clean-bowl)))\n)\n```\n\n#### Action 6: Continue-boiling\n```lisp\n",
        "(:action set-up-painting-area\n    :parameters (?a - area)\n    :precondition (and (unselected ?a))\n    :effect (and (selected ?a) (not (unselected ?a)))\n)\n```\n**Explanation**: This action sets up the painting area by marking it as selected.\n\n---\n\n#### Action 2: Wet-Paper\n```lisp\n",
        "(:action sprinkle-salt\n    :parameters (?p - paper ?s - salt)\n    :precondition (and (wet ?p) (available ?s))\n    :effect (and (salted ?p) (not (unsalted ?p)))\n)\n```\n**Explanation**: This action sprinkles salt over the still-wet painting, marking the paper as salted.\n\n---\n\n#### Action 5: Let-Painting-Dry\n```lisp\n",
        "(:action scrape-crust\n    :parameters (?pan - container ?spoon - tool ?crust - solid)\n    :precondition (and (boiling ?pan) (crust-formed ?pan) (available ?spoon))\n    :effect (and (removed ?crust ?pan) (in ?crust ?spoon))\n)\n```\n\n#### Action 5: Place-crust-in-bowl\n```lisp\n"
    ],
    "add": [
        "(:action add-more-coloring\n    :parameters (?color - food_coloring ?bag - zippered_bag)\n    :precondition (and (has ?color) (in ?salt ?bag) (evenly-colored ?salt ?bag) (sealed ?bag))\n    :effect (and (enhanced-color ?salt ?bag))\n)\n```\n\n#### Step 6: Open the bags and let the salt dry\n```lisp\n",
        "(:action mix-dry-ingredients\n    :parameters (?b - mixing_bowl ?i1 - ingredient ?i2 - ingredient)\n    :precondition (and (inContainer ?i1 ?b) (inContainer ?i2 ?b) (not (mixed ?b)))\n    :effect (and (mixed ?b) (not (separate ?b)))\n)\n```\n\n#### 3. Add Essential Oils\n```pddl\n",
        "(:action string-letters\n    :parameters (?l - letter ?s - string)\n    :precondition (and (painted ?l) (holes ?l) (not (strung ?l)))\n    :effect (and (strung ?l ?s) (partOfBanner ?l))\n)\n```\n\n---\n\n### Explanation of Actions:\n1. **Gather-Ingredients**: Collects all the ingredients (flour, salt, water) and places them in a mixing bowl.\n2. **Make-Dough**: Combines and mixes the ingredients in the bowl to form dough.\n3. **Knead-Dough**: Kneads the dough to make it elastic and ready for shaping.\n4. **Divide-Dough**: Divides the dough into pieces corresponding to the letters in the name.\n5. **Shape-Letters**: Shapes each piece of dough into a letter.\n6. **Poke-Holes**: Pokes holes in the top of each letter for stringing later.\n7. **Decorate-Letters**: Adds decorations to the letters before baking.\n8. **Bake-Letters**: Bakes the letters in an oven until they are rigid.\n9. **Paint-Letters**: Paints the baked letters and adds additional decorations if necessary.\n10. **String-Letters**: Strings the decorated letters together to form the name banner.\n\nThese actions accurately represent the steps and transitions described in the task and entity states. Let me know if you need further modifications!",
        "(:action stir-while-adding-drops\n    :parameters (?b - mixing_bowl ?o - essential_oil)\n    :precondition (and (inBowl ?o ?b) (mixed ?b))\n    :effect (and (blended ?b) (not (separate ?b)))\n)\n```\n\n#### 5. Place Mixture in Jar\n```pddl\n",
        "(:action screw-on-lid\n    :parameters (?j - jar ?l - lid)\n    :precondition (and (inContainer ?j ?l) (open ?j))\n    :effect (and (closed ?j) (not (open ?j)))\n)\n```\n\n#### 7. Store in a Dry Spot\n```pddl\n",
        "(:action shake-bags\n    :parameters (?bag - zippered_bag)\n    :precondition (and (in ?salt ?bag) (colored ?salt ?bag) (sealed ?bag))\n    :effect (and (evenly-colored ?salt ?bag))\n)\n```\n\n#### Step 5: Add more food coloring, if desired\n```lisp\n"
    ],
    "store": [
        "(:action store-crust\n    :parameters (?crust - solid ?container - container)\n    :precondition (and (dry ?crust) (empty ?container))\n    :effect (and (in ?crust ?container) (stored ?crust))\n)\n```\n\n#### Action 9: Use-lemon-salt\n```lisp\n"
    ],
    "take": [
        "(:action take-warm-shower\n    :parameters (?person - agent ?shower - location)\n    :precondition (and (clean ?shower) (not (wet ?person)))\n    :effect (and (wet ?person) (open-pores ?person))\n)\n```\n**Explanation:** This action represents taking a warm shower to open up pores. The precondition ensures the shower is clean and the person is not already wet, and the effect is the person becoming wet with open pores.\n\n---\n\n#### 7. **Action: stir-ingredients**\n```lisp\n",
        "(:action bring-liquid-to-boil\n    :parameters (?p - pot ?l - liquid)\n    :precondition (and (inPot ?l ?p) (temperature ?l cold) (onStove ?p))\n    :effect (and (temperature ?l hot) (boiling ?l) (not (temperature ?l cold)) (not (still ?l)))\n)\n```\n\n**Explanation**: This action corresponds to bringing the flavored liquid to a boil. The precondition ensures the liquid is in a pot, cold, and the pot is on the stove. The effect sets the liquid to hot and boiling.\n\n---\n\n#### Action 3: reduce-liquid\n```lisp\n"
    ],
    "purchase": [
        "(:action gather-ingredients\n    :parameters (?i - ingredient ?b - mixing_bowl)\n    :precondition (and (separate ?i) (empty ?b))\n    :effect (and (inBowl ?i ?b) (not (separate ?i)) (not (empty ?b)))\n)\n```\n\n#### Action 2: Make-Dough\n```lisp\n",
        "(:action purchase_salt_lamp\n    :parameters (?p - person ?l - lamp)\n    :precondition (and (not (has_lamp ?p ?l)) (is_available ?l))\n    :effect (and (has_lamp ?p ?l))\n)\n```\n\n#### Action 2: Get a Big Enough Salt Lamp\n```pddl\n",
        "(:action purchase-epsom-salt\n    :parameters (?agent - person ?salt - epsom_salt ?store - location)\n    :precondition (and (at ?agent ?store) (available ?salt ?store) (has-money ?agent))\n    :effect (and (has ?agent ?salt) (not (available ?salt ?store)) (not (has-money ?agent)))\n)\n```\n\n#### Step 2: Divide the salt into several zippered bags\n```lisp\n",
        "(:action select_big_salt_lamp\n    :parameters (?p - person ?l - lamp)\n    :precondition (and (has_lamp ?p ?l) (not (is_big_enough ?l)))\n    :effect (and (is_big_enough ?l))\n)\n```\n\n#### Action 3: Watch Out for Copious Sweating\n```pddl\n",
        "(:action select-flavored-liquid\n    :parameters (?l - liquid)\n    :precondition (and (liquid ?l) (available ?l))\n    :effect (and (selected ?l) (not (unselected ?l)))\n)\n```\n\n**Explanation**: This action represents selecting a flavored liquid for the salt. The precondition ensures the liquid is available, and the effect marks the liquid as selected.\n\n---\n\n#### Action 2: bring-liquid-to-boil\n```lisp\n"
    ],
    "make": [
        "(:action make-dough\n    :parameters (?b - mixing_bowl)\n    :precondition (and (inBowl flour ?b) (inBowl salt ?b) (inBowl water ?b) (not (mixed ?b)))\n    :effect (and (mixed ?b) (not (separate ?b)))\n)\n```\n\n#### Action 3: Knead-Dough\n```lisp\n",
        "(:action knead-dough\n    :parameters (?d - dough)\n    :precondition (and (mixed ?d) (smooth ?d))\n    :effect (and (kneaded ?d) (not (smooth ?d)) (elastic ?d))\n)\n```\n\n#### Action 4: Divide-Dough\n```lisp\n",
        "(:action bake-letters\n    :parameters (?l - letter ?o - oven)\n    :precondition (and (decorated ?l) (not (baked ?l)) (atTemperature ?o 350))\n    :effect (and (baked ?l) (rigid ?l))\n)\n```\n\n#### Action 9: Paint-Letters\n```lisp\n",
        "(:action paint-with-watercolors\n    :parameters (?p - paper ?wc - watercolors ?b - brush)\n    :precondition (and (wet ?p) (available ?wc) (available ?b))\n    :effect (and (painted ?p ?wc) (not (plain ?p)))\n)\n```\n**Explanation**: This action applies watercolors to the wet paper using a brush, resulting in the paper being painted.\n\n---\n\n#### Action 4: Sprinkle-Salt\n```lisp\n",
        "(:action assemble-ingredients\n    :parameters (?i - ingredient ?c - container)\n    :precondition (and (inPantry ?i) (empty ?c))\n    :effect (and (inContainer ?i ?c) (not (inPantry ?i)) (not (empty ?c)))\n)\n```\n\n#### 2. Mix Dry Ingredients\n```pddl\n"
    ],
    "divide": [
        "(:action divide-salt\n    :parameters (?salt - epsom_salt ?bag1 - zippered_bag ?bag2 - zippered_bag ?workspace - location)\n    :precondition (and (at ?salt ?workspace) (empty ?bag1) (empty ?bag2))\n    :effect (and (in ?salt ?bag1) (in ?salt ?bag2) (not (empty ?bag1)) (not (empty ?bag2)))\n)\n```\n\n#### Step 3: Add 5 to 10 drops of liquid food coloring into each bag\n```lisp\n"
    ],
    "shape": [
        "(:action shape-letters\n    :parameters (?d - dough ?l - letter)\n    :precondition (and (divided ?d) (not (shaped ?l)))\n    :effect (and (shaped ?l) (letterOf ?l ?d))\n)\n```\n\n#### Action 6: Poke-Holes\n```lisp\n"
    ],
    "poke": [
        "(:action poke-holes\n    :parameters (?l - letter)\n    :precondition (and (shaped ?l) (not (holes ?l)))\n    :effect (and (holes ?l))\n)\n```\n\n#### Action 7: Decorate-Letters\n```lisp\n"
    ],
    "decorate": [
        "(:action decorate-letters\n    :parameters (?l - letter)\n    :precondition (and (shaped ?l) (holes ?l) (not (decorated ?l)))\n    :effect (and (decorated ?l))\n)\n```\n\n#### Action 8: Bake-Letters\n```lisp\n"
    ],
    "warm": [
        "(:action warm-room\n    :parameters (?room - location)\n    :precondition (and (cold ?room))\n    :effect (and (warm ?room) (not (cold ?room)))\n)\n```\n**Explanation:** This action represents turning up the temperature in the bathroom or another room to make it warm for the wrap. The precondition checks if the room is cold, and the effect is the room becoming warm.\n\n---\n\n#### 3. **Action: dissolve-salt**\n```lisp\n",
        "(:action dissolve-salt\n    :parameters (?salt - ingredient ?water - liquid ?bowl - container)\n    :precondition (and (separate ?salt ?water) (empty ?bowl))\n    :effect (and (mixed ?salt ?water ?bowl) (not (separate ?salt ?water)) (not (empty ?bowl)))\n)\n```\n**Explanation:** This action corresponds to dissolving 2-3 tablespoons of Dead Sea salt into water. The precondition ensures the salt and water are separate, and the bowl is empty. The effect is the salt being mixed with water in the bowl.\n\n---\n\n#### 4. **Action: add-ingredients-to-wrap**\n```lisp\n",
        "(:action wet-paper\n    :parameters (?p - paper ?w - water)\n    :precondition (and (dry ?p) (available ?w))\n    :effect (and (wet ?p) (not (dry ?p)))\n)\n```\n**Explanation**: This action wets the paper by utilizing water, changing its state from dry to wet.\n\n---\n\n#### Action 3: Paint-With-Watercolors\n```lisp\n",
        "(:action dry-colored-salt\n    :parameters (?bag - zippered_bag ?workspace - location)\n    :precondition (and (evenly-colored ?salt ?bag) (at ?bag ?workspace))\n    :effect (and (dry ?salt) (not (sealed ?bag)))\n)\n```\n\n#### Step 7: Play with the sand, but don't let it get wet\n```lisp\n",
        "(:action boil-mixture\n    :parameters (?pan - container ?stove - appliance)\n    :precondition (and (in ?bowl ?pan) (on ?stove ?pan) (power-on ?stove))\n    :effect (and (boiling ?pan) (not (cool ?pan)))\n)\n```\n\n#### Action 4: Scrape-crust\n```lisp\n"
    ],
    "brush": [
        "(:action brush-skin\n    :parameters (?person - agent ?brush - tool)\n    :precondition (and (clean ?brush) (ready ?person))\n    :effect (and (exfoliated ?person) (not (ready ?person)))\n)\n```\n**Explanation:** This action corresponds to brushing the skin with a natural bristled brush to exfoliate. The precondition ensures the brush is clean and the person is ready, and the effect is the person becoming exfoliated.\n\n---\n\n#### 6. **Action: take-warm-shower**\n```lisp\n",
        "(:action rinse-off-wrap\n    :parameters (?person - agent ?shower - location)\n    :precondition (and (covered ?person ?wrap) (available ?shower))\n    :effect (and (clean ?person) (not (covered ?person ?wrap)))\n)\n```\n**Explanation:** This action corresponds to rinsing off the salt wrap with cool or lukewarm water. The precondition ensures the person is covered with the wrap and a shower is available, and the effect is the person becoming clean and no longer covered by the wrap.\n\n---\n\n#### 12. **Action: apply-moisturizer**\n```lisp\n",
        "(:action clean_salt_lamp\n    :parameters (?p - person ?l - lamp)\n    :precondition (and (has_lamp ?p ?l) (is_big_enough ?l) (monitored_sweating ?l) (not (is_cleaned ?l)))\n    :effect (and (is_cleaned ?l) (checked_build_up ?l))\n)\n```\n\n#### Action 5: Use a Himalayan Salt Candle Holder\n```pddl\n",
        "(:action drain-juice\n    :parameters (?crust - solid ?bowl - container)\n    :precondition (and (in ?crust ?bowl) (wet ?crust))\n    :effect (and (dry ?crust) (not (wet ?crust)))\n)\n```\n\n#### Action 8: Store-crust\n```lisp\n"
    ],
    "use": [
        "(:action use-lemon-salt\n    :parameters (?lemon-salt - solid ?food - consumable)\n    :precondition (stored ?lemon-salt)\n    :effect (and (seasoned ?food) (not (plain ?food)))\n)\n```\n\n---\n\n### Explanation:\n\n1. **Action 1: Measure-ingredients** - Captures the step of measuring lemon juice and salt into a bowl, ensuring the bowl is empty and the ingredients are available.\n2. **Action 2: Place-in-pan** - Places the measured mixture from the bowl into a pan, ensuring the pan is empty.\n3. **Action 3: Boil-mixture** - Boils the mixture on the stove, requiring the pan to be on the stove and the stove to be powered on.\n4. **Action 4: Scrape-crust** - Scrapes the crust formed during boiling using a spoon.\n5. **Action 5: Place-crust-in-bowl** - Transfers the crust into a clean bowl for further processing.\n6. **Action 6: Continue-boiling** - Continues the boiling process, ensuring the liquid evaporates.\n7. **Action 7: Drain-juice** - Drains the juice from the crust, leaving it dry.\n8. **Action 8: Store-crust** - Stores the dried crust in a small container for future use.\n9. **Action 9: Use-lemon-salt** - Represents the final use of the lemon salt for seasoning food or consuming it.\n\nIf any step seemed irrelevant or ambiguous, it was adapted to fit the logical flow of making lemon salt. For example, \"keep the process going\" was interpreted as continuing the boiling process until the liquid evaporates.",
        "(:action use_salt_candle_holder\n    :parameters (?p - person ?l - lamp ?ch - candle_holder)\n    :precondition (and (has_lamp ?p ?l) (is_cleaned ?l) (has_candle_holder ?p ?ch) (not (is_used_with_holder ?l ?ch)))\n    :effect (and (is_used_with_holder ?l ?ch))\n)\n```\n\n---\n\n### Notes:\n1. **Step 1 (\"Purchase high quality Himalayan salt lamps\")** is represented by the `purchase_salt_lamp` action, ensuring the person has a lamp.\n2. **Step 2 (\"Get a big enough salt lamp\")** is addressed by `select_big_salt_lamp`, ensuring the lamp meets the size requirement.\n3. **Step 3 (\"Watch out for copious sweating\")** is represented by `monitor_salt_lamp_sweating`, where the person observes the lamp for signs of sweating.\n4. **Step 4 (\"Clean your lamp and check for build-up\")** is implemented in `clean_salt_lamp`, ensuring the lamp is cleaned and checked for any build-up.\n5. **Step 5 (\"Use a Himalayan salt candle holder\")** is represented by `use_salt_candle_holder`, which ensures the lamp is used with a candle holder.\n\nEach action includes logical preconditions and effects to reflect the task's progression and ensure state transitions align with the task's descriptions and intent. If additional details or steps are needed, they can be incorporated into the PDDL actions."
    ],
    "finish": [
        "(:action finish-painting\n    :parameters (?p - paper)\n    :precondition (and (dry ?p) (excess-salt-removed ?p))\n    :effect (and (finished ?p) (not (incomplete ?p)))\n)\n```\n**Explanation**: This action marks the painting as finished after all previous steps are completed.\n\n---\n\n### Notes:\n1. The entity states provided were used to define the preconditions and effects for each action.\n2. Steps irrelevant to the task or descriptions were modified to align with the logical flow of the task.\n3. The generated PDDL actions follow the format and structure of the example provided.\n\nLet me know if further refinements are needed!",
        "(:action continue-boiling\n    :parameters (?pan - container ?stove - appliance)\n    :precondition (and (boiling ?pan) (on ?stove ?pan) (power-on ?stove))\n    :effect (and (evaporated ?liquid ?pan))\n)\n```\n\n#### Action 7: Drain-juice\n```lisp\n"
    ],
    "monitor": [
        "(:action monitor_salt_lamp_sweating\n    :parameters (?p - person ?l - lamp)\n    :precondition (and (has_lamp ?p ?l) (is_big_enough ?l) (not (monitored_sweating ?l)))\n    :effect (and (monitored_sweating ?l))\n)\n```\n\n#### Action 4: Clean the Lamp and Check for Build-Up\n```pddl\n"
    ],
    "reduce": [
        "(:action reduce-liquid\n    :parameters (?p - pot ?l - liquid)\n    :precondition (and (boiling ?l) (inPot ?l ?p))\n    :effect (and (reduced ?l) (not (boiling ?l)))\n)\n```\n\n**Explanation**: This action represents heating the liquid until it forms a reduction. The precondition ensures the liquid is boiling in a pot. The effect marks the liquid as reduced and no longer boiling.\n\n---\n\n#### Action 4: add-salt-and-dry\n```lisp\n"
    ],
    "play": [
        "(:action play-with-sand\n    :parameters (?salt - colored_sand ?agent - person)\n    :precondition (and (dry ?salt) (has ?agent ?salt))\n    :effect (and (enjoyed ?agent ?salt))\n)\n```\n\n---\n\n### Notes:\n1. **Relevance Adjustments:** Each step was carefully aligned with the task of coloring sand. Irrelevant or unclear aspects were omitted or adapted to fit the task context.\n2. **Entity States:** Preconditions and effects were derived from the provided entity states and aligned with the task's logical flow.\n3. **Flexibility:** Steps like \"Add more food coloring, if desired\" were made optional by including conditions for enhancement.\n\nThis set of PDDL actions captures the intent and logic of the task while ensuring clarity and adherence to the example format."
    ],
    "measure": [
        "(:action measure-ingredients\n    :parameters (?lemon-juice - liquid ?salt - solid ?bowl - container)\n    :precondition (and (empty ?bowl) (available ?lemon-juice) (available ?salt))\n    :effect (and (in ?lemon-juice ?bowl) (in ?salt ?bowl) (not (empty ?bowl)) (measured ?bowl))\n)\n```\n\n#### Action 2: Place-in-pan\n```lisp\n"
    ],
    "hydrate": [
        "(:action hydrate\n    :parameters (?person - agent ?water - liquid)\n    :precondition (and (thirsty ?person) (available ?water))\n    :effect (and (hydrated ?person) (not (thirsty ?person)))\n)\n```\n**Explanation:** This action corresponds to the instruction to begin drinking water about an hour before the body wrap. The precondition ensures the person is thirsty and water is available, and the effect is the person becoming hydrated.\n\n---\n\n#### 2. **Action: warm-room**\n```lisp\n"
    ],
    "apply": [
        "(:action apply-moisturizer\n    :parameters (?person - agent ?moisturizer - substance)\n    :precondition (and (clean ?person) (available ?moisturizer))\n    :effect (and (moisturized ?person))\n)\n```\n**Explanation:** This action represents applying a layer of non-comedogenic moisturizer to the body. The precondition ensures the person is clean and moisturizer is available, and the effect is the person becoming moisturized.\n\n---\n\nThese actions collectively represent the steps involved in performing a Dead Sea Salt Wrap. Each action is designed to reflect the logical progression of the task based on the descriptions, entity states, and expected outcomes."
    ],
    "let": [
        "(:action let-painting-dry\n    :parameters (?p - paper)\n    :precondition (and (wet ?p))\n    :effect (and (dry ?p) (not (wet ?p)))\n)\n```\n**Explanation**: This action allows the painting to dry, changing its state from wet to dry.\n\n---\n\n#### Action 6: Shake-Off-Excess-Salt\n```lisp\n"
    ]
}