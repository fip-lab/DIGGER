{
    "choose": [
        "(:action buy-notebook\n    :parameters (?notebook - entity)\n    :precondition (and (not-in-possession ?notebook) (available-in-store ?notebook))\n    :effect (and (in-possession ?notebook) (not (not-in-possession ?notebook)))\n)\n\n",
        "(:action gather-memorabilia\n    :parameters (?memorabilia - entity)\n    :precondition (and (not-in-possession ?memorabilia) (available ?memorabilia))\n    :effect (and (in-possession ?memorabilia) (not (not-in-possession ?memorabilia)))\n)\n\n",
        "(:action gather_recipes\n    :parameters (?p - person ?r - recipe ?l - location ?s - scrapbook)\n    :precondition (and (at ?p ?l) (recipe_available ?r ?l) (not (in_scrapbook ?r ?s)))\n    :effect (and (in_scrapbook ?r ?s) (not (recipe_available ?r ?l)))\n)\n```\n\n---\n\n#### Step 3: Create a theme for your scrapbook, if you have one.\n```pddl\n",
        "(:action choose-website\n    :parameters (?w - website)\n    :precondition (and (not (chosen ?w)) (is-available ?w))\n    :effect (and (chosen ?w) (ready-to-upload ?w))\n)\n```\n**Explanation:** This action represents selecting a website that will be used to create the memory book. The precondition checks that the website has not been chosen yet and is available. The effect marks the website as chosen and ready for the next step.\n\n---\n\n#### Action 2: Upload Pictures\n```lisp\n",
        "(:action choose_cardstock\n    :parameters (?p - person ?paper - material ?s - scrapbook)\n    :precondition (and (at ?p supply_store) (available ?paper supply_store) (suitable ?paper scrapbook))\n    :effect (and (has_material ?s ?paper) (not (available ?paper supply_store)))\n)\n```\n\n---\n\n#### Step 5: Protect heirloom recipe cards.\n```pddl\n",
        "(:action choose_flashback_moment\n    :parameters (?moment - moment ?writer - character)\n    :precondition (and (unselected ?moment) (unfinished ?moment))\n    :effect (and (selected ?moment) (not (unselected ?moment)))\n)\n```\n\n---\n\n#### Step 2: Pinpoint when the flashback takes place.\n```lisp\n",
        "(:action select-design-theme\n    :parameters (?w - website ?t - theme)\n    :precondition (and (chosen ?w) (not (theme-selected ?t)) (themes-available ?w))\n    :effect (and (theme-selected ?t) (theme-applied ?w))\n)\n```\n**Explanation:** This action represents selecting a design theme for the memory book. The precondition checks that a website has been chosen and themes are available. The effect applies the selected theme to the book.\n\n---\n\n#### Action 4: Customize Pages\n```lisp\n",
        "(:action find_template\n    :parameters (?template - item ?you - agent ?source - location)\n    :precondition (and (at ?you ?source) (available ?template ?source))\n    :effect (and (selected ?template) (not (available ?template ?source)))\n)\n```\n\n#### Step 2: Ready your content\n```lisp\n",
        "(:action find_sturdy_container\n    :parameters (?p - player ?container - container ?sachet - moisture_absorbing_sachet ?mothballs - mothballs)\n    :precondition (and (inventory ?p ?container) (not (crushable ?container)) (inventory ?p ?sachet) (inventory ?p ?mothballs))\n    :effect (and (sturdy ?container) (protected ?container ?sachet ?mothballs))\n)\n\n",
        "(:action assign_interviewees\n    :parameters (?h - historian ?o - older_person)\n    :precondition (and (historian ?h) (older_person ?o) (not (assigned ?o)))\n    :effect (and (assigned ?o) (interviewing ?h ?o))\n)\n\n",
        "(:action give_scrapbook\n    :parameters (?p - person ?s - scrapbook ?recipient - person)\n    :precondition (and (has_scrapbook ?p ?s) (not (gift_given ?s ?recipient)))\n    :effect (and (gift_given ?s ?recipient) (not (has_scrapbook ?p ?s)))\n)\n```\n\n---\n\n### Notes:\n- Each action captures the intent and logic of the corresponding step.\n- Preconditions and effects are derived from the provided entity states and descriptions.\n- Steps that were irrelevant or ambiguous were modified to align with the task of creating a cookbook scrapbook. For example, \"protect heirloom recipe cards\" was interpreted as adding protective material to recipe cards.\n- If additional domain-specific predicates or objects are required, they can be added to the domain definition.\n\nLet me know if you need further clarifications or additional actions!"
    ],
    "decorate": [
        "(:action decorate-cover\n    :parameters (?notebook - entity ?supplies - entity)\n    :precondition (and (in-possession ?notebook) (organized ?supplies) (plain-cover ?notebook))\n    :effect (and (decorated-cover ?notebook) (not (plain-cover ?notebook)))\n)\n\n",
        "(:action decorate_pages\n    :parameters (?p - person ?s - scrapbook ?tool - decoration_tool)\n    :precondition (and (has_tool ?p ?tool) (not (pages_decorated ?s)))\n    :effect (and (pages_decorated ?s) (not (undecorated_pages ?s)))\n)\n```\n\n---\n\n#### Step 8: Place plastic tabs at the beginning of each new section.\n```pddl\n",
        "(:action record_interview\n    :parameters (?h - historian ?o - older_person ?r - recorder ?t - tape)\n    :precondition (and (interviewing ?h ?o) (has ?h ?r) (has ?h ?t) (functional ?r) (functional ?t))\n    :effect (and (recorded_audio ?o) (recorded_video ?o) (not (functional ?t)))\n)\n\n",
        "(:action transcribe_interview\n    :parameters (?h - historian ?o - older_person ?n - notepad)\n    :precondition (and (recorded_audio ?o) (recorded_video ?o) (has ?h ?n))\n    :effect (and (transcribed ?o) (has_text ?o))\n)\n\n",
        "(:action mark_open_date\n    :parameters (?p - player ?capsule - container ?date - date)\n    :precondition (and (stored ?capsule ?location) (not (marked ?capsule ?date)))\n    :effect (and (marked ?capsule ?date))\n)\n```\n\n### Explanation of Each Action:\n1. **find_sturdy_container**: Ensures a sturdy container is found and protected with a moisture-absorbing sachet and mothballs.\n2. **write_letter_to_self**: Allows the player to write a letter with a specified time to be opened in the future.\n3. **take_family_photos**: Captures photos of family members and the entire family.\n4. **collect_hair_samples**: Collects and labels hair samples from family members.\n5. **write_questionnaire**: Prepares a questionnaire for family members to answer.\n6. **describe_ideal_partner**: Records descriptions of ideal partners for family members who are not partnered.\n7. **add_special_items**: Adds meaningful items to the capsule that are special to family members.\n8. **store_capsule**: Places the capsule in a safe and dry location.\n9. **mark_open_date**: Marks the capsule with a date for future opening.\n\nThese actions align with the task of creating a family time capsule and ensure all steps are logically represented."
    ],
    "add": [
        "(:action add-memorabilia-to-pages\n    :parameters (?notebook - entity ?memorabilia - entity)\n    :precondition (and (in-possession ?notebook) (in-possession ?memorabilia) (empty-pages ?notebook))\n    :effect (and (memorabilia-added ?notebook ?memorabilia) (not (empty-pages ?notebook)))\n)\n\n",
        "(:action add_special_items\n    :parameters (?p - player ?item - object ?family_member - person ?capsule - container)\n    :precondition (and (inventory ?p ?item) (special_to ?item ?family_member) (not (in ?item ?capsule)))\n    :effect (and (in ?item ?capsule))\n)\n\n",
        "(:action add_elements\n    :parameters (?p - person ?element - scrapbook_element ?s - scrapbook)\n    :precondition (and (available ?element source) (not (added ?element ?s)))\n    :effect (and (added ?element ?s) (not (available ?element source)))\n)\n```\n\n---\n\n#### Step 7: Spend time decorating each page on the computer, book creation software, or by hand.\n```pddl\n",
        "(:action add_preparation_photos\n    :parameters (?p - player ?bride - person ?groom - person ?album - item)\n    :precondition (and (has_photos ?bride preparation_photos) (has_photos ?groom preparation_photos) (has_album ?album))\n    :effect (and (in_album preparation_photos) (not (has_photos ?bride preparation_photos)) (not (has_photos ?groom preparation_photos)))\n)\n```\n\n---\n\n#### Step 3: Follow a couple of pages showing the wedding party.\n```lisp\n",
        "(:action add_wedding_party_photos\n    :parameters (?p - player ?wedding_party - group ?album - item)\n    :precondition (and (has_photos ?wedding_party wedding_party_photos) (has_album ?album))\n    :effect (and (in_album wedding_party_photos) (not (has_photos ?wedding_party wedding_party_photos)))\n)\n```\n\n---\n\n#### Step 4: Take a few pages to feature the venue.\n```lisp\n",
        "(:action add_venue_photos\n    :parameters (?p - player ?venue - location ?album - item)\n    :precondition (and (has_photos ?venue venue_photos) (has_album ?album))\n    :effect (and (in_album venue_photos) (not (has_photos ?venue venue_photos)))\n)\n```\n\n---\n\n#### Step 5: Put extra emphasis on the ceremony.\n```lisp\n",
        "(:action add_ceremony_photos\n    :parameters (?p - player ?ceremony - event ?album - item)\n    :precondition (and (has_photos ?ceremony ceremony_photos) (has_album ?album))\n    :effect (and (in_album ceremony_photos) (not (has_photos ?ceremony ceremony_photos)))\n)\n```\n\n---\n\n#### Step 6: Follow this with group shots with friends and family in various combinations.\n```lisp\n",
        "(:action add_group_photos\n    :parameters (?p - player ?friends - group ?family - group ?album - item)\n    :precondition (and (has_photos ?friends group_photos) (has_photos ?family group_photos) (has_album ?album))\n    :effect (and (in_album group_photos) (not (has_photos ?friends group_photos)) (not (has_photos ?family group_photos)))\n)\n```\n\n---\n\n#### Step 7: Celebrate the celebration.\n```lisp\n",
        "(:action add_celebration_photos\n    :parameters (?p - player ?celebration - event ?album - item)\n    :precondition (and (has_photos ?celebration celebration_photos) (has_album ?album))\n    :effect (and (in_album celebration_photos) (not (has_photos ?celebration celebration_photos)))\n)\n```\n\n---\n\n#### Step 8: Save at least one page for toasts and speeches.\n```lisp\n",
        "(:action add_toasts_and_speeches\n    :parameters (?p - player ?toasts - event ?album - item)\n    :precondition (and (has_photos ?toasts toast_photos) (has_album ?album))\n    :effect (and (in_album toast_photos) (not (has_photos ?toasts toast_photos)))\n)\n```\n\n---\n\n#### Step 9: Be sure to include a page with the happy couple\u2019s first dance.\n```lisp\n",
        "(:action add_first_dance_photos\n    :parameters (?p - player ?couple - group ?album - item)\n    :precondition (and (has_photos ?couple first_dance_photos) (has_album ?album))\n    :effect (and (in_album first_dance_photos) (not (has_photos ?couple first_dance_photos)))\n)\n```\n\n---\n\n#### Step 10: Use the next page to show the cutting of the cake.\n```lisp\n",
        "(:action add_cake_cutting_photos\n    :parameters (?p - player ?cake - item ?album - item)\n    :precondition (and (has_photos ?cake cake_cutting_photos) (has_album ?album))\n    :effect (and (in_album cake_cutting_photos) (not (has_photos ?cake cake_cutting_photos)))\n)\n```\n\n---\n\n#### Step 11: Throw in a couple of fun shots showing the bride throwing her bouquet and the groom throwing his garters.\n```lisp\n",
        "(:action add_fun_shots\n    :parameters (?p - player ?bride - person ?groom - person ?album - item)\n    :precondition (and (has_photos ?bride bouquet_throw_photos) (has_photos ?groom garter_throw_photos) (has_album ?album))\n    :effect (and (in_album bouquet_throw_photos) (in_album garter_throw_photos) (not (has_photos ?bride bouquet_throw_photos)) (not (has_photos ?groom garter_throw_photos)))\n)\n```\n\n---\n\n#### Step 12: Use the next few pages for miscellaneous photos.\n```lisp\n",
        "(:action add_miscellaneous_photos\n    :parameters (?p - player ?photos - item ?album - item)\n    :precondition (and (has_photos ?photos miscellaneous_photos) (has_album ?album))\n    :effect (and (in_album miscellaneous_photos) (not (has_photos ?photos miscellaneous_photos)))\n)\n```\n\n---\n\n#### Step 13: Finish the album with one or two pages dedicated to the bride and groom.\n```lisp\n",
        "(:action add_closing_photos\n    :parameters (?p - player ?bride - person ?groom - person ?album - item)\n    :precondition (and (has_photos ?bride bride_photos) (has_photos ?groom groom_photos) (has_album ?album))\n    :effect (and (in_album bride_photos) (in_album groom_photos) (not (has_photos ?bride bride_photos)) (not (has_photos ?groom groom_photos)))\n)\n```\n\n---\n\nThese PDDL actions are designed to capture the steps and logic of creating a storybook wedding album based on the provided descriptions. Each action ensures that the necessary preconditions are met and the effects represent the inclusion of the relevant photos in the album.",
        "(:action collect_media\n    :parameters (?o - older_person ?s - student ?p - photo ?a - artwork ?at - audio_tape ?v - video_clip)\n    :precondition (and (older_person ?o) (student ?s) (available ?p) (available ?a) (available ?at) (available ?v))\n    :effect (and (has ?s ?p) (has ?s ?a) (has ?s ?at) (has ?s ?v))\n)\n\n",
        "(:action collect_hair_samples\n    :parameters (?p - player ?scissors - scissors ?hair_samples - hair ?family_member - person)\n    :precondition (and (inventory ?p ?scissors) (not (collected ?hair_samples ?family_member)))\n    :effect (and (collected ?hair_samples ?family_member) (labeled ?hair_samples ?family_member))\n)\n\n"
    ],
    "write": [
        "(:action write-titles-and-descriptions\n    :parameters (?notebook - entity)\n    :precondition (and (in-possession ?notebook) (memorabilia-added ?notebook))\n    :effect (and (titles-written ?notebook) (descriptions-written ?notebook))\n)\n\n",
        "(:action write_letter_to_self\n    :parameters (?p - player ?letter - letter ?time - time_period)\n    :precondition (and (inventory ?p ?letter) (not (written ?letter)))\n    :effect (and (written ?letter) (to_be_opened_after ?letter ?time))\n)\n\n",
        "(:action write_questionnaire\n    :parameters (?p - player ?questionnaire - document)\n    :precondition (and (inventory ?p ?questionnaire) (not (completed ?questionnaire)))\n    :effect (and (completed ?questionnaire) (ready_for_family ?questionnaire))\n)\n\n",
        "(:action write_grocery_list\n    :parameters (?person - person ?list - list)\n    :precondition (and\n                    (wants_to_shop_smarter ?person)\n                    (has_goals ?person))\n    :effect (and\n              (created_list ?person ?list)\n              (type_of_list ?list grocery)\n              (prepared_for_shopping ?person))\n)\n```\n\n#### Action 2: Create Packing List\n```lisp\n"
    ],
    "hold": [
        "(:action hold-onto-memorabilia\n    :parameters (?memorabilia - entity)\n    :precondition (and (not-in-possession ?memorabilia) (available ?memorabilia))\n    :effect (and (stored-for-later ?memorabilia))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **`buy-notebook`**: Captures the action of purchasing a composition notebook or similar. Preconditions ensure the notebook is not already in possession and is available in the store. The effect updates the state to reflect the notebook is now in possession.\n\n2. **`gather-decorating-supplies`**: Represents the step of organizing decorating supplies. The precondition checks if supplies are scattered, and the effect reflects that they are now organized.\n\n3. **`choose-theme`**: Reflects the action of selecting a theme for the Smash Book. The precondition ensures that the theme is unselected, and the effect updates it to selected.\n\n4. **`decorate-cover`**: Captures decorating the notebook's cover using the gathered supplies. Preconditions ensure the notebook is in possession, supplies are organized, and the cover is plain. The effect updates the cover to decorated.\n\n5. **`decide-embellishment-strategy`**: Represents the decision-making process about embellishing pages. The precondition checks if the strategy is undecided, and the effect updates it to decided.\n\n6. **`gather-memorabilia`**: Captures the action of collecting memorabilia to include in the Smash Book. Preconditions ensure the memorabilia is not already in possession and is available. The effect updates the state to reflect possession of the memorabilia.\n\n7. **`add-memorabilia-to-pages`**: Represents adding memorabilia to the notebook pages. Preconditions ensure the notebook is in possession, the memorabilia is available, and the pages are empty. The effect reflects that memorabilia has been added.\n\n8. **`write-titles-and-descriptions`**: Captures the step of writing titles and descriptions for the pages. Preconditions ensure the notebook is in possession and memorabilia has been added. The effect reflects that titles and descriptions are written.\n\n9. **`hold-onto-memorabilia`**: Represents storing additional memorabilia for later use. Preconditions check that the memorabilia is not already in possession but is available. The effect updates the state to reflect the memorabilia is stored for later.\n\n---\n\nThese actions align with the task and steps while adhering to the provided PDDL structure and logic.",
        "(:action store_capsule\n    :parameters (?p - player ?capsule - container ?location - place)\n    :precondition (and (inventory ?p ?capsule) (safe ?location) (dry ?location))\n    :effect (and (stored ?capsule ?location) (not (inventory ?p ?capsule)))\n)\n\n"
    ],
    "order": [
        "(:action order-or-share-book\n    :parameters (?w - website ?b - book)\n    :precondition (and (all-pages-customized ?b) (theme-applied ?w) (not (book-shared ?b)))\n    :effect (and (book-shared ?b) (copies-ordered ?b))\n)\n```\n**Explanation:** This action represents the final step of either ordering copies of the memory book or sharing it online. The precondition ensures that all pages have been customized, a theme has been applied, and the book has not already been shared. The effect marks the book as shared and copies as ordered.\n\n---\n\n### Adjustments to Irrelevant Steps:\nThe provided entity state information about \"covering tracks,\" \"npc,\" and \"track\" does not seem relevant to the task of creating a wedding memory book. Therefore, these steps have been omitted or ignored in favor of focusing on the core task-specific actions.\n\n"
    ],
    "create": [
        "(:action ready_content\n    :parameters (?content - item ?you - agent ?source - location)\n    :precondition (and (at ?you ?source) (available ?content ?source))\n    :effect (and (prepared ?content) (not (available ?content ?source)))\n)\n```\n\n#### Step 3: Pick a consistent style\n```lisp\n",
        "(:action design_memory_book\n    :parameters (?memory_book - item ?template - item ?content - item ?style - attribute ?you - agent)\n    :precondition (and (selected ?template) (prepared ?content) (chosen ?style) (focused ?you))\n    :effect (and (designed ?memory_book) (used ?template) (used ?content) (styled ?memory_book ?style))\n)\n```\n\n#### Step 5: Share your memory book\n```lisp\n",
        "(:action create_web_page\n    :parameters (?s - student ?o - older_person ?t - text ?p - photo)\n    :precondition (and (has_text ?o) (digitized ?p) (student ?s))\n    :effect (and (web_page_created ?o ?s) (contains_text ?o ?t) (contains_photo ?o ?p))\n)\n\n",
        "(:action create_theme\n    :parameters (?p - person ?s - scrapbook ?t - theme)\n    :precondition (and (has_knowledge ?p theme_options) (not (theme_selected ?s)))\n    :effect (and (theme_selected ?s ?t) (not (no_theme ?s)))\n)\n```\n\n---\n\n#### Step 4: Choose cardstock or strong paper to use in your cookbook scrapbook project.\n```pddl\n",
        "(:action create_packing_list\n    :parameters (?person - person ?list - list)\n    :precondition (and\n                    (traveling ?person)\n                    (wants_to_be_prepared ?person))\n    :effect (and\n              (created_list ?person ?list)\n              (type_of_list ?list packing)\n              (prepared_for_trip ?person))\n)\n```\n\n#### Action 3: Brainstorm Bucket List\n```lisp\n",
        "(:action publish_web_page\n    :parameters (?o - older_person ?s - student)\n    :precondition (and (web_page_created ?o ?s))\n    :effect (and (published ?o ?s) (time_capsule ?o ?s))\n)\n\n"
    ],
    "pick": [
        "(:action pick_style\n    :parameters (?style - attribute ?you - agent)\n    :precondition (and (focused ?you) (not (chosen ?style)))\n    :effect (and (chosen ?style) (consistent ?style))\n)\n```\n\n#### Step 4: Design your memory book\n```lisp\n"
    ],
    "bring": [
        "(:action bring_equipment\n    :parameters (?h - historian ?r - recorder ?t - tape ?n - notepad)\n    :precondition (and (historian ?h) (available ?r) (available ?t) (available ?n))\n    :effect (and (has ?h ?r) (has ?h ?t) (has ?h ?n))\n)\n\n",
        "(:action take_family_photos\n    :parameters (?p - player ?camera - camera ?family_photos - photos)\n    :precondition (and (inventory ?p ?camera) (not (taken ?family_photos)))\n    :effect (and (taken ?family_photos) (inventory ?p ?family_photos))\n)\n\n"
    ],
    "scan": [
        "(:action scan_photos\n    :parameters (?s - student ?p - photo)\n    :precondition (and (has ?s ?p) (scannable ?p))\n    :effect (and (scanned ?p) (digitized ?p))\n)\n\n",
        "(:action scan_wedding_invitation\n    :parameters (?p - player ?invitation - item ?scanner - device)\n    :precondition (and (at ?p scanner_location) (at ?invitation scanner_location) (has_device ?scanner))\n    :effect (and (scanned ?invitation) (in_album ?invitation))\n)\n```\n\n---\n\n#### Step 2: Dedicate the next few pages to the preparations of bride and groom (usually starting with the bride).\n```lisp\n"
    ],
    "archive": [
        "(:action archive_time_capsule\n    :parameters (?s - student ?o - older_person ?a - archive)\n    :precondition (and (time_capsule ?o ?s) (archive_available ?a))\n    :effect (and (archived ?o ?a))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **bring_equipment**: Ensures each personal historian or volunteer has the necessary equipment (recorder, tape, notepad).\n2. **assign_interviewees**: Assigns one or two older persons to each historian for interviewing.\n3. **record_interview**: Records the older person's interview in both audio and video formats using the recorder and tape.\n4. **transcribe_interview**: Converts the recorded audio and video into text for preservation.\n5. **collect_media**: Collects supplementary materials (photos, artwork, audio tapes, video clips) from the older person.\n6. **scan_photos**: Scans the photos to digitize them for online use.\n7. **create_web_page**: Creates a web page with the older person's life story, including text and photos.\n8. **publish_web_page**: Publishes the web page online as a \"time capsule.\"\n9. **archive_time_capsule**: Archives the published web pages in a history archive for future reference.\n\n---\n\n### Notes:\n- The actions are designed to align with the task's goal of creating a salable life story and preserving it in a digital format.\n- Irrelevant or unclear steps have been omitted or adjusted to focus on the primary objective.\n- Preconditions and effects are derived from the entity states and task descriptions provided.",
        "(:action place_tabs\n    :parameters (?p - person ?tabs - item ?s - scrapbook)\n    :precondition (and (available ?tabs ?p) (not (tabs_placed ?s)))\n    :effect (and (tabs_placed ?s) (not (tabs_unplaced ?s)))\n)\n```\n\n---\n\n#### Step 9: Give a family cooking scrapbook to friends and family for gifts.\n```pddl\n",
        "(:action label_flashback_in_script\n    :parameters (?moment - moment ?writer - character)\n    :precondition (and (selected ?moment) (unfinished ?moment))\n    :effect (and (labeled ?moment) (not (unfinished ?moment)))\n)\n```\n\n---\n\n#### Step 4: Use visual cues or other devices to set the flashback apart.\n```lisp\n"
    ],
    "describe": [
        "(:action describe_ideal_partner\n    :parameters (?p - player ?family_member - person ?description - text)\n    :precondition (and (not (partnered ?family_member)) (not (described ?family_member ?description)))\n    :effect (and (described ?family_member ?description))\n)\n\n"
    ],
    "protect": [
        "(:action protect_recipe_cards\n    :parameters (?p - person ?card - recipe_card ?s - scrapbook ?cover - material)\n    :precondition (and (has_recipe_card ?s ?card) (available ?cover protective_material))\n    :effect (and (protected ?card ?cover) (not (unprotected ?card)))\n)\n```\n\n---\n\n#### Step 6: Consider adding the following elements to your scrapbook: photos of the recipe creators, stories about the recipe or the person who wrote it, a shopping list at the beginning, collage elements from magazines, signatures, and other decorative elements.\n```pddl\n"
    ],
    "use": [
        "(:action use_visual_cues\n    :parameters (?moment - moment ?cue - visual_cue ?writer - character)\n    :precondition (and (labeled ?moment) (plain ?cue))\n    :effect (and (distinctive ?cue) (not (plain ?cue)))\n)\n```\n\n---\n\n#### Step 5: Establish a clear transition into the flashback.\n```lisp\n"
    ],
    "establish": [
        "(:action establish_transition_into_flashback\n    :parameters (?moment - moment ?transition - transition ?writer - character)\n    :precondition (and (distinctive ?moment) (unstarted ?transition))\n    :effect (and (started ?transition) (not (unstarted ?transition)))\n)\n```\n\n---\n\n#### Step 6: Make a smooth transition out of your flashback as well.\n```lisp\n",
        "(:action establish_transition_out_of_flashback\n    :parameters (?moment - moment ?transition - transition ?writer - character)\n    :precondition (and (started ?transition) (unfinished ?moment))\n    :effect (and (finished ?moment) (not (unfinished ?moment)) (smooth ?transition))\n)\n```\n\n---\n\n### Explanation of Generated Actions:\n1. **`choose_flashback_moment`**: Allows the writer to select a significant moment to focus on, changing its state from `unselected` to `selected`.\n2. **`pinpoint_flashback_time`**: Updates the timeline of the flashback, moving from `earlier` to `later` to establish the moment's temporal context.\n3. **`label_flashback_in_script`**: Ensures the flashback is clearly labeled in the script, marking it as `labeled` and transitioning it from `unfinished` to `finished`.\n4. **`use_visual_cues`**: Introduces visual cues to differentiate the flashback from the main narrative, making the cues `distinctive`.\n5. **`establish_transition_into_flashback`**: Handles the transition into the flashback, marking it as `started`.\n6. **`establish_transition_out_of_flashback`**: Smoothly transitions out of the flashback, ensuring the moment is `finished` and the transition is `smooth`.\n\nThese actions align with the task and descriptions provided, ensuring a structured and logical process for writing a flashback in a script. If any step appears irrelevant or ambiguous, it has been adapted to fit the overall task."
    ],
    "decide": [
        "(:action decide-embellishment-strategy\n    :parameters (?strategy - entity)\n    :precondition (and (undecided ?strategy))\n    :effect (and (decided ?strategy) (not (undecided ?strategy)))\n)\n\n",
        "(:action decide_format\n    :parameters (?p - person ?s - scrapbook)\n    :precondition (and (has_knowledge ?p format_options))\n    :effect (and (format_selected ?s) (not (undecided ?s)))\n)\n```\n\n---\n\n#### Step 2: Gather all of your recipes.\n```pddl\n"
    ],
    "upload": [
        "(:action upload-pictures\n    :parameters (?w - website ?p - pictures)\n    :precondition (and (chosen ?w) (not (uploaded ?p)) (pictures-available ?p))\n    :effect (and (uploaded ?p) (pictures-ready ?w))\n)\n```\n**Explanation:** This action involves uploading pictures to the chosen website. The precondition ensures that a website has been chosen, the pictures are available, and they have not already been uploaded. The effect marks the pictures as uploaded and makes them ready for use on the website.\n\n---\n\n#### Action 3: Select Design Theme\n```lisp\n"
    ],
    "customize": [
        "(:action customize-pages\n    :parameters (?w - website ?p - page)\n    :precondition (and (theme-applied ?w) (not (customized ?p)) (page-available ?p))\n    :effect (and (customized ?p) (page-ready ?p))\n)\n```\n**Explanation:** This action involves customizing each page of the memory book. The precondition ensures that a theme has been applied, the page is available, and it has not yet been customized. The effect marks the page as customized and ready.\n\n---\n\n#### Action 5: Order or Share Book\n```lisp\n"
    ],
    "share": [
        "(:action share_memory_book\n    :parameters (?memory_book - item ?you - agent ?recipient - agent)\n    :precondition (and (designed ?memory_book) (at ?you ?recipient))\n    :effect (and (shared ?memory_book ?recipient) (not (at ?memory_book ?you)))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **`find_template`**: This action allows the user to find and select a template or program for the memory book. It assumes that the template is available at a specific source location.\n\n2. **`ready_content`**: This action prepares the content required for the memory book. It ensures that the content is retrieved and marked as ready.\n\n3. **`pick_style`**: This action selects a consistent style for the memory book. It ensures the style is chosen and marked as consistent.\n\n4. **`design_memory_book`**: This action combines the template, content, and style to design the memory book. It ensures all prerequisites are met before designing.\n\n5. **`share_memory_book`**: This action shares the completed memory book with a recipient. It ensures the memory book is designed and that the user is in proximity to the recipient.\n\n---\n\n### Notes:\n\n- The actions are tailored to fit the logical progression of creating a memory book.\n- Preconditions and effects are derived from the task's steps, descriptions, and entity states.\n- Any irrelevant or ambiguous entity states were omitted for clarity and relevance to the task.\n\nIf additional adjustments or more detailed entity states are required, feel free to provide further instructions!"
    ],
    "pinpoint": [
        "(:action pinpoint_flashback_time\n    :parameters (?moment - moment ?time - time ?writer - character)\n    :precondition (and (selected ?moment) (earlier ?time))\n    :effect (and (later ?time) (not (earlier ?time)))\n)\n```\n\n---\n\n#### Step 3: Label your flashback clearly in the script.\n```lisp\n"
    ],
    "brainstorm": [
        "(:action brainstorm_bucket_list\n    :parameters (?person - person ?list - list)\n    :precondition (and\n                    (wants_motivation ?person)\n                    (has_goals ?person))\n    :effect (and\n              (created_list ?person ?list)\n              (type_of_list ?list bucket)\n              (motivated ?person))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **Write Grocery List**: This action corresponds to the description \"Write a grocery list if you want to shop smarter and save money.\" The precondition ensures that the person wants to shop smarter and has goals. The effect indicates that a grocery list is created, and the person is prepared for shopping.\n\n2. **Create Packing List**: This action corresponds to the description \"Create a packing list to make sure you're prepared if you\u2019re traveling.\" The precondition ensures that the person is traveling and wants to be prepared. The effect indicates that a packing list is created, and the person is prepared for the trip.\n\n3. **Brainstorm Bucket List**: This action corresponds to the description \"Brainstorm a bucket list if you want motivation to accomplish your goals.\" The precondition ensures that the person wants motivation and has goals. The effect indicates that a bucket list is created, and the person is motivated.\n\n---\n\n### Notes:\n\n- The actions are tailored to the task of making lists and adhere to the descriptions provided.\n- Irrelevant or unclear entity states were omitted, as they did not directly relate to the task of making lists.\n- The structure and formatting of the PDDL actions follow the example provided.\n\nLet me know if further refinements are needed!"
    ]
}