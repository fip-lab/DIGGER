{
    "wait": [
        "(:action wait_for_hot_day\n    :parameters (?p - player)\n    :precondition (and (not (is_hot_day)) (at ?p outdoors))\n    :effect (is_hot_day)\n)\n```\n\n#### Action 2: Place Tin Foil or Metal Pan in Sunlight\n```lisp\n",
        "(:action wait-for-eggs\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (inPan ?e ?p) (whitesTurningWhite ?e))\n    :effect (and (fullyCookedWhites ?e) (yolkWithSkin ?e))\n)\n```\n\n#### Action 8: flip-egg\n```lisp\n"
    ],
    "place": [
        "(:action place_tin_foil_in_sunlight\n    :parameters (?p - player ?object - heating_element ?l1 - location)\n    :precondition (and \n        (inventory ?p ?object)\n        (is_heating_element ?object)\n        (at ?p ?l1)\n        (is_hot_day)\n        (in_sunlight ?l1)\n    )\n    :effect (and\n        (not (inventory ?p ?object))\n        (at ?object ?l1)\n        (heating ?object)\n    )\n)\n```\n\n#### Action 3: Crack Egg onto Heated Metal Surface\n```lisp\n",
        "(:action place_eggs_in_bowl\n    :parameters (?eggs - eggs ?bowl - container ?p - player)\n    :precondition (and \n        (inventory ?p ?eggs)\n        (is_empty ?bowl)\n        (is_egg ?eggs)\n    )\n    :effect (and \n        (not (inventory ?p ?eggs))\n        (in_bowl ?eggs ?bowl)\n        (not (is_empty ?bowl))\n    )\n)\n```\n\n2. **Add milk to the bowl**\n```pddl\n",
        "(:action place_strips_on_dish\n    :parameters (?mixture - food ?dish - container ?p - player)\n    :precondition (and \n        (is_strips ?mixture)\n        (is_empty ?dish)\n        (inventory ?p ?mixture)\n    )\n    :effect (and \n        (not (inventory ?p ?mixture))\n        (on_dish ?mixture ?dish)\n        (not (is_empty ?dish))\n    )\n)\n```\n\n---\n\n### Notes:\n- Each action is crafted to align with the logical flow of the task.\n- Preconditions and effects are based on the entity state transitions provided.\n- If irrelevant steps or incorrect attributes were identified, they were adjusted to maintain task relevance.",
        "(:action place_wrap\n    :parameters (?wrap - eggroll_wrap ?surface - table)\n    :precondition (and (clean ?wrap) (clear ?surface))\n    :effect (and (on_surface ?wrap ?surface) (corner_facing ?wrap ?surface) (not (clear ?surface)))\n)\n```\n\n---\n\n#### Step 2: \"Use a spoon to put a scoop of the filling in the middle of the wrap.\"\n```lisp\n",
        "(:action place_egg_on_sandwich_or_burger\n    :parameters (?egg - ingredient ?sandwich_or_burger - ingredient ?plate - dish ?loc - location)\n    :precondition (and\n        (fried ?egg)\n        (flipped ?egg)\n        (at ?sandwich_or_burger ?loc)\n        (clean ?plate)\n        (at-dish ?plate ?loc)\n    )\n    :effect (and\n        (on ?egg ?sandwich_or_burger)\n        (on ?sandwich_or_burger ?plate)\n        (served ?egg)\n        (not (at ?sandwich_or_burger ?loc))\n        (not (at ?egg ?loc))\n    )\n)\n```\n\n#### Action 8: Make Huevos Rancheros\n```lisp\n",
        "(:action spread_egg_wash_on_pie_crust\n    :parameters (?egg_wash - ingredient ?pie_crust - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?pie_crust ?table)\n      (at ?brush ?table)\n      (clean ?brush)\n    )\n    :effect (and\n      (coated_with_egg_wash ?pie_crust)\n    )\n)\n```\n\n---\n\n#### 3. Seal Pastry Edges with Egg Wash\n```lisp\n",
        "(:action spread-oil-or-butter\n    :parameters (?p - pan ?o - oil_or_butter)\n    :precondition (and (inPan ?o ?p) (melted ?o))\n    :effect (and (spread ?o ?p) (not (stick ?p)))\n)\n```\n\n#### Action 4: crack-eggs\n```lisp\n",
        "(:action cover_baked_goods\n    :parameters (?egg_wash - ingredient ?baked_goods - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?baked_goods ?table)\n      (at ?brush ?table)\n      (clean ?brush)\n    )\n    :effect (and\n      (coated_with_egg_wash ?baked_goods)\n    )\n)\n```\n\n---\n\n#### 5. Secure Toppings with Egg Wash\n```lisp\n",
        "(:action pour_mixture_into_pan\n    :parameters (?bowl - container ?pan - container ?p - player)\n    :precondition (and \n        (is_beaten ?bowl)\n        (is_empty ?pan)\n        (inventory ?p ?bowl)\n    )\n    :effect (and \n        (not (is_empty ?pan))\n        (in_pan ?mixture ?pan)\n        (not (is_beaten ?bowl))\n    )\n)\n```\n\n5. **Cook the mixture in the pan**\n```pddl\n",
        "(:action trim_bread_slices\n    :parameters (?bread - ingredient ?knife - utensil)\n    :precondition (and\n        (at ?bread kitchen_counter)\n        (whole ?bread)\n        (at ?knife kitchen_counter)\n        (clean ?knife)\n    )\n    :effect (and\n        (trimmed ?bread)\n        (not (whole ?bread))\n        (dirty ?knife)\n    )\n)\n```\n\n---\n\n#### Action 6: `wrap_bread_around_filling`\n```lisp\n",
        "(:action wrap_bread_around_filling\n    :parameters (?bread - ingredient ?filling - ingredient ?shape - form)\n    :precondition (and\n        (trimmed ?bread)\n        (shaped ?filling ?shape)\n        (at ?bread kitchen_counter)\n        (at ?filling kitchen_counter)\n    )\n    :effect (and\n        (wrapped ?bread ?filling)\n        (not (shaped ?filling ?shape))\n    )\n)\n```\n\n---\n\n#### Action 7: `deep_fry_rolls`\n```lisp\n"
    ],
    "crack": [
        "(:action crack_egg_on_metal\n    :parameters (?p - player ?egg - egg ?object - heating_element ?l1 - location)\n    :precondition (and \n        (inventory ?p ?egg)\n        (is_egg ?egg)\n        (at ?p ?l1)\n        (at ?object ?l1)\n        (heating ?object)\n        (is_hot_day)\n    )\n    :effect (and\n        (not (inventory ?p ?egg))\n        (on_surface ?egg ?object)\n        (cooking ?egg)\n    )\n)\n```\n\n#### Action 4: Crack Egg onto Sidewalk\n```lisp\n",
        "(:action crack_egg_on_sidewalk\n    :parameters (?p - player ?egg - egg ?l1 - location)\n    :precondition (and \n        (inventory ?p ?egg)\n        (is_egg ?egg)\n        (at ?p ?l1)\n        (is_hot_day)\n        (is_sidewalk ?l1)\n        (heated_surface ?l1)\n    )\n    :effect (and\n        (not (inventory ?p ?egg))\n        (on_surface ?egg ?l1)\n        (cooking ?egg)\n    )\n)\n```\n\n#### Action 5: Discard Eggs\n```lisp\n",
        "(:action crack_egg_into_pan\n    :parameters (?egg - ingredient ?pan - tool ?loc - location)\n    :precondition (and\n        (at ?egg ?loc)\n        (at-tool ?pan ?loc)\n        (hot ?pan)\n        (clean ?egg)\n    )\n    :effect (and\n        (in-pan ?egg ?pan)\n        (not (at ?egg ?loc))\n        (cooking ?egg)\n        (sizzling ?pan)\n    )\n)\n```\n\n#### Action 3: Fry Egg\n```lisp\n",
        "(:action crack-eggs\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (spread ?o ?p) (not (inPan ?e ?p)))\n    :effect (and (inPan ?e ?p) (not (inShell ?e)))\n)\n```\n\n#### Action 5: cook-eggs\n```lisp\n",
        "(:action fry_egg_rolls\n    :parameters (?rolls - ingredient ?pan - container ?stove - appliance)\n    :precondition (and\n        (all_rolls_prepared)\n        (at ?rolls ?pan)\n        (at ?pan ?stove)\n        (on ?stove)\n    )\n    :effect (and\n        (fried ?rolls)\n    )\n)\n```\n\n#### 7. Serve\n```lisp\n",
        "(:action fry_eggrolls\n    :parameters (?eggroll - eggroll ?oil - peanut_oil ?pot - cookware)\n    :precondition (and (sealed ?eggroll) (heated ?oil) (in_pot ?oil ?pot))\n    :effect (and (fried ?eggroll) (brown ?eggroll))\n)\n```\n\n---\n\n#### Step 7: \"Drain the cooked egg rolls on a paper towel or a rack and serve them hot.\"\n```lisp\n",
        "(:action fry_egg\n    :parameters (?egg - ingredient ?pan - tool ?loc - location)\n    :precondition (and\n        (in-pan ?egg ?pan)\n        (hot ?pan)\n        (sizzling ?pan)\n        (at-tool ?pan ?loc)\n    )\n    :effect (and\n        (fried ?egg)\n        (golden_brown ?egg)\n        (runny_yolk ?egg)\n        (not (raw ?egg))\n    )\n)\n```\n\n#### Action 4: Flip Egg\n```lisp\n",
        "(:action heat_oil\n    :parameters (?oil - peanut_oil ?pot - cookware)\n    :precondition (and (in_pot ?oil ?pot) (not (heated ?oil)))\n    :effect (and (heated ?oil) (ready_for_frying ?oil))\n)\n```\n\n---\n\n#### Step 6: \"Place the egg rolls into the heated oil and fry them until they are brown.\"\n```lisp\n",
        "(:action heat_oil_in_pan\n    :parameters (?pan - tool ?oil - ingredient ?stove - appliance ?loc - location)\n    :precondition (and\n        (at-tool ?pan ?loc)\n        (at ?oil ?loc)\n        (at-appliance ?stove ?loc)\n        (has-power ?stove)\n        (clean ?pan)\n        (cool ?pan)\n    )\n    :effect (and\n        (heated ?pan)\n        (hot ?pan)\n        (not (cool ?pan))\n        (in-pan ?oil ?pan)\n        (sizzling ?pan)\n    )\n)\n```\n\n#### Action 2: Crack Egg into Pan\n```lisp\n",
        "(:action heat-pan\n    :parameters (?p - pan ?s - stove)\n    :precondition (and (onCounter ?p) (off ?s))\n    :effect (and (hot ?p) (on ?s) (not (off ?s)))\n)\n```\n\n#### Action 2: add-oil-or-butter\n```lisp\n"
    ],
    "flip": [
        "(:action discard_eggs\n    :parameters (?p - player ?egg1 - egg ?egg2 - egg ?l1 - location)\n    :precondition (and \n        (on_surface ?egg1 ?l1)\n        (on_surface ?egg2 ?l1)\n        (at ?p ?l1)\n    )\n    :effect (and\n        (not (on_surface ?egg1 ?l1))\n        (not (on_surface ?egg2 ?l1))\n        (discarded ?egg1)\n        (discarded ?egg2)\n    )\n)\n```\n\n---\n\n### Explanation of PDDL Actions:\n\n1. **`wait_for_hot_day`**:\n   - The player must wait until the conditions are right for frying an egg on the sidewalk, i.e., it must be a very hot day. This action sets the `is_hot_day` condition to true.\n\n2. **`place_tin_foil_in_sunlight`**:\n   - The player places a tin foil or metal pan in direct sunlight to allow it to heat up. This action requires the player to have the heating element in their inventory and be in a location with sunlight.\n\n3. **`crack_egg_on_metal`**:\n   - The player cracks an egg onto the heated metal surface (e.g., tin foil or pan). The metal surface must be hot and in the same location as the player.\n\n4. **`crack_egg_on_sidewalk`**:\n   - The player cracks a second egg directly onto the sidewalk. The sidewalk must be a heated surface, and it must be a hot day.\n\n5. **`discard_eggs`**:\n   - After frying the eggs, the player discards them. This action removes the eggs from the environment and marks them as discarded.\n\n---\n\n### Notes:\n- The `heating` effect for the tin foil or pan is based on the assumption that placing it in sunlight on a hot day will heat it up.\n- The sidewalk is assumed to be a `heated_surface` when it is a hot day.\n- The `discard_eggs` action ensures proper cleanup after the task is completed.\n",
        "(:action flip_egg\n    :parameters (?egg - ingredient ?pan - tool ?loc - location)\n    :precondition (and\n        (fried ?egg)\n        (in-pan ?egg ?pan)\n        (at-tool ?pan ?loc)\n    )\n    :effect (and\n        (flipped ?egg)\n        (evenly_cooked ?egg)\n    )\n)\n```\n\n#### Action 5: Serve Egg on Toast\n```lisp\n",
        "(:action flip-back-egg\n    :parameters (?e - egg ?p - pan ?sp - spatula)\n    :precondition (and (flipped ?e) (inPan ?e ?p))\n    :effect (and (not (flipped ?e)) (readyToServe ?e))\n)\n```\n\n#### Action 10: make-toast\n```lisp\n"
    ],
    "cook": [
        "(:action cook_vegetables\n    :parameters (?vegetables - ingredient ?pan - container ?stove - appliance)\n    :precondition (and\n        (at ?vegetables ?pan)\n        (at ?pan ?stove)\n        (on ?stove)\n    )\n    :effect (and\n        (cooked ?vegetables)\n    )\n)\n```\n\n#### 2. Add Wet Ingredients\n```lisp\n",
        "(:action cook_mixture\n    :parameters (?pan - container ?p - player)\n    :precondition (and \n        (in_pan ?mixture ?pan)\n        (not (is_cooked ?mixture))\n        (has_heat ?pan)\n    )\n    :effect (and \n        (is_cooked ?mixture)\n        (not (has_heat ?pan))\n    )\n)\n```\n\n6. **Remove the cooked egg from heat**\n```pddl\n",
        "(:action cook-eggs\n    :parameters (?e - egg ?p - pan ?s - stove)\n    :precondition (and (inPan ?e ?p) (on ?s) (hot ?p))\n    :effect (and (whitesTurningWhite ?e) (not (raw ?e)))\n)\n```\n\n#### Action 6: turn-off-stove\n```lisp\n",
        "(:action make_spring_rolls\n    :parameters (?wrapper - ingredient ?filling - ingredient ?table - location)\n    :precondition (and\n        (cooked ?filling)\n        (at ?wrapper ?table)\n        (at ?filling ?table)\n    )\n    :effect (and\n        (in ?filling ?wrapper)\n        (rolled ?wrapper)\n    )\n)\n```\n\n#### 4. Fold Wrapper Over Filling\n```lisp\n",
        "(:action make_huevos_rancheros\n    :parameters (?egg - ingredient ?tortilla - ingredient ?salsa - ingredient ?plate - dish ?loc - location)\n    :precondition (and\n        (fried ?egg)\n        (flipped ?egg)\n        (at ?tortilla ?loc)\n        (at ?salsa ?loc)\n        (clean ?plate)\n        (at-dish ?plate ?loc)\n    )\n    :effect (and\n        (on ?egg ?tortilla)\n        (on ?tortilla ?plate)\n        (with ?tortilla ?salsa)\n        (served ?egg)\n        (not (at ?tortilla ?loc))\n        (not (at ?salsa ?loc))\n        (not (at ?egg ?loc))\n    )\n)\n```\n\n---\n\n### Notes:\n- The descriptions provided were used to create relevant actions for frying an egg and serving it in various ways.\n- The entity states were referenced to define preconditions and effects for each action.\n- Irrelevant or redundant steps were omitted, and task-specific actions were created instead.\n",
        "(:action make-toast\n    :parameters (?b - bread ?t - toaster)\n    :precondition (and (inToaster ?b ?t) (on ?t))\n    :effect (and (toasted ?b) (not (raw ?b)))\n)\n```\n\n---\n\n### Notes:\n1. **Step Adjustment**: The step involving making toast is tangential to the main task of making sunny side down eggs. However, it has been included as a separate optional action.\n2. **Entity State Alignment**: The actions align with the provided entity states, ensuring the preconditions and effects reflect the correct state transitions.\n3. **Irrelevant Details Removed**: Details unrelated to the task (like the \"helmet\" or \"velveeta\" attributes) were ignored, as they do not contribute to the egg-cooking process.\n\nThis set of PDDL actions captures the process of making sunny side down eggs while adhering to the task-specific logic and formatting.",
        "(:action fold_wrapper\n    :parameters (?wrapper - ingredient ?filling - ingredient ?table - location)\n    :precondition (and\n        (rolled ?wrapper)\n        (at ?wrapper ?table)\n        (at ?filling ?table)\n    )\n    :effect (and\n        (wrapped ?filling ?wrapper)\n        (sealed ?wrapper)\n    )\n)\n```\n\n#### 5. Repeat Until All Rolls Are Finished\n```lisp\n",
        "(:action fold_and_roll_wrap\n    :parameters (?wrap - eggroll_wrap)\n    :precondition (and (filling_added ?wrap ?filling) (on_surface ?wrap ?surface) (not (rolled ?wrap)))\n    :effect (and (folded ?wrap) (rolled ?wrap) (not (open ?wrap)))\n)\n```\n\n---\n\n#### Step 4: \"Beat an egg with a fork or whisk in a bowl and use it to seal the egg rolls.\"\n```lisp\n",
        "(:action turn-off-stove\n    :parameters (?s - stove ?p - pan)\n    :precondition (and (on ?s) (whitesTurningWhite ?e))\n    :effect (and (off ?s) (not (on ?s)))\n)\n```\n\n#### Action 7: wait-for-eggs\n```lisp\n"
    ],
    "add": [
        "(:action add_wet_ingredients\n    :parameters (?wet_ingredients - ingredient ?bowl - container ?vegetables - ingredient)\n    :precondition (and\n        (cooked ?vegetables)\n        (at ?wet_ingredients ?bowl)\n        (at ?bowl ?table)\n    )\n    :effect (and\n        (in ?wet_ingredients ?bowl)\n        (in ?vegetables ?bowl)\n        (mixed ?bowl)\n    )\n)\n```\n\n#### 3. Make Spring Rolls\n```lisp\n",
        "(:action add_milk_to_bowl\n    :parameters (?milk - liquid ?bowl - container ?p - player)\n    :precondition (and \n        (inventory ?p ?milk)\n        (in_bowl ?eggs ?bowl)\n        (is_liquid ?milk)\n        (not (is_full ?bowl))\n    )\n    :effect (and \n        (not (inventory ?p ?milk))\n        (in_bowl ?milk ?bowl)\n        (is_mixed ?bowl)\n    )\n)\n```\n\n3. **Beat eggs and milk together**\n```pddl\n",
        "(:action add_oil_to_pan\n    :parameters (?oil - ingredient ?pan - utensil ?stove - appliance)\n    :precondition (and\n        (at ?oil pantry)\n        (at ?pan kitchen_counter)\n        (clean ?pan)\n        (at ?stove kitchen_stove)\n        (off ?stove)\n    )\n    :effect (and\n        (has_oil ?pan)\n        (at ?pan kitchen_stove)\n        (on ?stove)\n    )\n)\n```\n\n---\n\n#### Action 3: `remove_pan_from_heat`\n```lisp\n",
        "(:action add_filling_to_wrap\n    :parameters (?wrap - eggroll_wrap ?filling - filling ?spoon - utensil)\n    :precondition (and (on_surface ?wrap ?surface) (clean ?spoon) (available ?filling))\n    :effect (and (filling_added ?wrap ?filling) (not (available ?filling)))\n)\n```\n\n---\n\n#### Step 3: \"Fold the bottom of the wrap up, fold the left and right sides in, then roll it up.\"\n```lisp\n",
        "(:action add-oil-or-butter\n    :parameters (?p - pan ?o - oil_or_butter)\n    :precondition (and (hot ?p) (not (inPan ?o ?p)))\n    :effect (and (melted ?o) (inPan ?o ?p))\n)\n```\n\n#### Action 3: spread-oil-or-butter\n```lisp\n",
        "(:action seal_pastry_edges\n    :parameters (?egg_wash - ingredient ?pastry - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?pastry ?table)\n      (at ?brush ?table)\n      (clean ?brush)\n    )\n    :effect (and\n      (edges_sealed_with_egg_wash ?pastry)\n    )\n)\n```\n\n---\n\n#### 4. Cover Baked Goods with Egg Wash\n```lisp\n",
        "(:action seal_eggroll\n    :parameters (?eggroll - eggroll ?egg - egg ?bowl - mixing_bowl ?utensil - whisk)\n    :precondition (and (rolled ?eggroll) (in_bowl ?egg ?bowl) (available ?utensil) (clean ?bowl))\n    :effect (and (sealed ?eggroll) (not (available ?egg)) (dirty ?bowl))\n)\n```\n\n---\n\n#### Step 5: \"Heat up 1 qt (946 ml) of peanut oil in a pot or deep fryer.\"\n```lisp\n"
    ],
    "repeat": [
        "(:action repeat_rolls\n    :parameters (?wrapper - ingredient ?filling - ingredient)\n    :precondition (and\n        (wrapped ?filling ?wrapper)\n        (more_wrappers_available)\n    )\n    :effect (and\n        (all_rolls_prepared)\n    )\n)\n```\n\n#### 6. Fry Egg Rolls\n```lisp\n"
    ],
    "serve": [
        "(:action serve_spring_rolls\n    :parameters (?rolls - ingredient ?plate - container ?table - location)\n    :precondition (and\n        (fried ?rolls)\n        (at ?plate ?table)\n    )\n    :effect (and\n        (served ?rolls ?plate)\n    )\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **Cook Vegetables**: This action ensures the vegetables are cooked in a pan on the stove.\n2. **Add Wet Ingredients**: This action mixes the cooked vegetables with the wet ingredients in a bowl.\n3. **Make Spring Rolls**: This action adds the filling into the wrapper and rolls them.\n4. **Fold Wrapper Over Filling**: This action ensures the wrapper is folded and sealed around the filling.\n5. **Repeat Until All Rolls Are Finished**: This action ensures the process is repeated until all wrappers are used.\n6. **Fry Egg Rolls**: This action fries the prepared rolls in a pan on the stove.\n7. **Serve**: This action places the fried rolls onto a plate and serves them.\n\nEach action is designed to reflect the logic and intent of the task while adhering to the PDDL structure.",
        "(:action serve_rolls_with_sauce\n    :parameters (?roll - dish ?sauce - ingredient ?plate - dish)\n    :precondition (and\n        (fried ?roll)\n        (at ?roll kitchen_counter)\n        (at ?sauce fridge)\n        (at ?plate dining_table)\n    )\n    :effect (and\n        (in_dish ?roll ?plate)\n        (served ?roll ?sauce)\n        (not (fried ?roll))\n    )\n)\n```\n\n---\n\n### Explanation:\n1. Each action corresponds to a specific step in the task, ensuring logical flow and adherence to the provided descriptions and entity states.\n2. Preconditions and effects are defined based on the attributes and transitions provided in the entity states.\n3. Irrelevant or incorrect steps are omitted, and the task-specific logic is emphasized.\n\nLet me know if further refinements are needed!",
        "(:action serve_egg_on_toast\n    :parameters (?egg - ingredient ?toast - ingredient ?plate - dish ?loc - location)\n    :precondition (and\n        (fried ?egg)\n        (flipped ?egg)\n        (at ?toast ?loc)\n        (clean ?plate)\n        (at-dish ?plate ?loc)\n    )\n    :effect (and\n        (on ?egg ?toast)\n        (on ?toast ?plate)\n        (served ?egg)\n        (not (at ?toast ?loc))\n        (not (at ?egg ?loc))\n    )\n)\n```\n\n#### Action 6: Serve Egg Over Leftovers\n```lisp\n",
        "(:action serve_egg_over_leftovers\n    :parameters (?egg - ingredient ?leftovers - ingredient ?plate - dish ?loc - location)\n    :precondition (and\n        (fried ?egg)\n        (flipped ?egg)\n        (at ?leftovers ?loc)\n        (clean ?plate)\n        (at-dish ?plate ?loc)\n    )\n    :effect (and\n        (on ?egg ?leftovers)\n        (on ?leftovers ?plate)\n        (served ?egg)\n        (not (at ?leftovers ?loc))\n        (not (at ?egg ?loc))\n    )\n)\n```\n\n#### Action 7: Place Egg on Sandwich or Burger\n```lisp\n"
    ],
    "remove": [
        "(:action brush_egg_wash_on_bread\n    :parameters (?egg_wash - ingredient ?bread - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?bread ?table)\n      (at ?brush ?table)\n      (clean ?brush)\n    )\n    :effect (and\n      (coated_with_egg_wash ?bread)\n    )\n)\n```\n\n---\n\n#### 2. Spread Egg Wash Over Pie Crust\n```lisp\n",
        "(:action remove_from_heat\n    :parameters (?pan - container ?p - player)\n    :precondition (and \n        (is_cooked ?mixture)\n        (on_heat ?pan)\n    )\n    :effect (and \n        (not (on_heat ?pan))\n        (is_cooled ?mixture)\n    )\n)\n```\n\n7. **Roll the cooked egg into a cylinder**\n```pddl\n",
        "(:action remove_pan_from_heat\n    :parameters (?pan - utensil ?stove - appliance)\n    :precondition (and\n        (at ?pan kitchen_stove)\n        (on ?stove)\n        (heated ?stove)\n    )\n    :effect (and\n        (at ?pan kitchen_counter)\n        (not (heated ?stove))\n        (off ?stove)\n    )\n)\n```\n\n---\n\n#### Action 4: `shape_potato_filling`\n```lisp\n",
        "(:action peel_and_boil_potatoes\n    :parameters (?potato - ingredient ?pot - utensil ?stove - appliance)\n    :precondition (and\n        (at ?potato kitchen_counter)\n        (whole ?potato)\n        (clean ?potato)\n        (at ?pot kitchen_counter)\n        (clean ?pot)\n        (at ?stove kitchen_stove)\n        (off ?stove)\n    )\n    :effect (and\n        (peeled ?potato)\n        (cooked ?potato)\n        (not (whole ?potato))\n        (not (raw ?potato))\n        (on ?stove)\n    )\n)\n```\n\n---\n\n#### Action 2: `add_oil_to_pan`\n```lisp\n",
        "(:action drain_and_serve_eggrolls\n    :parameters (?eggroll - eggroll ?towel - towel ?rack - rack)\n    :precondition (and (fried ?eggroll) (brown ?eggroll) (available ?towel))\n    :effect (and (drained ?eggroll) (served ?eggroll) (dirty ?towel))\n)\n```\n\n---\n\n### Notes:\n1. **Entity States**: The actions consider the attributes and transitions of the entities involved, such as the wrap being clean, the oil being heated, and the eggroll being fried and served.\n2. **Relevance**: Each step is directly tied to the task of making egg rolls, ensuring no irrelevant or incorrect steps are included.\n3. **Preconditions and Effects**: Each action has clear preconditions that must be met before execution and effects that describe the resulting changes to the entity states.\n\nThis set of actions ensures a logical progression from preparing the ingredients to serving the egg rolls while adhering to the PDDL format."
    ],
    "secure": [
        "(:action secure_toppings_with_egg_wash\n    :parameters (?egg_wash - ingredient ?topping - object ?pastry - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?topping ?table)\n      (at ?pastry ?table)\n      (at ?brush ?table)\n      (clean ?brush)\n    )\n    :effect (and\n      (topping_secured_with_egg_wash ?topping ?pastry)\n    )\n)\n```\n\n---\n\n### Notes:\n1. **Entity States & Preconditions**: Each action's preconditions ensure that the egg wash, the object being coated (bread, pie crust, pastry, baked goods, or toppings), and the brush are at the same location, and the brush is clean.\n2. **Effects**: The effects describe the outcome of each action, such as coating the object with egg wash or securing toppings.\n3. **Relevance**: Steps irrelevant to the task or descriptions have been modified to align with the task of making an egg wash and its application.\n\nLet me know if additional refinements or steps are needed!"
    ],
    "beat": [
        "(:action beat_eggs_and_milk\n    :parameters (?bowl - container ?p - player)\n    :precondition (and \n        (in_bowl ?eggs ?bowl)\n        (in_bowl ?milk ?bowl)\n        (is_mixed ?bowl)\n        (not (is_beaten ?bowl))\n    )\n    :effect (and \n        (is_beaten ?bowl)\n        (not (is_mixed ?bowl))\n    )\n)\n```\n\n4. **Pour mixture into a frying pan**\n```pddl\n"
    ],
    "roll": [
        "(:action roll_egg\n    :parameters (?mixture - food ?p - player)\n    :precondition (and \n        (is_cooked ?mixture)\n        (is_cooled ?mixture)\n        (not (is_rolled ?mixture))\n    )\n    :effect (and \n        (is_rolled ?mixture)\n        (not (is_cooled ?mixture))\n    )\n)\n```\n\n8. **Cut the rolled egg into strips**\n```pddl\n"
    ],
    "cut": [
        "(:action cut_egg_into_strips\n    :parameters (?mixture - food ?knife - tool ?p - player)\n    :precondition (and \n        (is_rolled ?mixture)\n        (inventory ?p ?knife)\n        (is_sharp ?knife)\n    )\n    :effect (and \n        (is_cut ?mixture)\n        (is_strips ?mixture)\n        (not (is_rolled ?mixture))\n    )\n)\n```\n\n9. **Place egg strips onto a dish**\n```pddl\n"
    ],
    "shape": [
        "(:action shape_potato_filling\n    :parameters (?potato - ingredient ?shape - form)\n    :precondition (and\n        (cooked ?potato)\n        (peeled ?potato)\n        (at ?potato kitchen_counter)\n    )\n    :effect (and\n        (shaped ?potato ?shape)\n        (not (cooked ?potato))\n    )\n)\n```\n\n---\n\n#### Action 5: `trim_bread_slices`\n```lisp\n"
    ],
    "deep": [
        "(:action deep_fry_rolls\n    :parameters (?roll - dish ?oil - ingredient ?pan - utensil ?stove - appliance)\n    :precondition (and\n        (wrapped ?roll ?filling)\n        (has_oil ?pan)\n        (at ?pan kitchen_stove)\n        (at ?roll kitchen_counter)\n        (heated ?stove)\n    )\n    :effect (and\n        (fried ?roll)\n        (dirty ?pan)\n        (not (wrapped ?roll ?filling))\n    )\n)\n```\n\n---\n\n#### Action 8: `serve_rolls_with_sauce`\n```lisp\n"
    ]
}