[
    "Here are the PDDL actions generated for the task \"How to Fry an Egg on the Sidewalk,\" based on the provided steps and descriptions. The actions focus on the relevant entity states and transitions, ensuring task-specific applicability.\n\n---\n\n### PDDL Actions:\n\n```lisp\n(:action wait_for_hot_day ; wait for a very hot day\n    :parameters (?p - player)\n    :precondition (not (is_hot_day))\n    :effect (is_hot_day)\n)\n\n(:action place_in_sunlight ; place tin foil or metal pan in direct sunlight to heat up\n    :parameters (?object - cooking_surface ?p - player ?l1 - location)\n    :precondition (and (inventory ?p ?object) (at ?p ?l1) (is_hot_day) (is_metal ?object))\n    :effect (and (not (inventory ?p ?object)) (in_sunlight ?object) (heating ?object))\n)\n\n(:action crack_egg_onto_surface ; crack an egg onto the metal surface\n    :parameters (?egg - egg ?surface - cooking_surface ?p - player ?l1 - location)\n    :precondition (and (inventory ?p ?egg) (at ?p ?l1) (in_sunlight ?surface) (heating ?surface) (is_metal ?surface))\n    :effect (and (not (inventory ?p ?egg)) (on_surface ?egg ?surface) (cracked ?egg))\n)\n\n(:action crack_egg_onto_sidewalk ; crack an egg onto the sidewalk\n    :parameters (?egg - egg ?p - player ?l1 - location)\n    :precondition (and (inventory ?p ?egg) (at ?p ?l1) (is_hot_day) (is_sidewalk ?l1))\n    :effect (and (not (inventory ?p ?egg)) (on_surface ?egg ?l1) (cracked ?egg))\n)\n\n(:action discard_eggs ; discard the eggs after cooking\n    :parameters (?egg1 - egg ?egg2 - egg ?p - player ?l1 - location)\n    :precondition (and (on_surface ?egg1 ?l1) (on_surface ?egg2 ?l1) (cracked ?egg1) (cracked ?egg2))\n    :effect (and (not (on_surface ?egg1 ?l1)) (not (on_surface ?egg2 ?l1)) (discarded ?egg1) (discarded ?egg2))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **`wait_for_hot_day`:**\n   - This action ensures that the task begins with a hot day as a necessary condition for frying an egg on the sidewalk.\n   - The precondition checks that it is not already a hot day, and the effect sets `is_hot_day` to true.\n\n2. **`place_in_sunlight`:**\n   - This action represents placing a metal cooking surface (e.g., tin foil or a metal pan) in direct sunlight to heat up.\n   - The preconditions ensure the player has the cooking surface, is at the correct location, and it is a hot day. The object must also be metallic.\n   - The effects indicate that the object is no longer in the player\u2019s inventory, is placed in sunlight, and is heating.\n\n3. **`crack_egg_onto_surface`:**\n   - This action represents cracking an egg onto the heated metal surface.\n   - The preconditions ensure the player has the egg, the surface is in sunlight and heating, and the surface is metallic.\n   - The effects indicate that the egg is no longer in the player\u2019s inventory, is on the surface, and is cracked.\n\n4. **`crack_egg_onto_sidewalk`:**\n   - This action represents cracking an egg directly onto the sidewalk.\n   - The preconditions ensure the player has the egg, is at a location that is a sidewalk, and it is a hot day.\n   - The effects indicate that the egg is no longer in the player\u2019s inventory, is on the sidewalk, and is cracked.\n\n5. **`discard_eggs`:**\n   - This action represents discarding the eggs after they are cracked and cooked (or not cooked, depending on the heat).\n   - The preconditions ensure that the eggs are cracked and present on a surface (either the metal surface or the sidewalk).\n   - The effects remove the eggs from the surface and mark them as discarded.\n\n---\n\n### Notes:\n- The step \"dissolve_eggs\" was deemed irrelevant or unclear in the context of frying eggs on the sidewalk, so it was omitted.\n- The actions focus on the relevant states, such as `is_hot_day`, `heating`, `cracked`, `on_surface`, and `discarded`, to accurately capture the task's logic.\n- Preconditions and effects have been carefully designed to ensure logical progression through the task.",
    "Here is the set of PDDL actions for the task **\"How to Make Crispy Vegetable Spring Rolls\"** based on the given steps and descriptions:\n\n---\n\n### PDDL Actions:\n\n```lisp\n;; Action 1: Cook the vegetables\n(:action cook_vegetables\n    :parameters (?vegetables - ingredient ?kitchen - location ?stove - appliance)\n    :precondition (and\n      (at ?vegetables ?kitchen)\n      (available ?stove)\n    )\n    :effect (and\n      (cooked ?vegetables)\n    )\n)\n\n;; Action 2: Add wet ingredients\n(:action add_wet_ingredients\n    :parameters (?wet_ingredient - ingredient ?mixing_bowl - container ?vegetables - ingredient)\n    :precondition (and\n      (cooked ?vegetables)\n      (available ?wet_ingredient)\n      (empty ?mixing_bowl)\n    )\n    :effect (and\n      (in ?wet_ingredient ?mixing_bowl)\n      (in ?vegetables ?mixing_bowl)\n      (not (empty ?mixing_bowl))\n    )\n)\n\n;; Action 3: Make the spring rolls\n(:action make_spring_roll\n    :parameters (?filling - ingredient ?wrapper - object ?rolling_board - surface)\n    :precondition (and\n      (in ?filling ?mixing_bowl)\n      (available ?wrapper)\n      (at ?rolling_board ?kitchen)\n    )\n    :effect (and\n      (wrapped ?filling ?wrapper)\n    )\n)\n\n;; Action 4: Wrap and tuck the filling\n(:action wrap_and_tuck_filling\n    :parameters (?wrapper - object ?filling - ingredient ?rolling_board - surface)\n    :precondition (and\n      (wrapped ?filling ?wrapper)\n      (at ?rolling_board ?kitchen)\n    )\n    :effect (and\n      (tucked ?filling ?wrapper)\n    )\n)\n\n;; Action 5: Repeat rolling process for all rolls\n(:action repeat_rolling\n    :parameters (?wrapper - object ?filling - ingredient ?rolling_board - surface)\n    :precondition (and\n      (tucked ?filling ?wrapper)\n      (at ?rolling_board ?kitchen)\n    )\n    :effect (and\n      (all_rolls_ready)\n    )\n)\n\n;; Action 6: Fry the egg rolls\n(:action fry_egg_rolls\n    :parameters (?egg_rolls - ingredient ?mixing_bowl - container ?stove - appliance)\n    :precondition (and\n      (all_rolls_ready)\n      (available ?stove)\n      (in ?egg_rolls ?mixing_bowl)\n    )\n    :effect (and\n      (fried ?egg_rolls)\n    )\n)\n\n;; Action 7: Serve the spring rolls\n(:action serve_spring_rolls\n    :parameters (?egg_rolls - ingredient ?plate - container ?dining_table - location)\n    :precondition (and\n      (fried ?egg_rolls)\n      (empty ?plate)\n      (at ?dining_table ?kitchen)\n    )\n    :effect (and\n      (in ?egg_rolls ?plate)\n      (served ?egg_rolls)\n    )\n)\n```\n\n---\n\n### Explanation of Actions:\n1. **`cook_vegetables`**: The vegetables are cooked in the kitchen on the stove. This changes the state of the vegetables to `cooked`.\n2. **`add_wet_ingredients`**: The wet ingredients are added to the mixing bowl along with the cooked vegetables. This changes the state of the mixing bowl to contain the wet ingredients and vegetables.\n3. **`make_spring_roll`**: The filling (vegetables and wet ingredients) is wrapped in a wrapper on the rolling board. This changes the state of the filling to `wrapped`.\n4. **`wrap_and_tuck_filling`**: The wrapper is tucked under the filling to secure it. This changes the state of the wrapped filling to `tucked`.\n5. **`repeat_rolling`**: The rolling process is repeated until all rolls are finished. This changes the state to indicate `all_rolls_ready`.\n6. **`fry_egg_rolls`**: The rolls are fried on the stove, changing their state to `fried`.\n7. **`serve_spring_rolls`**: The fried rolls are placed on a plate and served on the dining table. This changes the state of the rolls to `served`.\n\n---\n\n### Adjustments Made:\n- The original steps like \"loot_wrapped\" and \"repeat_roll npc rolling_board\" were adjusted to be relevant to the task and logically consistent.\n- Specific entity states such as `cooked`, `wrapped`, `tucked`, `fried`, and `served` were introduced to capture the transitions accurately.\n- The sequence of actions was structured to align with the logical process of making spring rolls.\n\n",
    "Here is the PDDL representation of the task \"How to Make an Egg Wash,\" with the actions carefully adjusted to match the task's intent and logic. Irrelevant or incorrect steps have been modified to align with the task description.\n\n---\n\n### PDDL Actions for \"How to Make an Egg Wash\"\n\n```lisp\n;; Action 1: Brush the egg wash over the bread\n(:action brush_egg_wash_on_bread\n    :parameters (?egg_wash - ingredient ?bread - food_item ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?bread ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (brushed ?bread ?egg_wash)\n    )\n)\n\n;; Action 2: Spread egg wash over the bottom of an unbaked pie crust\n(:action spread_egg_wash_on_pie_crust\n    :parameters (?egg_wash - ingredient ?pie_crust - food_item ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?pie_crust ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (spread ?pie_crust ?egg_wash)\n    )\n)\n\n;; Action 3: Seal the edges of pastry with egg wash\n(:action seal_edges_with_egg_wash\n    :parameters (?egg_wash - ingredient ?pastry - food_item ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?pastry ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (edges_sealed ?pastry ?egg_wash)\n    )\n)\n\n;; Action 4: Cover the top of the baked goods\n(:action cover_baked_goods_with_egg_wash\n    :parameters (?egg_wash - ingredient ?baked_goods - food_item ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?baked_goods ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (covered ?baked_goods ?egg_wash)\n    )\n)\n\n;; Action 5: Use the egg wash to secure seeds, sugar, or pastry\n(:action secure_with_egg_wash\n    :parameters (?egg_wash - ingredient ?item - object ?brush - tool ?table - location)\n    :precondition (and\n      (at ?egg_wash ?table)\n      (at ?item ?table)\n      (at ?brush ?table)\n    )\n    :effect (and\n      (secured ?item ?egg_wash)\n    )\n)\n```\n\n---\n\n### Explanation of Adjustments:\n1. **Irrelevant or Incorrect Steps**: Some steps in the provided task (e.g., \"sliplargerbeads velveeta,\" \"secure_seeds npc\") were either irrelevant or nonsensical in the context of making an egg wash. These were adjusted to reflect meaningful steps that align with the description of the task.\n   - For example, \"secure_seeds npc\" was modified to \"use the egg wash to secure seeds, sugar, or pastry.\"\n   - Similarly, \"sliplargerbeads velveeta\" was omitted as it does not relate to the task.\n\n2. **State Changes**: Each action focuses on the relevant state changes, such as:\n   - The bread being brushed with egg wash (`brushed` state).\n   - The pie crust having egg wash spread over it (`spread` state).\n   - The pastry edges being sealed (`edges_sealed` state).\n   - The baked goods being covered (`covered` state).\n   - Items being secured with egg wash (`secured` state).\n\n3. **Parameters**: Parameters include the necessary objects (e.g., `egg_wash`, `bread`, `pastry`, etc.) and tools (e.g., `brush`) required to perform each action.\n\n4. **Preconditions and Effects**: Preconditions ensure that all necessary items are present at the location before the action can be performed. Effects capture the resulting state changes after the action is completed.\n\nThis representation accurately captures the steps and logic of making an egg wash and applying it to various food items.",
    "Here are the PDDL actions generated for the task \"How to Make Egg Strips,\" based on the described steps and requirements:\n\n---\n\n### PDDL Actions:\n\n```lisp\n(:action place_ingredients ; place eggs into a mixing bowl\n    :parameters (?eggs - eggs ?bowl - mixing_bowl ?npc - player)\n    :precondition (and (at ?npc ?bowl) (inventory ?npc ?eggs) (empty ?bowl))\n    :effect (and (in_bowl ?bowl ?eggs) (not (inventory ?npc ?eggs)) (not (empty ?bowl)))\n)\n\n(:action add_ingredients_into_glass ; add milk into the mixing bowl\n    :parameters (?milk - milk ?bowl - mixing_bowl ?npc - player)\n    :precondition (and (at ?npc ?bowl) (inventory ?npc ?milk) (in_bowl ?bowl eggs))\n    :effect (and (in_bowl ?bowl ?milk) (not (inventory ?npc ?milk)))\n)\n\n(:action light_beat_with_oven ; lightly beat the mixture\n    :parameters (?npc - player ?bowl - mixing_bowl)\n    :precondition (and (at ?npc ?bowl) (in_bowl ?bowl eggs) (in_bowl ?bowl milk) (not (beaten ?bowl)))\n    :effect (and (beaten ?bowl) (mixture_ready ?bowl))\n)\n\n(:action pour_into_frying_pan ; pour mixture into frying pan with oil\n    :parameters (?mixture - mixing_bowl ?oil - oil ?pan - frying_pan ?npc - player)\n    :precondition (and (at ?npc ?pan) (mixture_ready ?mixture) (inventory ?npc ?oil) (not (in_pan ?pan)))\n    :effect (and (in_pan ?pan ?mixture) (in_pan ?pan ?oil) (not (mixture_ready ?mixture)) (not (inventory ?npc ?oil)))\n)\n\n(:action turn_off_oven ; turn off the oven after cooking\n    :parameters (?npc - player ?oven - oven)\n    :precondition (and (at ?npc ?oven) (oven_on ?oven))\n    :effect (and (not (oven_on ?oven)) (oven_off ?oven))\n)\n\n(:action roll_oven ; roll the cooked egg into a cylinder\n    :parameters (?npc - player ?egg - egg ?pan - frying_pan)\n    :precondition (and (at ?npc ?pan) (in_pan ?pan ?egg) (cooked ?egg) (not (rolled ?egg)))\n    :effect (and (rolled ?egg) (not (cooked ?egg)))\n)\n\n(:action cut_cylinder ; cut the rolled egg into strips\n    :parameters (?npc - player ?egg - egg)\n    :precondition (and (at ?npc ?egg) (rolled ?egg) (not (cut ?egg)))\n    :effect (and (cut ?egg) (egg_strips ?egg))\n)\n\n(:action put_ingredients_in_dish ; place the egg strips onto a dish\n    :parameters (?egg_strips - egg ?dish - dish ?npc - player)\n    :precondition (and (at ?npc ?dish) (egg_strips ?egg_strips) (not (on_dish ?egg_strips)))\n    :effect (and (on_dish ?egg_strips ?dish) (served ?dish))\n)\n```\n\n---\n\n### Explanation of Actions:\n\n1. **`place_ingredients`**: Represents placing eggs into a mixing bowl. The preconditions ensure the player is at the bowl, has eggs in their inventory, and the bowl is empty. The effects reflect that the eggs are now in the bowl, and the bowl is no longer empty.\n\n2. **`add_ingredients_into_glass`**: Represents adding milk into the bowl containing eggs. The preconditions check that the milk is in the player's inventory and the eggs are already in the bowl. The effects show that the milk is now in the bowl and removed from the inventory.\n\n3. **`light_beat_with_oven`**: Represents lightly beating the eggs and milk mixture. The preconditions ensure the bowl contains both eggs and milk and has not been beaten yet. The effects mark the bowl as beaten and the mixture as ready for cooking.\n\n4. **`pour_into_frying_pan`**: Represents pouring the mixture and oil into a frying pan. The preconditions check that the mixture is ready, the player has oil, and the pan is empty. The effects reflect that the mixture and oil are now in the pan, and the mixture is no longer in a ready state.\n\n5. **`turn_off_oven`**: Represents turning off the oven after cooking. The preconditions ensure the oven is on, and the effects turn it off.\n\n6. **`roll_oven`**: Represents rolling the cooked egg into a cylinder. The preconditions check that the egg is in the pan, is cooked, and has not yet been rolled. The effects mark the egg as rolled and no longer in a cooked state.\n\n7. **`cut_cylinder`**: Represents cutting the rolled egg into strips. The preconditions ensure the egg is rolled and not yet cut. The effects mark the egg as cut into strips.\n\n8. **`put_ingredients_in_dish`**: Represents placing the egg strips onto a dish. The preconditions ensure the egg strips are ready and not yet on the dish. The effects mark the egg strips as on the dish and the dish as served.\n\n---\n\n### Adjustments:\n\n- The step \"light_beat_with_oven\" was interpreted as beating the mixture manually rather than involving the oven, as it aligns better with the task description.\n- The step \"roll_oven\" was adjusted to mean rolling the cooked egg into a cylinder, as the original phrasing suggested an unclear action.\n- Preconditions and effects were tailored to reflect the state transitions of the entities (e.g., eggs, milk, mixture, pan, and dish) at each step.\n\n",
    "Here are the PDDL actions for the task \"How to Make Indian Potato Bread Rolls\" based on the provided steps and descriptions:\n\n```lisp\n;; Action 1: Peel and Boil Potatoes\n(:action peel_and_boil_potatoes\n    :parameters (?potato - ingredient ?stove - appliance)\n    :precondition (and\n      (at ?potato kitchen_counter)\n      (at ?stove kitchen_stove)\n      (heated ?stove)\n    )\n    :effect (and\n      (peeled ?potato)\n      (boiled ?potato)\n    )\n)\n\n;; Action 2: Pour Oil into Frying Pan\n(:action pour_oil_into_pan\n    :parameters (?oil - ingredient ?pan - utensil ?stove - appliance)\n    :precondition (and\n      (at ?oil kitchen_counter)\n      (at ?pan kitchen_stove)\n      (at ?stove kitchen_stove)\n      (clean ?pan)\n    )\n    :effect (and\n      (has_oil ?pan)\n      (not (clean ?pan))\n    )\n)\n\n;; Action 3: Remove Pan from Heat\n(:action remove_pan_from_heat\n    :parameters (?pan - utensil ?stove - appliance)\n    :precondition (and\n      (at ?pan kitchen_stove)\n      (heated ?stove)\n      (has_oil ?pan)\n    )\n    :effect (and\n      (not (at ?pan kitchen_stove))\n      (off_heat ?pan)\n    )\n)\n\n;; Action 4: Shape Mixture into Ball or Cylinder\n(:action shape_mixture\n    :parameters (?mixture - ingredient)\n    :precondition (and\n      (prepared ?mixture)\n    )\n    :effect (and\n      (shaped ?mixture ball_or_cylinder)\n    )\n)\n\n;; Action 5: Cut Bread Slices\n(:action cut_bread_slices\n    :parameters (?bread - ingredient)\n    :precondition (and\n      (at ?bread kitchen_counter)\n      (whole ?bread)\n    )\n    :effect (and\n      (cut ?bread)\n      (not (whole ?bread))\n    )\n)\n\n;; Action 6: Wrap Bread Around Filling\n(:action wrap_bread\n    :parameters (?bread - ingredient ?filling - ingredient)\n    :precondition (and\n      (cut ?bread)\n      (shaped ?filling ball_or_cylinder)\n    )\n    :effect (and\n      (wrapped ?filling ?bread)\n    )\n)\n\n;; Action 7: Deep Fry Rolls\n(:action deep_fry_rolls\n    :parameters (?roll - ingredient ?pan - utensil ?oil - ingredient)\n    :precondition (and\n      (wrapped ?roll)\n      (at ?pan kitchen_stove)\n      (has_oil ?pan)\n      (heated ?pan)\n    )\n    :effect (and\n      (fried ?roll)\n      (dirty ?pan)\n    )\n)\n\n;; Action 8: Serve Rolls with Sauce\n(:action serve_rolls\n    :parameters (?roll - ingredient ?sauce - ingredient ?dish - dish)\n    :precondition (and\n      (fried ?roll)\n      (at ?dish dining_table)\n      (at ?sauce kitchen_counter)\n    )\n    :effect (and\n      (in_dish ?roll ?dish)\n      (served_with ?roll ?sauce)\n    )\n)\n```\n\n### Explanation of Actions:\n1. **peel_and_boil_potatoes**: Combines peeling and boiling the potatoes since they are sequential and closely related.\n2. **pour_oil_into_pan**: Represents pouring oil into the pan, ensuring the pan is clean and on the stove.\n3. **remove_pan_from_heat**: Removes the pan from the heat after oil is poured, as described in the task.\n4. **shape_mixture**: Shapes the prepared mixture into ball or cylinder shapes.\n5. **cut_bread_slices**: Cuts the edges off the bread slices.\n6. **wrap_bread**: Wraps the dampened bread around the shaped filling.\n7. **deep_fry_rolls**: Deep fries the wrapped rolls in oil, ensuring the pan is heated and has oil.\n8. **serve_rolls**: Serves the fried rolls with sauce on a dish.\n\nEach action captures the relevant state changes and ensures preconditions and effects align with the task description. Irrelevant or unclear steps were adjusted to maintain consistency with the task logic.",
    "Below are the PDDL actions generated for the task \"How to Make Egg Rolls,\" based on the provided steps and descriptions. Each action captures the intent, logic, and state transitions of the task.\n\n---\n\n### PDDL Actions for \"How to Make Egg Rolls\"\n\n#### 1. Place an egg roll wrap on a flat surface\n```lisp\n(:action place_in_container\n    :parameters (?wrap - eggroll_wrap ?surface - flat_surface)\n    :precondition (and (not (placed ?wrap ?surface)))\n    :effect (placed ?wrap ?surface)\n)\n```\n\n#### 2. Put ingredients in the mixing bowl\n```lisp\n(:action put_ingredients_in_container\n    :parameters (?ingredients - filling ?bowl - mixing_bowl ?table - surface)\n    :precondition (and (at ?bowl ?table) (not (ingredients_in_bowl ?bowl)))\n    :effect (ingredients_in_bowl ?bowl)\n)\n```\n\n#### 3. Fold and roll the egg roll wrap\n```lisp\n(:action fold_and_roll\n    :parameters (?wrap - eggroll_wrap ?filling - filling ?seal - egg)\n    :precondition (and (placed ?wrap ?surface) (ingredients_in_bowl ?bowl) (beaten ?seal) (not (rolled ?wrap)))\n    :effect (rolled ?wrap)\n)\n```\n\n#### 4. Heat the peanut oil\n```lisp\n(:action heat_peanut_oil\n    :parameters (?oil - peanut_oil ?npc - cook ?pot - container\n    :precondition",
    "Certainly! Based on the task \"How to Fry an Egg\" and the description, I will refine the steps to ensure they are relevant and generate corresponding PDDL actions. Irrelevant or incorrect steps will be adjusted to align with the task description. The steps will focus on frying an egg, flipping it, and preparing it for various uses.\n\n---\n\n### Adjusted Steps:\n1. Heat oil in a pan and crack an egg into the pan.\n2. Fry the egg until the edges are golden brown.\n3. Flip the egg halfway through to make it over-easy.\n4. Place the fried egg on a plate for serving.\n5. Optionally, prepare Huevos Rancheros using the fried egg.\n\n---\n\n### Generated PDDL Actions:\n\n#### 1. Heat Oil and Crack Egg\n```lisp\n(:action heat_oil_and_crack_egg\n    :parameters (?pan - tool ?oil - ingredient ?egg - ingredient ?stove - appliance ?loc - location)\n    :precondition (and\n      (at-tool ?pan ?loc)\n      (at-appliance ?stove ?loc)\n      (at ?oil ?loc)\n      (at ?egg ?loc)\n      (clean ?pan)\n      (has-power ?stove)\n    )\n    :effect (and\n      (heated ?pan)\n      (in-pan ?oil ?pan)\n      (in-pan ?egg ?pan)\n      (not (at ?oil ?loc))\n      (not (at ?egg ?loc))\n      (cooking ?egg)\n    )\n)\n```\n\n---\n\n#### 2. Fry Egg\n```lisp\n(:action fry_egg\n    :parameters (?egg - ingredient ?pan - tool)\n    :precondition (and\n      (in-pan ?egg ?pan)\n      (heated ?pan)\n      (cooking ?egg)\n    )\n    :effect (and\n      (fried ?egg)\n      (golden_edges ?egg)\n      (not (cooking ?egg))\n    )\n)\n```\n\n---\n\n#### 3. Flip Egg\n```lisp\n(:action flip_egg\n    :parameters (?egg - ingredient ?pan - tool)\n    :precondition (and\n      (in-pan ?egg ?pan)\n      (fried ?egg)\n    )\n    :effect (and\n      (over_easy ?egg)\n      (not (fried ?egg))\n    )\n)\n```\n\n---\n\n#### 4. Place Fried Egg on Plate\n```lisp\n(:action place_fried_egg_on_plate\n    :parameters (?egg - ingredient ?plate - dish ?pan - tool ?loc - location)\n    :precondition (and\n      (over_easy ?egg)\n      (in-pan ?egg ?pan)\n      (at-dish ?plate ?loc)\n      (at-tool ?pan ?loc)\n    )\n    :effect (and\n      (in-dish ?egg ?plate)\n      (not (in-pan ?egg ?pan))\n      (served ?egg)\n    )\n)\n```\n\n---\n\n#### 5. Make Huevos Rancheros\n```lisp\n(:action make_huevos_rancheros\n    :parameters (?egg - ingredient ?salsa - ingredient ?tortilla - ingredient ?plate - dish ?loc - location)\n    :precondition (and\n      (served ?egg)\n      (at ?salsa ?loc)\n      (at ?tortilla ?loc)\n      (at-dish ?plate ?loc)\n    )\n    :effect (and\n      (on ?egg ?tortilla)\n      (topped ?egg ?salsa)\n      (in-dish ?egg ?plate)\n      (in-dish ?tortilla ?plate)\n      (in-dish ?salsa ?plate)\n      (huevos_rancheros_prepared ?plate)\n    )\n)\n```\n\n---\n\n### Explanation of Adjustments:\n1. **Irrelevant Steps Removed**: Steps like \"fry_eraser npc\" and \"cook npc kitchen\" were nonsensical and replaced with relevant actions such as heating oil, frying the egg, and flipping it.\n2. **Relevant Steps Added**: Actions like \"place fried egg on plate\" and \"make Huevos Rancheros\" were included based on the task description.\n3. **Entity State Transitions**: Each action defines state changes like `heated`, `cooking`, `fried`, `over_easy`, and `served` to track the egg's transformation through the process. Locations and tools are also updated accordingly.\n\nThis ensures the task of frying an egg and its potential uses is accurately represented in PDDL.",
    "Here are the PDDL actions for the task \"How to Make Sunny Side Down Eggs,\" based on the provided steps and descriptions. Irrelevant or unclear steps have been modified to align with the task and ensure logical consistency.\n\n---\n\n### PDDL Actions:\n\n```lisp\n(:action add-oil-or-butter\n    :parameters (?p - pan ?o - oil_or_butter)\n    :precondition (and (onStove ?p) (heated ?p) (not (coated ?p)))\n    :effect (and (coated ?p) (melted ?o) (not (solid ?o)))\n)\n\n(:action crack-eggs\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (coated ?p) (not (broken ?e)))\n    :effect (and (inPan ?e ?p) (broken ?e) (not (intact ?e)))\n)\n\n(:action wait-for-whites\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (inPan ?e ?p) (broken ?e) (not (cookedWhites ?e)))\n    :effect (and (cookedWhites ?e))\n)\n\n(:action turn-off-stove\n    :parameters (?p - pan ?s - stove)\n    :precondition (and (onStove ?p) (heated ?p) (on ?s))\n    :effect (and (off ?s) (not (on ?s)))\n)\n\n(:action flip-egg\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (inPan ?e ?p) (cookedWhites ?e) (not (flipped ?e)))\n    :effect (and (flipped ?e))\n)\n\n(:action flip-egg-again\n    :parameters (?e - egg ?p - pan)\n    :precondition (and (inPan ?e ?p) (flipped ?e))\n    :effect (and (flippedTwice ?e) (not (flipped ?e)))\n)\n\n(:action sweep-yolk\n    :parameters (?y - yolk ?t - toast)\n    :precondition (and (runny ?y) (available ?t))\n    :effect (and (swept ?y ?t) (not (runny ?y)))\n)\n```\n\n---\n\n### Explanations of Actions:\n\n1. **add-oil-or-butter**:\n   - Adds oil or butter to the pan and ensures the pan is coated to prevent sticking. The state of the oil or butter changes from solid to melted.\n\n2. **crack-eggs**:\n   - Breaks the eggs and places them into the pan. The egg's state changes from \"intact\" to \"broken,\" and it is now \"inPan.\"\n\n3. **wait-for-whites**:\n   - Waits for the egg whites to cook. The state of the egg changes to indicate that the whites are now \"cookedWhites.\"\n\n4. **turn-off-stove**:\n   - Turns off the stove after the whites are cooked. The stove's state changes from \"on\" to \"off.\"\n\n5. **flip-egg**:\n   - Flips the egg gently in the pan. The egg's state changes to \"flipped.\"\n\n6. **flip-egg-again**:\n   - Flips the egg a second time. The egg's state changes to \"flippedTwice.\"\n\n7. **sweep-yolk**:\n   - Uses toast to sweep up the yolk. The yolk's state changes from \"runny\" to \"swept,\" and the toast is used for this purpose.\n\n---\n\n### Notes on Adjustments:\n- Irrelevant steps like \"break_eraser\" and \"flip-over-twice npc\" were interpreted and adjusted to align with the task's logical flow.\n- The action \"sweep_yolk\" was clarified to involve toast (as per the description about making toast to sweep up the yolk).\n- The state transitions focus on the egg's cooking process, the stove's on/off state, and the interaction with the yolk.\n\nThis ensures the PDDL actions accurately capture the task's intent and entity state transitions."
]