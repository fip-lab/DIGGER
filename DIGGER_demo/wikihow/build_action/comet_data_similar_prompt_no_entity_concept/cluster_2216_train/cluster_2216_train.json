[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Defeat a Thug on Dead Island.\n- acquire-knowledge you\n- equip-weapon you grenades\n- throw-weapon you grenades thug1\n\nDescriptions:\n- There is no chance in hell you will kill a Thug using just your bear hands and feet.\n- Incendiary Weapons - Grenades or Molotov Cocktails *WARNING* You may need to use a couple of these, so it is recommended that you only use one when a Thugs' health is below 50%.\n- Make sure your guns have enough ammo, and your knives are up to scratch.\n- Attack!\n\nPDDL Actions:\n(:action acquire-knowledge\n    :parameters (?p - person)\n    :precondition (not (knowledge_aware ?p))\n    :effect (knowledge_aware ?p)\n  )\n\n  ;; 确保弹药充足的动作\n(:action ensure-ammo\n    :parameters (?a - ammo)\n    :precondition (not (ammo_assured ?a))\n    :effect (ammo_assured ?a)\n  )\n\n  ;; 装备武器的动作\n(:action equip-weapon\n    :parameters (?p - person ?w - weapon)\n    :precondition (knowledge_aware ?p)\n    :effect (weapon_location ?w on_person)\n  )\n\n  ;; 使用武器攻击僵尸的动作（需要弹药，如枪械）\n(:action attack-with-weapon\n    :parameters (?p - person ?w - weapon ?a - ammo ?z - zombie)\n    :precondition (and\n                    (knowledge_aware ?p)\n                    (weapon_location ?w on_person)\n                    (ammo_assured ?a)\n                    (not (zombie_attacked ?z))\n                   )\n    :effect (and\n              (zombie_attacked ?z)\n              (not (ammo_assured ?a)) ; 使用弹药后弹药减少\n            )\n  )\n\n  ;; 使用投掷武器攻击僵尸的动作（如手榴弹、燃烧瓶）\n(:action throw-weapon\n    :parameters (?p - person ?w - weapon ?z - zombie)\n    :precondition (and\n                    (knowledge_aware ?p)\n                    (weapon_location ?w on_person)\n                    (not (zombie_attacked ?z))\n                   )\n    :effect (and\n              (zombie_attacked ?z)\n              (weapon_thrown ?w)\n              (weapon_location ?w thrown_at_enemy) ; 武器被投掷到敌人处\n            )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Choose a Combo Alarm System for a Truck\n\nSteps:\n- put_in_cage npc basement\n- listen_to_alarm_system my_equipment\n- set_budget_for_equipment alarm_system\n- check_equipment alarm_system npc\n- listen_to_alarm_system npc\n- go_online npc covering_tracks track\n- install_combined_alarm_system npc home\n- choose_combuster alarm_system my_equipment\n- purchase_equipment alarm_system npc\n\nDescriptions:\n- Call your truck dealer to ask his advice.\n- Evaluate your own anti-theft needs for your truck combo alarm system.\n- Establish your budget for your truck combo alarm system.\n- Research truck combo alarm systems online or in truck magazines.\n- Make a short list of the alarm systems that interest you.\n- Go online.\n- Decide whether you want to install a DIY combo alarm yourself or have a professional do it for you.\n- Choose a combo alarm system for a truck that fits all your needs and matches your budget.\n- Purchase your truck combo alarm system.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is prepare-for-attack.\n- get phone bedroom npc\n- get ipad bedroom npc\n- go down npc bedroom kitchen\n- get aluminum_foil kitchen npc\n- get laptop kitchen npc\n- go down npc kitchen basement\n- get trashcan basement npc\n- get trashlid basement npc\n- get nintendo_switch basement npc\n- create_cage npc basement\n- put_in_cage npc basement phone\n- put_in_cage npc basement nintendo_switch\n- put_in_cage npc basement laptop\n- put_in_cage npc basement ipad\n- close_cage npc basement\n\nDescriptions:\n- You can drive it if you absolutely have to, but it’s safer to stay off of the roads if you can.\n\nPDDL Actions:\n(:action put_in_cage ; put item in the farraday cage\n      :parameters (?p - player ?loc - location ?it - item)\n      :precondition (and (at farraday_cage ?loc) (inventory ?p ?it))\n      :effect (and (in_cage ?it) (not (inventory ?p ?it))  (not (cage_closed farraday_cage)))\n   )\n\n)\n(:action close_cage ; Close the farraday cage\n      :parameters (?p - player ?loc - location)\n      :precondition (and (at farraday_cage ?loc) (inventory ?p trashlid))\n      :effect (cage_closed farraday_cage)\n   )\n(:action create_cage ; create a farraday cage\n      :parameters (?p - player ?loc - location)\n      :precondition (and (inventory ?p trashcan) (inventory ?p aluminum_foil))\n      :effect (and (at farraday_cage ?loc) (not (inventory ?p trashcan)) (not (inventory ?p aluminum_foil)))\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Find the Best Gas Prices\n\nSteps:\n- take_mental_note npc\n- talk_to_faucet npc\n- fill_tinder npc\n- listen_to_broadcast npc\n- get_internet npc gas_station\n- fill_tank npc basement\n\nDescriptions:\n- Take a mental note daily of the gas prices as you drive throughout your local area.\n- Call and talk to your friends who drive past other fuel stations in the area.\n- Fill up in the morning or late at night since gas will condense in the tank with the cooler temperatures.\n- Pay attention to local news and radio reports to learn about any gas or fuel promotions in your area.\n- Use the Internet to locate the best gas prices in your area.\n- Fill up the tank before you hit empty.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is pick_car_lock.\n- go up npc living_room hallway\n- go east npc hallway bathroom\n- go east npc bathroom bedroom\n- get coathanger npc bedroom\n- go west npc bedroom bathroom\n- go west npc bathroom hallway\n- go down npc hallway living_room\n- go east npc living_room office\n- go east npc office kitchen\n- go down npc kitchen garage\n- go out npc garage car\n- straighten_coathanger npc\n- insert_hanger npc car\n- hook_latch npc car\n- pull_coathanger npc car\n\nDescriptions:\n- Unravel and straighten the coat hanger. You can leave the hooked top section alone, but unwind it from itself at the “neck” and straighten the rest of the hanger out, giving you a long metal tool with a hooked tip.\n- Lift the weather stripping from the bottom of the driver's-side window. Push the end of the hanger in through the soft rubber weather stripping and the bottom of the window. The hanger is now inside the wall of the door.\n- Hook and pull the latch. Hook the hanger around the latch and pull it towards the rear of the car. This should unlock any manually locked car door.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action pull_coathanger ;  unlock the car\n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger) (latch_hooked ?loc)) \n      :effect (not (locked_car ?loc))\n   )\n\n)\n(:action hook_latch ;    hook onto car latch  \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (latch_hooked ?loc))\n   )\n(:action straighten_coathanger ; straighten coathanger\n      :parameters (?p - player) \n      :precondition (and (inventory ?p coathanger)) \n      :effect (and (not (inventory ?p coathanger)) (inventory ?p straightened_coathanger)) \n   )\n(:action insert_hanger ;    insert hanger \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (coathanger_inserted ?loc))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Buy a Bluetooth Car Kit\n\nSteps:\n- get_info npc covering_tracks track\n- pick_model npc car\n- choose_car_kit my_equipment\n- talk_to_family npc\n- install_in_car npc car\n\nDescriptions:\n- Research the different options available through Internet sites.\n- Visit local stores that carry the model you are considering.\n- Choose the type of Bluetooth car kit that best suits your needs.\n- Talk to friends or relatives for recommendations.\n- Install your Bluetooth car kit per manufacturer's instructions.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is prepare-for-attack.\n- get phone bedroom npc\n- get ipad bedroom npc\n- go down npc bedroom kitchen\n- get aluminum_foil kitchen npc\n- get laptop kitchen npc\n- go down npc kitchen basement\n- get trashcan basement npc\n- get trashlid basement npc\n- get nintendo_switch basement npc\n- create_cage npc basement\n- put_in_cage npc basement phone\n- put_in_cage npc basement nintendo_switch\n- put_in_cage npc basement laptop\n- put_in_cage npc basement ipad\n- close_cage npc basement\n\nDescriptions:\n- You can drive it if you absolutely have to, but it’s safer to stay off of the roads if you can.\n\nPDDL Actions:\n(:action put_in_cage ; put item in the farraday cage\n      :parameters (?p - player ?loc - location ?it - item)\n      :precondition (and (at farraday_cage ?loc) (inventory ?p ?it))\n      :effect (and (in_cage ?it) (not (inventory ?p ?it))  (not (cage_closed farraday_cage)))\n   )\n\n)\n(:action close_cage ; Close the farraday cage\n      :parameters (?p - player ?loc - location)\n      :precondition (and (at farraday_cage ?loc) (inventory ?p trashlid))\n      :effect (cage_closed farraday_cage)\n   )\n(:action create_cage ; create a farraday cage\n      :parameters (?p - player ?loc - location)\n      :precondition (and (inventory ?p trashcan) (inventory ?p aluminum_foil))\n      :effect (and (at farraday_cage ?loc) (not (inventory ?p trashcan)) (not (inventory ?p aluminum_foil)))\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Select a Wireless Driveway Alarm\n\nSteps:\n- determine_minimum_distance you will need\n- choose_objectinreceptacle agent1\n- determine_alarm_system npc basement\n- seek_in_interference npc covering_tracks track\n- choose_sensor_and_receptacle agent1 camera1 lens1\n- make_record npc home\n\nDescriptions:\n- Determine the minimum transmission distance you will need.\n- Decide why you want it.\n- Determine if the alarm will be part your home automation system or a standalone alert.\n- Seek out possible interference.\n- Figure out how many sensors and receivers you need.\n- Ask yourself the following questions: Can you make a different recording for every transmitter if you get a multiple wireless driveway alarm system?.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is pick_car_lock.\n- go up npc living_room hallway\n- go east npc hallway bathroom\n- go east npc bathroom bedroom\n- get coathanger npc bedroom\n- go west npc bedroom bathroom\n- go west npc bathroom hallway\n- go down npc hallway living_room\n- go east npc living_room office\n- go east npc office kitchen\n- go down npc kitchen garage\n- go out npc garage car\n- straighten_coathanger npc\n- insert_hanger npc car\n- hook_latch npc car\n- pull_coathanger npc car\n\nDescriptions:\n- Unravel and straighten the coat hanger. You can leave the hooked top section alone, but unwind it from itself at the “neck” and straighten the rest of the hanger out, giving you a long metal tool with a hooked tip.\n- Lift the weather stripping from the bottom of the driver's-side window. Push the end of the hanger in through the soft rubber weather stripping and the bottom of the window. The hanger is now inside the wall of the door.\n- Hook and pull the latch. Hook the hanger around the latch and pull it towards the rear of the car. This should unlock any manually locked car door.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action pull_coathanger ;  unlock the car\n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger) (latch_hooked ?loc)) \n      :effect (not (locked_car ?loc))\n   )\n\n)\n(:action hook_latch ;    hook onto car latch  \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (latch_hooked ?loc))\n   )\n(:action straighten_coathanger ; straighten coathanger\n      :parameters (?p - player) \n      :precondition (and (inventory ?p coathanger)) \n      :effect (and (not (inventory ?p coathanger)) (inventory ?p straightened_coathanger)) \n   )\n(:action insert_hanger ;    insert hanger \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (coathanger_inserted ?loc))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Buy a Directional Compass for Your Car\n\nSteps:\n- choose_compensating alice\n- choose_compasses car_location\n- determine_light_diffuse light\n- check_batteries npc\n- confirm_commissioner_knowledge user1 compass1 calibrating_feature\n- choose_type_of_display npc\n- pick_compensate npc\n- find_car_compad compass car_location\n\nDescriptions:\n- Decide between a bubble compass or a digital compass.\n- Learn about the features of car compasses before choosing a compass.\n- Determine your compass lighting needs.\n- Check the battery needs of the compass.\n- Confirm that the compass has a calibration feature.\n- Choose the type of digital display to be used.\n- Pick a compass that has a readable display location.\n- Find the car compass that meets your needs.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is collect-water.\n- go up npc basement kitchen\n- get bottles kitchen npc\n- go up npc kitchen bedroom\n- go in npc bedroom bathroom\n- drop bottles bathroom npc\n- fill bottles bathroom npc\n- put_in_stopper bathtub bathroom npc\n- get purification_tablets bathroom npc\n- purify bottles bathroom npc\n- fill bathtub bathroom npc\n\nDescriptions:\n- Shelter in place and wait for the initial chaos to subside. If all of the electronics suddenly stop working, the immediate loss of electricity will cause a lot of sudden confusion and chaos. If you aren’t home, wait 30-45 minutes for all of the abrupt danger to pass. Then, go home if you’re within a few miles or kilometers. If you’re already home, stay there and do not go outside.\n- Eat anything in your fridge first to minimize food shortages. For the first 1-2 days, eat whatever is in your fridge and hasn’t gone bad immediately. Save the dry stuff for later when you may really need it. The odds are low society will completely collapse and you’ll go without help for super long, but it’s still better to go through everything that’s going to go bad anyway.\n\nPDDL Actions:\n(:action drop\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (inventory ?p ?it) (at ?p ?l))\n      :effect (and (not (inventory ?p ?it)) (at ?it ?l))\n   )\n(:action fill\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (can_be_filled ?it) (at ?p ?l) (at ?it ?l))\n      :effect (full ?it)\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action purify\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l) (full ?it) (inventory ?p purification_tablets) (not (sealed ?it)))\n      :effect (and (purified ?it) (not (inventory ?p purification_tablets)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n(:action put_in_stopper\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (has_stopper ?it) (not (full ?it)) (at ?it ?l) (at ?p ?l))\n      :effect (can_be_filled ?it)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Pick Hearing Assistive Technology\n\nSteps:\n- install_hearing_loop in your home\n- compare-phone hearing assistive phones\n- determine if you need alarms in your home\n- get_hearing_dog npc\n\nDescriptions:\n- Consider installing a hearing loop in your home.\n- Compare hearing assistive phones.\n- Determine if you need alarms in your home.\n- Consider getting a hearing dog if you live alone.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is pick_car_lock.\n- go up npc living_room hallway\n- go east npc hallway bathroom\n- go east npc bathroom bedroom\n- get coathanger npc bedroom\n- go west npc bedroom bathroom\n- go west npc bathroom hallway\n- go down npc hallway living_room\n- go east npc living_room office\n- go east npc office kitchen\n- go down npc kitchen garage\n- go out npc garage car\n- straighten_coathanger npc\n- insert_hanger npc car\n- hook_latch npc car\n- pull_coathanger npc car\n\nDescriptions:\n- Unravel and straighten the coat hanger. You can leave the hooked top section alone, but unwind it from itself at the “neck” and straighten the rest of the hanger out, giving you a long metal tool with a hooked tip.\n- Lift the weather stripping from the bottom of the driver's-side window. Push the end of the hanger in through the soft rubber weather stripping and the bottom of the window. The hanger is now inside the wall of the door.\n- Hook and pull the latch. Hook the hanger around the latch and pull it towards the rear of the car. This should unlock any manually locked car door.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action pull_coathanger ;  unlock the car\n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger) (latch_hooked ?loc)) \n      :effect (not (locked_car ?loc))\n   )\n\n)\n(:action hook_latch ;    hook onto car latch  \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (latch_hooked ?loc))\n   )\n(:action straighten_coathanger ; straighten coathanger\n      :parameters (?p - player) \n      :precondition (and (inventory ?p coathanger)) \n      :effect (and (not (inventory ?p coathanger)) (inventory ?p straightened_coathanger)) \n   )\n(:action insert_hanger ;    insert hanger \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (coathanger_inserted ?loc))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Choose Between a Car with Automatic or Manual Transmission\n\nSteps:\n- understand npc\n- listen_to_broadcast npc\n- check_transmission semi-automatic transmission\n- determine if fuel_efficiency is an issue\n- make_maintenance_costume npc basement\n- identify_needs you need\n- buy_vehicle npc car\n- listen_to_broadcast npc\n\nDescriptions:\n- Understand the basics.\n- Consider power.\n- Consider semi-automatic transmission.\n- Determine if fuel economy is an issue.\n- Think about maintenance/repair costs.\n- Identify your needs.\n- Decide if you are willing to own a vehicle with a manual transmission.\n- Notice if you are a multitasker.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is turn-on-radio.\n- go up npc kitchen bedroom\n- get batteries bedroom npc\n- go down npc bedroom kitchen\n- go down npc kitchen basement\n- put_batteries_in npc basement radio\n- turn_on_radio npc basement radio\n\nDescriptions:\n- Your vehicle may still work if it’s older or it doesn’t rely on a dedicated electrical signal outside of the battery to keep the engine going, which is the case for many vehicles.\n- Turn your radio on immediately to get as much information as possible. Most electronics are going to stop functioning as soon as the EMP goes off. However, depending on the type of EMP, there is a good chance that radios will continue to work—at least for a short while. Turn the radio on and tune in to any news source with a decent signal. Keep it on as long as possible and pay attention while you take the next steps to ensure that you get as much information as you can.\n\nPDDL Actions:\n(:action turn_on_radio ; turn on the radio\n      :parameters (?p - player ?loc - location ?radio - radio) \n      :precondition (and (at ?p ?loc) (at ?radio ?loc) (has_batteries ?radio))\n      :effect (on ?radio)\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n(:action put_batteries_in ; pick up an item and put it in the inventory\n      :parameters (?p - player ?l1 - location ?radio - radio) \n      :precondition (and (at ?p ?l1) (inventory ?p batteries) (not (has_batteries ?radio)))\n      :effect (has_batteries ?radio)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Shop for a Car Alarm System\n\nSteps:\n- determine_amounts you can_spend npc\n- listen_to_alarm_system alarm system\n- talk_to_injured npc\n-  Evaluate_quality_of_car alarm systems you are considering\n- buy_shelter npc\n- finish-wreath wreath\n\nDescriptions:\n- Determine how much money you can spend.\n- Consider which features you want in your alarm system.\n- Talk to your insurance provider regarding alarm system subsidies.\n- Evaluate the quality of the car alarm systems you are considering.\n- Shop around before making a purchase to find the best price.\n- Finished.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Get a Headshot in Gears of War.\n- sniper_shot weapon1 player1\n- shotgun_shot player2\n- pistol_shot player3\n- boomshot_shot weapon2 player4\n\nDescriptions:\n- Sniper — Simply aim at the head and pull the trigger, unless you're the host, in which case you will need to aim in front of where they're going.\n- Shotgun — The aim on the shotgun is almost like a rectangle.\n- Pistol — I'm not sure because I haven't played in a while, but it's either six or seven shots to the head with the standard-issue pistol for a headshot.\n- BoomShot — BoomShot headshots are possible — don't let anyone tell you they're not but the chance of one happening is about a million to one.\n\nPDDL Actions:\n(:action sniper_shot\n    :parameters (?w - weapon ?a - agent)\n    :precondition (and\n                    (weapon_location ?w still)\n                    (not (knows_where_to_aim ?a))\n                   )\n    :effect (and\n             (weapon_location ?w focused)\n             (knows_where_to_aim ?a)\n            )\n  )\n\n  ;; 使用霰弹枪进行射击\n(:action shotgun_shot\n    :parameters (?a - agent)\n    :precondition (not (knows_shape_of_shotgun_aim ?a))\n    :effect (knows_shape_of_shotgun_aim ?a)\n  )\n\n  ;; 使用手枪进行射击\n(:action pistol_shot\n    :parameters (?a - agent)\n    :precondition (not (knows_pistol_shots_needed ?a))\n    :effect (knows_pistol_shots_needed ?a)\n  )\n\n  ;; 使用BoomShot进行射击\n(:action boomshot_shot\n    :parameters (?w - weapon ?a - agent)\n    :precondition (and\n                    (weapon_location ?w unfired)\n                    (not (knows_boomshot_odds ?a))\n                   )\n    :effect (and\n             (weapon_location ?w fired)\n             (knows_boomshot_odds ?a)\n            )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Buy a Remote Starter for a Truck\n\nSteps:\n- determine_remote_starter you remote_start you car\n- listen_to_instructions npc covering_tracks track\n- search_internet npc home\n- initiate_new_member_secret adrian liam ss\n- choose_system npc covering_tracks track\n- get_remote_system npc home\n- get_remote_starter npc tv\n\nDescriptions:\n- Determine what kind of remote starter you need for your particular type of truck.\n- Make a list of the features you want.\n- Search the Internet for reputable remote starter system manufacturers.\n- Contact manufacturers and ask them to send you all of their remote starter product brochures.\n- Read over the brochures and decide which systems have all of the features you need and want.\n- Research the remote starter systems that apply to your specific needs online.\n- Find retailers that sell the remote starter you are interested in and shop around for the best price.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is turn-on-radio.\n- go up npc kitchen bedroom\n- get batteries bedroom npc\n- go down npc bedroom kitchen\n- go down npc kitchen basement\n- put_batteries_in npc basement radio\n- turn_on_radio npc basement radio\n\nDescriptions:\n- Your vehicle may still work if it’s older or it doesn’t rely on a dedicated electrical signal outside of the battery to keep the engine going, which is the case for many vehicles.\n- Turn your radio on immediately to get as much information as possible. Most electronics are going to stop functioning as soon as the EMP goes off. However, depending on the type of EMP, there is a good chance that radios will continue to work—at least for a short while. Turn the radio on and tune in to any news source with a decent signal. Keep it on as long as possible and pay attention while you take the next steps to ensure that you get as much information as you can.\n\nPDDL Actions:\n(:action turn_on_radio ; turn on the radio\n      :parameters (?p - player ?loc - location ?radio - radio) \n      :precondition (and (at ?p ?loc) (at ?radio ?loc) (has_batteries ?radio))\n      :effect (on ?radio)\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n(:action put_batteries_in ; pick up an item and put it in the inventory\n      :parameters (?p - player ?l1 - location ?radio - radio) \n      :precondition (and (at ?p ?l1) (inventory ?p batteries) (not (has_batteries ?radio)))\n      :effect (has_batteries ?radio)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Choose a Car Alarm\n\nSteps:\n- choose_car alarm you want\n- choose_features my_equipment\n- start_shopping npc brickhouse\n\nDescriptions:\n- Choose which type of car alarm you want.\n- Choose what features are right for you and your needs.\n- Start shopping around at local stores.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is pick_car_lock.\n- go up npc living_room hallway\n- go east npc hallway bathroom\n- go east npc bathroom bedroom\n- get coathanger npc bedroom\n- go west npc bedroom bathroom\n- go west npc bathroom hallway\n- go down npc hallway living_room\n- go east npc living_room office\n- go east npc office kitchen\n- go down npc kitchen garage\n- go out npc garage car\n- straighten_coathanger npc\n- insert_hanger npc car\n- hook_latch npc car\n- pull_coathanger npc car\n\nDescriptions:\n- Unravel and straighten the coat hanger. You can leave the hooked top section alone, but unwind it from itself at the “neck” and straighten the rest of the hanger out, giving you a long metal tool with a hooked tip.\n- Lift the weather stripping from the bottom of the driver's-side window. Push the end of the hanger in through the soft rubber weather stripping and the bottom of the window. The hanger is now inside the wall of the door.\n- Hook and pull the latch. Hook the hanger around the latch and pull it towards the rear of the car. This should unlock any manually locked car door.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action pull_coathanger ;  unlock the car\n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger) (latch_hooked ?loc)) \n      :effect (not (locked_car ?loc))\n   )\n\n)\n(:action hook_latch ;    hook onto car latch  \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (coathanger_inserted ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (latch_hooked ?loc))\n   )\n(:action straighten_coathanger ; straighten coathanger\n      :parameters (?p - player) \n      :precondition (and (inventory ?p coathanger)) \n      :effect (and (not (inventory ?p coathanger)) (inventory ?p straightened_coathanger)) \n   )\n(:action insert_hanger ;    insert hanger \n      :parameters (?p - player ?loc - location) \n      :precondition (and (at ?p ?loc) (locked_car ?loc) (inventory ?p straightened_coathanger)) \n      :effect (and (coathanger_inserted ?loc))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Buy a Custom Fit Car Cover\n\nSteps:\n- buy_car_cover npc car_coathanger\n- make_defending_vehicle npc basement\n- decide_on_budget npc basement\n- find_store npc brickhouse\n- pickupobjectnoreceptacle agent npc store\n\nDescriptions:\n- Make sure you know the exact year, make, model, body type, and trim of the vehicle you are purchasing a custom car cover for.\n- Decide what you want to protect your vehicle from.\n- Decide on a budget.\n- Find and compare multiple retailers.\n- If you have any questions or doubts about the product you're ordering, contact the retailer.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is turn-on-radio.\n- go up npc kitchen bedroom\n- get batteries bedroom npc\n- go down npc bedroom kitchen\n- go down npc kitchen basement\n- put_batteries_in npc basement radio\n- turn_on_radio npc basement radio\n\nDescriptions:\n- Your vehicle may still work if it’s older or it doesn’t rely on a dedicated electrical signal outside of the battery to keep the engine going, which is the case for many vehicles.\n- Turn your radio on immediately to get as much information as possible. Most electronics are going to stop functioning as soon as the EMP goes off. However, depending on the type of EMP, there is a good chance that radios will continue to work—at least for a short while. Turn the radio on and tune in to any news source with a decent signal. Keep it on as long as possible and pay attention while you take the next steps to ensure that you get as much information as you can.\n\nPDDL Actions:\n(:action turn_on_radio ; turn on the radio\n      :parameters (?p - player ?loc - location ?radio - radio) \n      :precondition (and (at ?p ?loc) (at ?radio ?loc) (has_batteries ?radio))\n      :effect (on ?radio)\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n(:action put_batteries_in ; pick up an item and put it in the inventory\n      :parameters (?p - player ?l1 - location ?radio - radio) \n      :precondition (and (at ?p ?l1) (inventory ?p batteries) (not (has_batteries ?radio)))\n      :effect (has_batteries ?radio)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Buy a Car Battery\n\nSteps:\n- buy_car_batteries npc car\n- test_batteries npc\n- recycle_batteries old_bike battery1 bike1\n\nDescriptions:\n- Buy a car battery proactively.\n- Test your battery annually.\n- Recycle your old battery.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]