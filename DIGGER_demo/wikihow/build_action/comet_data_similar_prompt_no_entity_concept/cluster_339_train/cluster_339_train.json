[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Recycle Underpants.\n- make_cleaning_rags underpants6\n- make_cleaning_rags underpants5\n- make_cleaning_rags underpants4\n- donate_underpants underpants6\n- child_wears_underpants underpants5\n- use_as_stuffing underpants4\n- make_craft_item underpants3 scissors1\n- make_garden_ties underpants2 scissors1 plant1\n- make_cleaning_rags underpants1\n\nDescriptions:\n- Turn the underpants into cleaning rags.\n- Use the underwear as garden ties.\n- Turn quality undies into craft items.\n- Use a bundle of old underwear as stuffing.\n- Children can wear old underwear on the outside of their pants to play superhero.\n- Donate the underpants.\n\nPDDL Actions:\n(:action make_cleaning_rags\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_cleaning_rags ?u)\n    )\n  )\n\n  ;; 动作2: 使用内裤作为园艺绑带\n(:action make_garden_ties\n    :parameters (?u - underpants ?t - tool ?pl - plant)\n    :precondition (and\n      (at ?u drawer)\n      (available ?t)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_garden_ties ?u)\n      (tied ?pl)\n    )\n  )\n\n  ;; 动作3: 将内裤制作成工艺品\n(:action make_craft_item\n    :parameters (?u - underpants ?t - tool)\n    :precondition (and\n      (at ?u drawer)\n      (available ?t)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_craft_item ?u)\n    )\n  )\n\n  ;; 动作4: 将内裤用作填充物\n(:action use_as_stuffing\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (used_as_stuffing ?u)\n  )\n\n  ;; 动作5: 孩子穿着旧内裤玩超级英雄\n(:action child_wears_underpants\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (worn_by_child ?u)\n  )\n\n  ;; 动作6: 捐赠内裤\n(:action donate_underpants\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (donated ?u)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Teach Your Kid to Use a Zipper\n\nSteps:\n- put_zipper_in_machine velveeta\n- teach-child zipping\n- remove_add_unnecessary_challenges npc\n- teach-child zipping\n- gather_reinforced person npc\n- receptacle agent child npc\n\nDescriptions:\n- Model zipper use.\n- Have your child practice zipping with your help.\n- Remove any unnecessary challenges.\n- Give your child opportunities to practice zipping.\n- Give positive reinforcement.\n- Reward your child for a job well done.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Recycle Underpants.\n- make_cleaning_rags underpants6\n- make_cleaning_rags underpants5\n- make_cleaning_rags underpants4\n- donate_underpants underpants6\n- child_wears_underpants underpants5\n- use_as_stuffing underpants4\n- make_craft_item underpants3 scissors1\n- make_garden_ties underpants2 scissors1 plant1\n- make_cleaning_rags underpants1\n\nDescriptions:\n- Turn the underpants into cleaning rags.\n- Use the underwear as garden ties.\n- Turn quality undies into craft items.\n- Use a bundle of old underwear as stuffing.\n- Children can wear old underwear on the outside of their pants to play superhero.\n- Donate the underpants.\n\nPDDL Actions:\n(:action make_cleaning_rags\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_cleaning_rags ?u)\n    )\n  )\n\n  ;; 动作2: 使用内裤作为园艺绑带\n(:action make_garden_ties\n    :parameters (?u - underpants ?t - tool ?pl - plant)\n    :precondition (and\n      (at ?u drawer)\n      (available ?t)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_garden_ties ?u)\n      (tied ?pl)\n    )\n  )\n\n  ;; 动作3: 将内裤制作成工艺品\n(:action make_craft_item\n    :parameters (?u - underpants ?t - tool)\n    :precondition (and\n      (at ?u drawer)\n      (available ?t)\n      (not (is_old ?u))\n    )\n    :effect (and\n      (is_old ?u)\n      (used_as_craft_item ?u)\n    )\n  )\n\n  ;; 动作4: 将内裤用作填充物\n(:action use_as_stuffing\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (used_as_stuffing ?u)\n  )\n\n  ;; 动作5: 孩子穿着旧内裤玩超级英雄\n(:action child_wears_underpants\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (worn_by_child ?u)\n  )\n\n  ;; 动作6: 捐赠内裤\n(:action donate_underpants\n    :parameters (?u - underpants)\n    :precondition (and\n      (at ?u drawer)\n      (is_old ?u)\n    )\n    :effect (donated ?u)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Teach Your Children to Do Laundry\n\nSteps:\n- make_child_friendly area\n- participate_with_children npc\n- make_fun kids laundry\n- encourage_teenagers npc\n\nDescriptions:\n- Make the laundry area child-friendly.\n- Have young children participate with safe tasks.\n- Make laundry fun for older kids.\n- Encourage teenagers to be more independent.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Seasoned Salt.\n- mix-ingredients celery_salt\n- grind-ingredients celery_salt mortar_and_pestle\n- season-food celery_salt salads\n\nDescriptions:\n- Mix the ingredients together thoroughly.\n- Pour into an air-tight container with a lid.\n- It goes well in dips, salad dressings, soups and on sandwiches.\n- Grind the ingredients together in a mortar and pestle.\n- Transfer to a storage container as needed.\n\nPDDL Actions:\n(:action mix-ingredients\n    :parameters (?e - entity)\n    :precondition (and (stratified ?e) (separate ?e))\n    :effect (and (mixed ?e) (not (stratified ?e)) (not (separate ?e)))\n  )\n(:action pour-into-container\n    :parameters (?e - entity ?c - container)\n    :precondition (and (mixed ?e) (empty ?c))\n    :effect (and (inContainer ?e ?c) (full ?c) (onCounter ?c) (not (empty ?c)))\n  )\n(:action season-food\n    :parameters (?e - entity ?f - food)\n    :precondition (mixed ?e)\n    :effect (and (flavorful ?f) (not (plain ?f)))\n  )\n(:action grind-ingredients\n    :parameters (?e - entity ?t - tool)\n    :precondition (and (mixed ?e) (absent ?t))\n    :effect (and (present ?t))\n  )\n(:action transfer-to-storage\n    :parameters (?e - entity ?c - container)\n    :precondition (inContainer ?e ?c)\n    :effect (and (empty ?c))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Teach Your Child to Wash Dishes\n\nSteps:\n- load-dishwasher-with-pre-rinsed plates\n- initiate_child npc\n- clean_machine npc washing_cycle\n\nDescriptions:\n- Load the dishwasher with pre-rinsed plates.\n- Instruct your child how to put soap in the dishwasher and how to begin the wash cycle.\n- Complete the wash cycle.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Clean Your Home Efficiently.\n- pickup_items item1 basket1\n- clean_surfaces tv cleaner1\n- clean_surfaces window1 cleaner1\n- clean_surfaces window2 cleaner1\n- pickup_items item2 basket1\n- shake_rugs rug1\n- shake_rugs rug2\n- empty_trash basket1 trash_bag1\n- empty_trash basket1 trash_bag2\n- dust_room living_room\n- dust_room kitchen\n- dust_room bathroom\n\nDescriptions:\n- ######Pick up and put away stray items and throw trash into waste baskets.\n- ######Dust, again going through the entire house room by room.\n- ######Take a large trash bag and go through each room emptying the waste baskets and trash cans.\n- ######Use a spray cleaner and rags or paper towels to clean any glass surfaces, including the TV screens.\n- First pick up any throw rugs and inside door mats and shake them outside.\n- ######Enjoy your clean home!\n\nPDDL Actions:\n(:action pickup_items\n    :parameters (?item - item ?basket - basket)\n    :precondition (and\n                    (stray_item ?item)\n                    (empty ?basket))\n    :effect (and\n              (in_basket ?item ?basket)\n              (organized ?item)\n              (full ?basket))\n  )\n\n  ;; 动作2：清洁房间的灰尘\n(:action dust_room\n    :parameters (?room - room)\n    :precondition (dusty ?room)\n    :effect (and\n              (cleaned_room ?room)\n              (not (dusty ?room)))\n  )\n\n  ;; 动作3：清空垃圾桶到垃圾袋\n(:action empty_trash\n    :parameters (?basket - basket ?dish - dish)\n    :precondition (full ?basket)\n    :effect (and\n              (empty ?basket)\n              (trash_disposed ?dish))\n  )\n\n  ;; 动作4：使用喷雾清洁剂清洁表面\n(:action clean_surfaces\n    :parameters (?surface - surface ?cleaner - cleaner)\n    :precondition (dirty_surface ?surface)\n    :effect (cleaned_surface ?surface)\n  )\n\n  ;; 动作5：摇动地毯和门垫以清洁\n(:action shake_rugs\n    :parameters (?rug - rug)\n    :precondition (dirty_rug ?rug)\n    :effect (cleaned_rug ?rug)\n  )\n\n  ;; 动作6：享受干净的家\n(:action enjoy_clean_home\n    :parameters ()\n    :precondition ()\n    :effect ()\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean a Clothes Dryer Vent\n\nSteps:\n- learn_signal npc\n- clean_floor rug rug1\n- check_sheets dryer_sheet1\n- stick_to_dry_cycles npc\n\nDescriptions:\n- Learn the signs your vent needs cleaning.\n- Keep the floor around the dryer clean.\n- Limit the use of dryer sheets.\n- Stick to brief dry cycles.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Spool Knit a Winter Hat.\n- sew_web_into_rectangle web\n- join_ends end_points\n- knit_web web\n- secure_top_and_make_tassel finished_hat yarn_piece\n\nDescriptions:\n- Knit eighty-four inches of flat web.\n- Begin five inches from the end of the web, turn and sew into a rectangular form five inches wide and eight inches long.\n- Join the five-inch ends, and draw in the top with the needle and a piece of the material from which the cap was made.\n- After securing the top, twist and fold the piece of yarn remaining for a cord and fasten a number of strands of yarn through the loop for a tassel.\n\nPDDL Actions:\n(:action knit_web\n    :parameters (?w - webbing)\n    :precondition (in_line ?w)\n    :effect (and\n              (knitted_together ?w)\n              (not (in_line ?w))\n            )\n  )\n\n  ;; 动作2：将网缝制成矩形\n(:action sew_web_into_rectangle\n    :parameters (?w - webbing)\n    :precondition (and\n                    (shape_straight ?w)\n                    (width_wider ?w)\n                  )\n    :effect (and\n              (shape_rectangular ?w)\n              (width_narrower ?w)\n              (not (shape_straight ?w))\n              (not (width_wider ?w))\n            )\n  )\n\n  ;; 动作3：连接末端\n(:action join_ends\n    :parameters (?e - ends)\n    :precondition (unjoined ?e)\n    :effect (and\n              (joined ?e)\n              (not (unjoined ?e))\n            )\n  )\n\n  ;; 动作4：固定顶部并制作流苏\n(:action secure_top_and_make_tassel\n    :parameters (?h - hat ?y - yarn)\n    :precondition (and\n                    (has_weight_lighter ?h)\n                    (shape_straight_yarn ?y)\n                  )\n    :effect (and\n              (has_weight_heavier ?h)\n              (shape_twisted_and_folded ?y)\n              (not (has_weight_lighter ?h))\n              (not (shape_straight_yarn ?y))\n            )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Get a Toddler to Wear Winter Clothes\n\nSteps:\n- choose_clothes npc\n- practice wearing_winter_clothes npc\n- pack_clothes npc\n- make_comamiliar_routes npc\n- break_child npc basement\n\nDescriptions:\n- Choose clothes that are easy to pull on.\n- Get your toddler to practice wearing their winter clothes.\n- Pack their summer clothes.\n- Make getting dressed a familiar routine.\n- Avoid forcing your toddler to wear the winter clothes.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is fill-inventory.\n- go south npc parkinglot pond\n- get_water npc pond water\n- go north npc pond parkinglot\n- go north npc parkinglot park\n- go east npc park store\n- get npc store bandage\n- go west npc store park\n- go west npc park car\n- go west npc car brickhouse\n- loot_shelter npc brickhouse food\n\nDescriptions:\n- Learn basic first-aid to treat minor injuries. Injuries are unfortunately inevitable, and they can range from minor to serious. Develop at least a basic knowledge of first aid to treat the injuries you or a partner may encounter. When searching for supplies, take any first aid gear you may find and build a basic first aid kit.\n- Purify any water you drink that isn’t from a sealed bottle. A waterborne illness can be life-threatening in a survival situation. If need to use any unbottled water for drinking, always purify it first. The most common method is boiling the water for 1 minute to kill any pathogens. Then filter out larger objects by pouring the water through a fine net or cloth.\n\nPDDL Actions:\n(:action get_water ; get water from a location that has a water source like a lake.\n      :parameters (?p - player ?loc - location ?water - water) \n      :precondition (and (at ?p ?loc) (has_water_source ?loc))\n      :effect (and (inventory ?p ?water) (not (treated ?water)))\n   )\n(:action barter_food_for_healing ; get food in exchange for healing.\n      :parameters (?p - player ?p_inj - player ?water - water ?bandage - bandage ?food - food ?l -location) \n      :precondition (and (inventory ?p ?water) (inventory ?p ?bandage) (is_injured ?p_inj) (at ?p ?l) (at ?p_inj ?l))\n      :effect (and (not (is_injured ?p_inj)) (gettable ?food)  )\n   )\n\n   \n)\n(:action gofish \n      :parameters (?p - player ?l - location ?fp - fishingpole ?f - fish)\n      :precondition (and (at ?p ?l) (inventory ?p ?fp) (haslake ?l) (at ?f ?l))\n      :effect (and (gettable ?f) )\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?p - player ?l - location ?i - item)\n      :precondition (and (at ?p ?l) (at ?i ?l) (gettable ?i))\n      :effect (and (not (at ?i ?l)) (inventory ?p ?i))\n   )\n(:action loot_shelter ; steal food from location that is occupied.\n      :parameters (?p - player ?loc - location ?food - food) \n      :precondition (and (at ?food ?loc) (at ?p ?loc) (is_occupied ?loc))\n      :effect (and (inventory ?p ?food) (not (at ?food ?loc)))\n   )\n(:action break_car_window ; steal food from car.\n      :parameters (?p - player ?car - car ?rock - rock ?item - item) \n      :precondition (and (at ?p ?car) (inventory ?p ?rock) (has_windows ?car) (at ?item ?car))\n      :effect (and (gettable ?item) (not (inventory ?p ?rock)) (not (has_windows ?car)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean Toddler's Teeth\n\nSteps:\n- start_in infancy npc\n- use_others_as_gerbix npc\n- floss_with_faucet fairy_moss\n- brush-tied toddler's teeth\n- go_to_dentist npc\n- drink_water npc\n- get_tinder npc\n\nDescriptions:\n- Start in infancy.\n- Use toddler tooth care products.\n- Floss.\n- Start brushing your toddler's teeth!.\n- Go to the dentist.\n- Give your child drinking water that is fluoridated.\n- Make sure your toddler is getting a well-balanced diet.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Clean Your Home Efficiently.\n- pickup_items item1 basket1\n- clean_surfaces tv cleaner1\n- clean_surfaces window1 cleaner1\n- clean_surfaces window2 cleaner1\n- pickup_items item2 basket1\n- shake_rugs rug1\n- shake_rugs rug2\n- empty_trash basket1 trash_bag1\n- empty_trash basket1 trash_bag2\n- dust_room living_room\n- dust_room kitchen\n- dust_room bathroom\n\nDescriptions:\n- ######Pick up and put away stray items and throw trash into waste baskets.\n- ######Dust, again going through the entire house room by room.\n- ######Take a large trash bag and go through each room emptying the waste baskets and trash cans.\n- ######Use a spray cleaner and rags or paper towels to clean any glass surfaces, including the TV screens.\n- First pick up any throw rugs and inside door mats and shake them outside.\n- ######Enjoy your clean home!\n\nPDDL Actions:\n(:action pickup_items\n    :parameters (?item - item ?basket - basket)\n    :precondition (and\n                    (stray_item ?item)\n                    (empty ?basket))\n    :effect (and\n              (in_basket ?item ?basket)\n              (organized ?item)\n              (full ?basket))\n  )\n\n  ;; 动作2：清洁房间的灰尘\n(:action dust_room\n    :parameters (?room - room)\n    :precondition (dusty ?room)\n    :effect (and\n              (cleaned_room ?room)\n              (not (dusty ?room)))\n  )\n\n  ;; 动作3：清空垃圾桶到垃圾袋\n(:action empty_trash\n    :parameters (?basket - basket ?dish - dish)\n    :precondition (full ?basket)\n    :effect (and\n              (empty ?basket)\n              (trash_disposed ?dish))\n  )\n\n  ;; 动作4：使用喷雾清洁剂清洁表面\n(:action clean_surfaces\n    :parameters (?surface - surface ?cleaner - cleaner)\n    :precondition (dirty_surface ?surface)\n    :effect (cleaned_surface ?surface)\n  )\n\n  ;; 动作5：摇动地毯和门垫以清洁\n(:action shake_rugs\n    :parameters (?rug - rug)\n    :precondition (dirty_rug ?rug)\n    :effect (cleaned_rug ?rug)\n  )\n\n  ;; 动作6：享受干净的家\n(:action enjoy_clean_home\n    :parameters ()\n    :precondition ()\n    :effect ()\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean a Toddler's Ears\n\nSteps:\n- check_child_ears npc\n- insert_cotton_swab npc\n- watch_child npc\n\nDescriptions:\n- Look into your child's ears to check for foreign objects.\n- Never insert a cotton swab or other item into your child's ear.\n- Watch for signs that your child may be having ear pain.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is collect-water.\n- go up npc basement kitchen\n- get bottles kitchen npc\n- go up npc kitchen bedroom\n- go in npc bedroom bathroom\n- drop bottles bathroom npc\n- fill bottles bathroom npc\n- put_in_stopper bathtub bathroom npc\n- get purification_tablets bathroom npc\n- purify bottles bathroom npc\n- fill bathtub bathroom npc\n\nDescriptions:\n- Shelter in place and wait for the initial chaos to subside. If all of the electronics suddenly stop working, the immediate loss of electricity will cause a lot of sudden confusion and chaos. If you aren’t home, wait 30-45 minutes for all of the abrupt danger to pass. Then, go home if you’re within a few miles or kilometers. If you’re already home, stay there and do not go outside.\n- Eat anything in your fridge first to minimize food shortages. For the first 1-2 days, eat whatever is in your fridge and hasn’t gone bad immediately. Save the dry stuff for later when you may really need it. The odds are low society will completely collapse and you’ll go without help for super long, but it’s still better to go through everything that’s going to go bad anyway.\n\nPDDL Actions:\n(:action drop\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (inventory ?p ?it) (at ?p ?l))\n      :effect (and (not (inventory ?p ?it)) (at ?it ?l))\n   )\n(:action fill\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (can_be_filled ?it) (at ?p ?l) (at ?it ?l))\n      :effect (full ?it)\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action purify\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l) (full ?it) (inventory ?p purification_tablets) (not (sealed ?it)))\n      :effect (and (purified ?it) (not (inventory ?p purification_tablets)))\n   )\n(:action get\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (at ?it ?l) (at ?p ?l))\n      :effect (and (inventory ?p ?it) (not (at ?it ?l)))\n   )\n(:action put_in_stopper\n      :parameters (?it - item ?l - location ?p - player)\n      :precondition (and (has_stopper ?it) (not (full ?it)) (at ?it ?l) (at ?p ?l))\n      :effect (can_be_filled ?it)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Wash an Electric Blanket\n\nSteps:\n- dry_blanket npc\n- make_oven npc cordial\n- inspect_blanket npc\n- take_care npc\n\nDescriptions:\n- Do not dry clean your electric blanket.\n- Do not iron an electric blanket.\n- Inspect the blanket after washing and drying.\n- Take care at the laundromat.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is fill-inventory.\n- go south npc parkinglot pond\n- get_water npc pond water\n- go north npc pond parkinglot\n- go north npc parkinglot park\n- go east npc park store\n- get npc store bandage\n- go west npc store park\n- go west npc park car\n- go west npc car brickhouse\n- loot_shelter npc brickhouse food\n\nDescriptions:\n- Learn basic first-aid to treat minor injuries. Injuries are unfortunately inevitable, and they can range from minor to serious. Develop at least a basic knowledge of first aid to treat the injuries you or a partner may encounter. When searching for supplies, take any first aid gear you may find and build a basic first aid kit.\n- Purify any water you drink that isn’t from a sealed bottle. A waterborne illness can be life-threatening in a survival situation. If need to use any unbottled water for drinking, always purify it first. The most common method is boiling the water for 1 minute to kill any pathogens. Then filter out larger objects by pouring the water through a fine net or cloth.\n\nPDDL Actions:\n(:action get_water ; get water from a location that has a water source like a lake.\n      :parameters (?p - player ?loc - location ?water - water) \n      :precondition (and (at ?p ?loc) (has_water_source ?loc))\n      :effect (and (inventory ?p ?water) (not (treated ?water)))\n   )\n(:action barter_food_for_healing ; get food in exchange for healing.\n      :parameters (?p - player ?p_inj - player ?water - water ?bandage - bandage ?food - food ?l -location) \n      :precondition (and (inventory ?p ?water) (inventory ?p ?bandage) (is_injured ?p_inj) (at ?p ?l) (at ?p_inj ?l))\n      :effect (and (not (is_injured ?p_inj)) (gettable ?food)  )\n   )\n\n   \n)\n(:action gofish \n      :parameters (?p - player ?l - location ?fp - fishingpole ?f - fish)\n      :precondition (and (at ?p ?l) (inventory ?p ?fp) (haslake ?l) (at ?f ?l))\n      :effect (and (gettable ?f) )\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?p - player ?l - location ?i - item)\n      :precondition (and (at ?p ?l) (at ?i ?l) (gettable ?i))\n      :effect (and (not (at ?i ?l)) (inventory ?p ?i))\n   )\n(:action loot_shelter ; steal food from location that is occupied.\n      :parameters (?p - player ?loc - location ?food - food) \n      :precondition (and (at ?food ?loc) (at ?p ?loc) (is_occupied ?loc))\n      :effect (and (inventory ?p ?food) (not (at ?food ?loc)))\n   )\n(:action break_car_window ; steal food from car.\n      :parameters (?p - player ?car - car ?rock - rock ?item - item) \n      :precondition (and (at ?p ?car) (inventory ?p ?rock) (has_windows ?car) (at ?item ?car))\n      :effect (and (gettable ?item) (not (inventory ?p ?rock)) (not (has_windows ?car)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Wash a Toddler's Clothes\n\nSteps:\n- determine_temperature water\n- choose_detergent detergent\n- dry_clothes npc work_station\n- add-dryer-sheets dryer_sheets\n\nDescriptions:\n- Determine what temperature of water you will use.\n- Choose a detergent.\n- Figure out how you should dry the clothes.\n- Add dryer sheets if so desired.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]