[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Treat Breast Cysts\n\nSteps:\n- drink_water npc\n- take_inflip npc\n- get_hormonal_treat npc\n- remove_cysts npc\n\nDescriptions:\n- Drain the cysts.\n- Take antibiotics for infection, if necessary.\n- Ask your doctor about hormonal treatments.\n- Surgically remove the cysts.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is drink_water.\n- get container npc camp\n- go east npc camp path\n- go east npc path riverside\n- collect_water npc container water riverside\n- go north npc riverside rainforest\n- get_wood npc wood rainforest\n- make_drill npc wood drill\n- make_fire npc drill rainforest\n- filter_water npc water\n- boil_water npc water rainforest\n- drink_water npc water\n\nDescriptions:\n- Boil water from streams to kill any bacteria. Look for running streams to find fresh water. Filter out any particles through a sock, shirt, or other fabric, then start a fire and boil the water to kill bacteria that can make you sick.\n- The plastic sheet will accumulate condensation that will drip down the underside of the sheet and into the container. This water is distilled and safe to drink.\n- If you donâ€™t have a water bottle or other container to collect water, try to find other natural containers in the jungle such as a coconut shell or piece of wood shaped like a bowl. You can also leave these items out when it rains to collect the fresh water.\n- Make a solar water still with a container and a plastic sheet. Dig a hole in an area that receives at least some direct sunlight and put a container, such as a water bottle or can, in the middle of the hole. Fill the space between the sides of the hole and the container with wet leaves. Place a plastic sheet over the top of the hole and put rocks or other heavy objects around the edges to hold it in place. Put a small stone in the middle of the sheet above the container.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action collect_water ; use container to collect water from a location that has water\n      :parameters (?p - player ?container - container ?water - water ?loc - location) \n      :precondition (and (at ?p ?loc) (has_water ?loc) (inventory ?p ?container) (not (inventory ?p ?water)))\n      :effect (and (inventory ?p ?water) (not (filtered ?water)) (not (boiled ?water)))\n   )\n(:action boil_water ; boil water to kill any bacteria\n      :parameters (?p - player ?water - water ?loc - location) \n      :precondition (and (inventory ?p ?water) (at ?p ?loc) (filtered ?water) (not (boiled ?water)) (has_fire ?loc))\n      :effect (and (boiled ?water))\n   )\n(:action get_foliage ; get foliage from a location that has trees\n      :parameters (?p - player ?foliage - foliage ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?foliage)))\n      :effect (and (inventory ?p ?foliage))\n   )\n(:action filter_water ; filter water to remove any particles\n      :parameters (?p - player ?water - water) \n      :precondition (and (inventory ?p ?water) (not (filtered ?water)))\n      :effect (and (filtered ?water))\n   )\n(:action drink_water ; drink boiled water \n      :parameters (?p - player ?water - water) \n      :precondition (and (inventory ?p ?water) (boiled ?water))\n      :effect (and (not (thirsty ?p)))\n   )\n(:action make_fire ; make fire at a location\n      :parameters (?p - player ?drill - drill ?loc - location) \n      :precondition (and (inventory ?p ?drill) (at ?p ?loc) (not (has_fire ?loc)))\n      :effect (and (has_fire ?loc))\n   )\n(:action make_drill ; make a drill using wood to create fire\n      :parameters (?p - player ?wood - wood ?drill - drill) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?drill)))\n      :effect (and (inventory ?p ?drill))\n   )\n(:action get_wood ; get wood from a location that has trees\n      :parameters (?p - player ?wood - wood ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?wood)))\n      :effect (and (inventory ?p ?wood))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Drain a Cyst\n\nSteps:\n- apply_warm_compress alice\n- clean_area area1\n- place_bandage_over_cyst user1 bike1 oil1\n- be_in_loot npc\n\nDescriptions:\n- Apply a warm compress.\n- Keep the area clean.\n- Place a bandage over the cyst if it starts to drain.\n- Leave it alone.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is make_papyrus.\n- cut_stalks npc knife papyrus_plant papyrus_stalks\n- cut_strips npc papyrus_strips papyrus_stalks knife\n- soak_strips npc water papyrus_strips\n- roll_strips npc rolling_pin papyrus_strips\n- weave_strips npc papyrus_strips\n- bundle_strips npc papyrus_strips wooden_boards linen_sheets\n- cut_sheet npc papyrus_strips knife papyrus\n\nDescriptions:\n- Cut the stalks. About 12 inches (30 cm) of papyrus plant will make a large piece of paper that will be nearly 24 inches (61 cm) in length. Cut off as many stalks as you will need to make the amount of paper you want. The cuts must be diagonally made. Then, cut the tips of the papyrus. You will not use the tips, which are the thinner, grass-like end of the plant.\n- Weave the strips together. Lay the strips on the cloth. Get a dry sheet of linen cloth or felt. Then, begin to weave them together. You want to create 2 layers of strips, with the top layer strips being perpendicular to the bottom layer strips. It should resemble a placemat. The strips should slightly overlap one another to prevent the papyrus from falling apart later.\n- Roll the excess water and sugar out of the plant. Grab a rolling pin and use it to roll the strips flat. The rolling pin should be squeezing the water out of them and flattening the strips into sheets.\n- Cut the paper. The sheet may be larger than you want when it is finished. Use a razor, scissors, or paper cutter to cut the papyrus into smaller sheets. Measure the sizes you are cutting so you will have multiple sheets of the same size.\n- Cut up the inner portion into strips. Use the knife you used to cut off the outer portion to cut the inner layers of the papyrus plant (pith) into thin strips. Hold the plant in your hand and cut towards you vertically. Make sure that all of the strips have the same size and thickness.\n- Place the bundle between 2 wooden boards. Make sure that the wooden boards are somewhat heavy. The pressure is necessary to flatten the papyrus strips together. Once the strips have been placed between the boards, press them together. Lay the sandwiched papyrus sheet on a flat surface and allow the wooden boards to flatten the sheet using gravity.\n\nPDDL Actions:\n(:action roll_strips; roll the excess water and sugar out of the strips to dry them\n    :parameters (?p - player ?rolling_pin - rolling_pin ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?rolling_pin) (inventory ?p ?papyrus_strips) (soaked ?papyrus_strips))\n    :effect (dried ?papyrus_strips)\n  )\n(:action soak_strips; place papyrus strips in water and let them soak\n    :parameters (?p - player ?water - water ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?water) (inventory ?p ?papyrus_strips))\n    :effect (soaked ?papyrus_strips)\n  )\n(:action weave_strips; weave the dried papyrus strips into a lattice\n    :parameters (?p - player ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?papyrus_strips) (dried ?papyrus_strips))\n    :effect (woven ?papyrus_strips)\n  )\n(:action bundle_strips; bundle the woven strips between linen sheets and wooden boards\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?wooden_boards - wooden_boards ?linen_sheets - linen_sheets)\n    :precondition (and (inventory ?p ?papyrus_strips) (woven ?papyrus_strips) (inventory ?p ?wooden_boards) (inventory ?p ?linen_sheets))\n    :effect (finished ?papyrus_strips)\n  )\n(:action cut_sheet; the finished sheet is cut to size to complete the papyrus\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?knife - knife ?papyrus - papyrus)\n    :precondition (and (inventory ?p ?papyrus_strips) (finished ?papyrus_strips) (inventory ?p ?knife))\n    :effect (and (inventory ?p ?papyrus) (not (inventory ?p ?papyrus_strips)))\n  )\n)\n(:action cut_stalks; cut papyrus plant into stalks\n    :parameters (?p - player ?knife - knife ?papyrus_plant - papyrus_plant ?papyrus_stalks - papyrus_stalks)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_plant))\n    :effect (and (inventory ?p ?papyrus_stalks) (not (inventory ?p ?papyrus_plant)))\n  )\n(:action cut_strips; cut papyrus stalks into strips\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?papyrus_stalks - papyrus_stalks ?knife - knife)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_stalks))\n    :effect (and (inventory ?p ?papyrus_strips) (not (inventory ?p ?papyrus_stalks)))\n  )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Treat Ovarian Cysts\n\nSteps:\n- monitor_painter npc\n- check_symptoms ovarian_customies\n- be_informed npc\n- schedule_check npc\n\nDescriptions:\n- Monitor pelvic pain.\n- Look for other symptoms of ovarian cysts.\n- Be aware of the risk factors.\n- Schedule a doctorâ€™s appointment.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Seasoned Salt.\n- mix-ingredients celery_salt\n- grind-ingredients celery_salt mortar_and_pestle\n- season-food celery_salt salads\n\nDescriptions:\n- Mix the ingredients together thoroughly.\n- Pour into an air-tight container with a lid.\n- It goes well in dips, salad dressings, soups and on sandwiches.\n- Grind the ingredients together in a mortar and pestle.\n- Transfer to a storage container as needed.\n\nPDDL Actions:\n(:action mix-ingredients\n    :parameters (?e - entity)\n    :precondition (and (stratified ?e) (separate ?e))\n    :effect (and (mixed ?e) (not (stratified ?e)) (not (separate ?e)))\n  )\n(:action pour-into-container\n    :parameters (?e - entity ?c - container)\n    :precondition (and (mixed ?e) (empty ?c))\n    :effect (and (inContainer ?e ?c) (full ?c) (onCounter ?c) (not (empty ?c)))\n  )\n(:action season-food\n    :parameters (?e - entity ?f - food)\n    :precondition (mixed ?e)\n    :effect (and (flavorful ?f) (not (plain ?f)))\n  )\n(:action grind-ingredients\n    :parameters (?e - entity ?t - tool)\n    :precondition (and (mixed ?e) (absent ?t))\n    :effect (and (present ?t))\n  )\n(:action transfer-to-storage\n    :parameters (?e - entity ?c - container)\n    :precondition (inContainer ?e ?c)\n    :effect (and (empty ?c))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Prevent Cysts\n\nSteps:\n- reat_small_scysts person_treated\n- visibility agent1 lump1 wrist1\n- check_knee_is_injured you\n\nDescriptions:\n- Use heat to treat small skin cysts.\n- Visit your doctor if you have a lump on your hand or wrist.\n- Check for a Bakerâ€™s cyst if your knee hurts.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Learn Photography by Shooting Macro.\n- create_small_studio studio\n- diffuse_light light\n- have_appropriate_reflectors reflector\n- have_closeup_lens lens\n- start_experimenting experiment\n\nDescriptions:\n- Create a very small studio.\n- Have the appropriate sized reflectors.\n- Have a closeup lens.\n- Again, they don't need to be that big, but big enough to diffuse light for your small subject.\n- Start experimenting.\n\nPDDL Actions:\n(:action create_small_studio\n    :parameters (?s - entity)\n    :precondition (and)\n    :effect (and (studio_setup ?s))\n  )\n(:action have_appropriate_reflectors\n    :parameters (?r - entity)\n    :precondition (and)\n    :effect (and (reflector_appropriate ?r))\n  )\n(:action have_closeup_lens\n    :parameters (?l - entity)\n    :precondition (and)\n    :effect (and (lens_closeup ?l))\n  )\n(:action diffuse_light\n    :parameters (?li - entity)\n    :precondition (and)\n    :effect (and (light_diffused ?li))\n  )\n(:action start_experimenting\n    :parameters (?e - entity)\n    :precondition (and)\n    :effect (and (experiment_started ?e))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Shrink Fibroids Naturally\n\nSteps:\n- get_vaginal_bleed npc\n- fill_bottle npc bathroom\n- get_medicare npc\n- listen_to_converter npc\n- shrink_fibroids you\n- shrink_fibroids npc\n- listen_to_fibroids npc\n\nDescriptions:\n- Get immediate care for severe vaginal bleeding or sharp abdominal pain.\n- See your doctor for persistent pain, trouble emptying your bladder, or heavy periods.\n- Ask your doctor if medication can help you deal with painful fibroids.\n- Discuss hormonal contraceptives as a way to reduce vaginal bleeding.\n- Ask about MRI-guided focused ultrasound surgery (FUS) to shrink your fibroids.\n- Consider minimally-invasive procedures to shrink painful fibroids.\n- Consider surgery if your fibroids are interfering with your life.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Treat a Cyst\n\nSteps:\n- call_doctor npc philly\n- ask_doctor_about_removation you\n- listen_to_shelter npc\n- determine if removal_of_skin_cyst npc\n- remov_of_cyst npc\n- get_eraser npc\n- get_treatment_for_gangs_cage npc\n- treat_gastro_stratified person_treated\n- understand_treatment_of_testicular_surstick npc\n\nDescriptions:\n- Know when to call a doctor.\n- Ask your doctor about removal.\n- Evaluate your surgical options.\n- Determine if removal of a skin cyst is necessary.\n- Determine if removal of a cyst on the breast is necessary.\n- Consult with a dermatologist for treatment of cystic acne.\n- Seek treatment for a ganglion cyst.\n- Treat a Bartholin gland cyst.\n- Understand treatment of a testicular cyst.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is make_papyrus.\n- cut_stalks npc knife papyrus_plant papyrus_stalks\n- cut_strips npc papyrus_strips papyrus_stalks knife\n- soak_strips npc water papyrus_strips\n- roll_strips npc rolling_pin papyrus_strips\n- weave_strips npc papyrus_strips\n- bundle_strips npc papyrus_strips wooden_boards linen_sheets\n- cut_sheet npc papyrus_strips knife papyrus\n\nDescriptions:\n- Cut the stalks. About 12 inches (30 cm) of papyrus plant will make a large piece of paper that will be nearly 24 inches (61 cm) in length. Cut off as many stalks as you will need to make the amount of paper you want. The cuts must be diagonally made. Then, cut the tips of the papyrus. You will not use the tips, which are the thinner, grass-like end of the plant.\n- Weave the strips together. Lay the strips on the cloth. Get a dry sheet of linen cloth or felt. Then, begin to weave them together. You want to create 2 layers of strips, with the top layer strips being perpendicular to the bottom layer strips. It should resemble a placemat. The strips should slightly overlap one another to prevent the papyrus from falling apart later.\n- Roll the excess water and sugar out of the plant. Grab a rolling pin and use it to roll the strips flat. The rolling pin should be squeezing the water out of them and flattening the strips into sheets.\n- Cut the paper. The sheet may be larger than you want when it is finished. Use a razor, scissors, or paper cutter to cut the papyrus into smaller sheets. Measure the sizes you are cutting so you will have multiple sheets of the same size.\n- Cut up the inner portion into strips. Use the knife you used to cut off the outer portion to cut the inner layers of the papyrus plant (pith) into thin strips. Hold the plant in your hand and cut towards you vertically. Make sure that all of the strips have the same size and thickness.\n- Place the bundle between 2 wooden boards. Make sure that the wooden boards are somewhat heavy. The pressure is necessary to flatten the papyrus strips together. Once the strips have been placed between the boards, press them together. Lay the sandwiched papyrus sheet on a flat surface and allow the wooden boards to flatten the sheet using gravity.\n\nPDDL Actions:\n(:action roll_strips; roll the excess water and sugar out of the strips to dry them\n    :parameters (?p - player ?rolling_pin - rolling_pin ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?rolling_pin) (inventory ?p ?papyrus_strips) (soaked ?papyrus_strips))\n    :effect (dried ?papyrus_strips)\n  )\n(:action soak_strips; place papyrus strips in water and let them soak\n    :parameters (?p - player ?water - water ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?water) (inventory ?p ?papyrus_strips))\n    :effect (soaked ?papyrus_strips)\n  )\n(:action weave_strips; weave the dried papyrus strips into a lattice\n    :parameters (?p - player ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?papyrus_strips) (dried ?papyrus_strips))\n    :effect (woven ?papyrus_strips)\n  )\n(:action bundle_strips; bundle the woven strips between linen sheets and wooden boards\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?wooden_boards - wooden_boards ?linen_sheets - linen_sheets)\n    :precondition (and (inventory ?p ?papyrus_strips) (woven ?papyrus_strips) (inventory ?p ?wooden_boards) (inventory ?p ?linen_sheets))\n    :effect (finished ?papyrus_strips)\n  )\n(:action cut_sheet; the finished sheet is cut to size to complete the papyrus\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?knife - knife ?papyrus - papyrus)\n    :precondition (and (inventory ?p ?papyrus_strips) (finished ?papyrus_strips) (inventory ?p ?knife))\n    :effect (and (inventory ?p ?papyrus) (not (inventory ?p ?papyrus_strips)))\n  )\n)\n(:action cut_stalks; cut papyrus plant into stalks\n    :parameters (?p - player ?knife - knife ?papyrus_plant - papyrus_plant ?papyrus_stalks - papyrus_stalks)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_plant))\n    :effect (and (inventory ?p ?papyrus_stalks) (not (inventory ?p ?papyrus_plant)))\n  )\n(:action cut_strips; cut papyrus stalks into strips\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?papyrus_stalks - papyrus_stalks ?knife - knife)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_stalks))\n    :effect (and (inventory ?p ?papyrus_strips) (not (inventory ?p ?papyrus_stalks)))\n  )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Shrink Hemorrhoids\n\nSteps:\n- get_medical_attached_with_lemon npc\n- listen_to_doctor you doctor\n- be_injured person bathroom npc\n\nDescriptions:\n- Seek medical attention for severe hemorrhoids.\n- Discuss non-surgical treatment options with your doctor.\n- Consider having a hemorrhoidectomy.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Grow a Rose Bush from Rose Bush Cuttings.\n- prepare_area clipping\n- take_cutting clipping\n- moisten_clipping clipping\n- plant_cutting clipping\n\nDescriptions:\n- Prepare the pot or area in your yard where you plan to plant your clipping.\n- Take a cutting from the rose bush you would like to grow your new bush from.\n- Moisten the part of the clipping that you just scraped and dip it into rooting hormone.\n- Immediately plant the cutting.\n\nPDDL Actions:\n(:action prepare_area\n    :parameters (?e - entity)\n    :precondition (not (prepared ?e))\n    :effect (prepared ?e)\n  )\n(:action take_cutting\n    :parameters (?e - entity)\n    :precondition (and (prepared ?e) (not (cut ?e)))\n    :effect (cut ?e)\n  )\n(:action moisten_clipping\n    :parameters (?e - entity)\n    :precondition (and (cut ?e) (not (moistened ?e)))\n    :effect (moistened ?e)\n  )\n(:action plant_cutting\n    :parameters (?e - entity)\n    :precondition (and (moistened ?e) (not (planted ?e)))\n    :effect (planted ?e)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Shrink Ovarian Cysts\n\nSteps:\n- check_symptoms npc\n- remov_surgery npc\n- ask_about_hormonal_treat npc\n\nDescriptions:\n- See your doctor if you have symptoms of an ovarian cyst.\n- Discuss surgery to remove large, painful, or complicated cysts.\n- Ask about using hormone treatments to prevent future cysts.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]