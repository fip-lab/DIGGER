[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Potato Ribbons.\n- wash_potatoes potato1 sink1 cloth1\n- wash_potatoes potato2 sink1 cloth1\n- cut_potatoes potato2 cloth1\n- cut_potatoes potato1 cloth1\n- drain_potatoes potato2 cloth1\n- drain_potatoes potato1 cloth1\n- fry_potatoes potato2 pan1 stove1\n- fry_potatoes potato1 pan1 stove1\n- serve_potatoes potato2 dish1\n- serve_potatoes potato1 dish1\n\nDescriptions:\n- Wash especially well if you intend to keep the peel intact.\n- Cut round and round, keeping the peel as thin as possible as you go.\n- Drain the potatoes dry on a clean cloth.\n- Fry the ribbons in deep, hot fat.\n- Serve.\n\nPDDL Actions:\n(:action wash_potatoes\n    :parameters (?potato - ingredient ?sink - utensil ?cloth - utensil)\n    :precondition (and\n      (at ?potato kitchen_counter)\n      (at ?sink kitchen_sink)\n      (at ?cloth kitchen_counter)\n      (clean ?sink)\n    )\n    :effect (and\n      (washed ?potato)\n      (dirty ?sink)\n    )\n  )\n\n  ;; 动作2：切土豆\n(:action cut_potatoes\n    :parameters (?potato - ingredient ?peeler - utensil)\n    :precondition (and\n      (washed ?potato)\n      (at ?potato kitchen_counter)\n      (at ?peeler kitchen_counter)\n      (clean ?peeler)\n    )\n    :effect (and\n      (peeled ?potato)\n      (cut ?potato)\n      (dirty ?peeler)\n    )\n  )\n\n  ;; 动作3：沥干土豆\n(:action drain_potatoes\n    :parameters (?potato - ingredient ?cloth - utensil)\n    :precondition (and\n      (cut ?potato)\n      (at ?potato kitchen_counter)\n      (at ?cloth kitchen_counter)\n      (clean ?cloth)\n    )\n    :effect (and\n      (drained ?potato)\n      (dirty ?cloth)\n    )\n  )\n\n  ;; 动作4：炸土豆丝\n(:action fry_potatoes\n    :parameters (?potato - ingredient ?pan - utensil ?stove - appliance)\n    :precondition (and\n      (drained ?potato)\n      (at ?pan kitchen_stove)\n      (at ?stove kitchen_stove)\n      (clean ?pan)\n      (heated ?stove)\n      (has_oil ?stove)\n    )\n    :effect (and\n      (fried ?potato)\n      (dirty ?pan)\n    )\n  )\n\n  ;; 动作5：上菜\n(:action serve_potatoes\n    :parameters (?potato - ingredient ?dish - dish)\n    :precondition (and\n      (fried ?potato)\n      (at ?dish dining_table)\n    )\n    :effect (and\n      (in_dish ?potato ?dish)\n      (not (fried ?potato))\n    )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Freeze Mashed Potatoes\n\nSteps:\n- use_potatoes potato1 mixing_bowl1 pot1\n- use_full_of_milk milk_and_butter mixing_bowl\n- peel potato peeler\n- boil_wicks wick1\n- mix_mixture mixing_bowl canola_oil table\n- cool_potatoes potato1 oven1\n\nDescriptions:\n- Use a good mashing variety of potato.\n- Use full fat milk and butter when mashing.\n- Peel the potatoes.\n- Boil to preference.\n- Mash.\n- Allow the mashed potatoes to cool thoroughly.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is get_coconut_meat_with_oven.\n- go west npc counter fridge\n- get coconut npc fridge\n- go east npc fridge counter\n- go north npc counter rack\n- get knife npc rack\n- get towel npc rack\n- pierce npc\n- drain npc rack\n- go south npc rack counter\n- get bag npc counter\n- go south npc counter oven\n- turn_on_oven npc\n- burn_item npc\n- turn_off_oven npc\n- go north npc oven counter\n- wrap_coconut npc bag\n- smash_with_hands npc\n- drop towel npc counter\n- unwrap_coconut npc bag\n- separate npc bag\n- peel npc\n\nDescriptions:\n- Whack the wrapped coconut with a hammer, or bash it against a hard surface. With the coconut still wrapped in the towel, use a hammer or a mallet to repeatedly and forcefully whack the coconut. Turn the coconut as you hammer it, in order to strike it from multiple angles. Hammer it until you feel it break open beneath the towel.\n- Use a knife to separate the meat from the shell. Remove the coconut pieces from the towel. Take each piece, and wedge a knife between the shell and the white meat of the coconut to carefully separate the two. Then, use the knife (or a vegetable peeler) or remove the fibrous layer that might still be clinging to the outside of the meat.\n- Wrap the mature coconut in a kitchen towel. Place the coconut in the center of the towel, and gather the corners of the towel together to form a pouch. This will keep coconut bits from flying when you go to smash it with a hammer.\n- Use a knife to shave off the tender white casing. Position your young coconut on a cutting board, and use a sharp cleaver or a sturdy chef’s knife to slice off the outer casing. Carve at an angle, as if you were removing the skin from an apple, until you expose the hard inner shell. Work to expose as much of the shell as possible.\n- Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n- Remove the coconut and wrap it in a towel to cool. Use oven mitts to retrieve the coconut from the oven or microwave, and allow it to cool for about 5 minutes while wrapped in a towel. Doing this ensures you don’t have hot coconut bits flying everywhere when you go to smash it in the next step.\n\nPDDL Actions:\n(:action turn_off_oven\n      :parameters (?p - player)\n      :precondition (and (at ?p oven) (on oven))\n      :effect (not (on oven))\n   )\n(:action drop\n      :parameters (?i - item ?p - player ?l - location)\n      :precondition (and (at ?p ?l) (inventory ?p ?i))\n      :effect (and (at ?i ?l) (not (inventory ?p ?i)))\n   )\n(:action pierce ; pierce the coconut\n      :parameters (?p - player)\n      :precondition (and (inventory ?p coconut) (not(pierced coconut)) (inventory ?p knife))\n      :effect (pierced coconut)\n   )\n(:action unwrap_coconut\n      :parameters (?p - player ?w - wrappable)\n      :precondition (and (inventory ?p coconut) (wrapped coconut) (wrapped_with coconut ?w))\n      :effect (and (not (wrapped coconut)) (not(wrapped_with coconut ?w)) (inventory ?p ?w))\n   )\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action drain\n      :parameters (?p - player ?l - location)\n      :precondition (and (inventory ?p coconut) (pierced coconut) (not(smashed coconut)) (not(burnt coconut)) (at glass ?l) (at ?p ?l))\n      :effect (and (inventory ?p coconut_juice) (empty coconut))\n   )\n(:action turn_on_oven\n      :parameters (?p - player)\n      :precondition (and (at ?p oven) (not (on oven)))\n      :effect (on oven)\n   )\n(:action wrap_coconut\n      :parameters (?p - player ?w - wrappable)\n      :precondition (and (inventory ?p coconut) (not(wrapped coconut)) (not(smashed coconut)) (inventory ?p ?w))\n      :effect (and (wrapped coconut) (wrapped_with coconut ?w) (not(inventory ?p ?w)))\n   )\n(:action smash_with_hands\n      :parameters (?p - player)\n      :precondition (and (inventory ?p coconut) (wrapped_with coconut bag) (not(smashed coconut)) (not(on oven)) (burnt coconut) (at ?p counter))\n      :effect (smashed coconut)\n   )\n(:action separate\n      :parameters (?p - player ?w - wrappable)\n      :precondition (and (inventory ?p coconut) (inventory ?p knife) (not (wrapped coconut)) (smashed coconut) (at towel counter) (at ?p counter))\n      :effect (and (not (inventory ?p coconut)) (inventory ?p coconut_shell) (inventory ?p coconut_meat))\n   )\n(:action burn_item\n      :parameters (?p - player)\n      :precondition (and (at ?p oven) (on oven) (inventory ?p coconut) (empty coconut) (not(burnt coconut)) (not(smashed coconut)))\n      :effect (burnt coconut)\n   )\n(:action peel\n      :parameters (?p - player)\n      :precondition (and (inventory ?p coconut_meat) (inventory ?p knife) (not(peeled coconut_meat)) (at towel counter) (at ?p counter))\n      :effect (peeled coconut_meat)\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Use Goat Cheese\n\nSteps:\n- default_to_garnish goat cheese mixing_bowl\n- pick_gamel goat_cheese cheese\n- use_as_appropriate_purpose goat_cheese\n- store-gamel goat cheese mixing_bowl\n\nDescriptions:\n- Default to fresh goat cheese for spreading.\n- Opt for aged goat cheeses for firmness.\n- Use soft-ripened goat cheeses for specific purposes.\n- Store goat cheese according to the style.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is make_papyrus.\n- cut_stalks npc knife papyrus_plant papyrus_stalks\n- cut_strips npc papyrus_strips papyrus_stalks knife\n- soak_strips npc water papyrus_strips\n- roll_strips npc rolling_pin papyrus_strips\n- weave_strips npc papyrus_strips\n- bundle_strips npc papyrus_strips wooden_boards linen_sheets\n- cut_sheet npc papyrus_strips knife papyrus\n\nDescriptions:\n- Cut the stalks. About 12 inches (30 cm) of papyrus plant will make a large piece of paper that will be nearly 24 inches (61 cm) in length. Cut off as many stalks as you will need to make the amount of paper you want. The cuts must be diagonally made. Then, cut the tips of the papyrus. You will not use the tips, which are the thinner, grass-like end of the plant.\n- Weave the strips together. Lay the strips on the cloth. Get a dry sheet of linen cloth or felt. Then, begin to weave them together. You want to create 2 layers of strips, with the top layer strips being perpendicular to the bottom layer strips. It should resemble a placemat. The strips should slightly overlap one another to prevent the papyrus from falling apart later.\n- Roll the excess water and sugar out of the plant. Grab a rolling pin and use it to roll the strips flat. The rolling pin should be squeezing the water out of them and flattening the strips into sheets.\n- Cut the paper. The sheet may be larger than you want when it is finished. Use a razor, scissors, or paper cutter to cut the papyrus into smaller sheets. Measure the sizes you are cutting so you will have multiple sheets of the same size.\n- Cut up the inner portion into strips. Use the knife you used to cut off the outer portion to cut the inner layers of the papyrus plant (pith) into thin strips. Hold the plant in your hand and cut towards you vertically. Make sure that all of the strips have the same size and thickness.\n- Place the bundle between 2 wooden boards. Make sure that the wooden boards are somewhat heavy. The pressure is necessary to flatten the papyrus strips together. Once the strips have been placed between the boards, press them together. Lay the sandwiched papyrus sheet on a flat surface and allow the wooden boards to flatten the sheet using gravity.\n\nPDDL Actions:\n(:action roll_strips; roll the excess water and sugar out of the strips to dry them\n    :parameters (?p - player ?rolling_pin - rolling_pin ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?rolling_pin) (inventory ?p ?papyrus_strips) (soaked ?papyrus_strips))\n    :effect (dried ?papyrus_strips)\n  )\n(:action soak_strips; place papyrus strips in water and let them soak\n    :parameters (?p - player ?water - water ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?water) (inventory ?p ?papyrus_strips))\n    :effect (soaked ?papyrus_strips)\n  )\n(:action weave_strips; weave the dried papyrus strips into a lattice\n    :parameters (?p - player ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?papyrus_strips) (dried ?papyrus_strips))\n    :effect (woven ?papyrus_strips)\n  )\n(:action bundle_strips; bundle the woven strips between linen sheets and wooden boards\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?wooden_boards - wooden_boards ?linen_sheets - linen_sheets)\n    :precondition (and (inventory ?p ?papyrus_strips) (woven ?papyrus_strips) (inventory ?p ?wooden_boards) (inventory ?p ?linen_sheets))\n    :effect (finished ?papyrus_strips)\n  )\n(:action cut_sheet; the finished sheet is cut to size to complete the papyrus\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?knife - knife ?papyrus - papyrus)\n    :precondition (and (inventory ?p ?papyrus_strips) (finished ?papyrus_strips) (inventory ?p ?knife))\n    :effect (and (inventory ?p ?papyrus) (not (inventory ?p ?papyrus_strips)))\n  )\n)\n(:action cut_stalks; cut papyrus plant into stalks\n    :parameters (?p - player ?knife - knife ?papyrus_plant - papyrus_plant ?papyrus_stalks - papyrus_stalks)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_plant))\n    :effect (and (inventory ?p ?papyrus_stalks) (not (inventory ?p ?papyrus_plant)))\n  )\n(:action cut_strips; cut papyrus stalks into strips\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?papyrus_stalks - papyrus_stalks ?knife - knife)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_stalks))\n    :effect (and (inventory ?p ?papyrus_strips) (not (inventory ?p ?papyrus_stalks)))\n  )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make Dinosaur Eggs\n\nSteps:\n- use_coffee_ground ground_floor pot\n- make_fizzing_dough mixing_bowl\n- shape_to_shape npc\n- free_dinosaur_egg npc\n\nDescriptions:\n- Use coffee grounds instead of dirt.\n- Make fizzing dough.\n- Shape the eggs using plastic eggs.\n- Make frozen dinosaur eggs.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Seasoned Salt.\n- mix-ingredients celery_salt\n- grind-ingredients celery_salt mortar_and_pestle\n- season-food celery_salt salads\n\nDescriptions:\n- Mix the ingredients together thoroughly.\n- Pour into an air-tight container with a lid.\n- It goes well in dips, salad dressings, soups and on sandwiches.\n- Grind the ingredients together in a mortar and pestle.\n- Transfer to a storage container as needed.\n\nPDDL Actions:\n(:action mix-ingredients\n    :parameters (?e - entity)\n    :precondition (and (stratified ?e) (separate ?e))\n    :effect (and (mixed ?e) (not (stratified ?e)) (not (separate ?e)))\n  )\n(:action pour-into-container\n    :parameters (?e - entity ?c - container)\n    :precondition (and (mixed ?e) (empty ?c))\n    :effect (and (inContainer ?e ?c) (full ?c) (onCounter ?c) (not (empty ?c)))\n  )\n(:action season-food\n    :parameters (?e - entity ?f - food)\n    :precondition (mixed ?e)\n    :effect (and (flavorful ?f) (not (plain ?f)))\n  )\n(:action grind-ingredients\n    :parameters (?e - entity ?t - tool)\n    :precondition (and (mixed ?e) (absent ?t))\n    :effect (and (present ?t))\n  )\n(:action transfer-to-storage\n    :parameters (?e - entity ?c - container)\n    :precondition (inContainer ?e ?c)\n    :effect (and (empty ?c))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Use Egg Yolks\n\nSteps:\n- save-yolks container\n- free_eraser npc\n- cure-eraser egg yolks salt\n\nDescriptions:\n- Put your yolks in an airtight container to save for later.\n- Freeze your egg yolks with a simple syrup so they don’t crystalize.\n- Cure your egg yolks in salt.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is catch_cook_fish.\n- go west person beach ocean\n- get rock person ocean\n- go east person ocean beach\n- get tinder person beach\n- go east person beach jungle\n- chop_wood person jungle wood\n- get vines person jungle\n- carve_groove person wood rock\n- make_weapon rock person wood vines spear\n- light_fire person wood beach tinder fire\n- hunt_fish person river spear fish\n- cook_fish person fish fire beach\n\nDescriptions:\n- Heating the water above 185° F (85° C) for three minutes will kill all pathogens in your water.\n- Hunt for fish, insects, and small animals for food. The protein and nutrients from meat and fish will give you energy. Mollusks, clams, oysters, crabs, muscles, and fish are all things that you may be able to find in the shallow waters surrounding or on an island.\n\nPDDL Actions:\n(:action get_water ; get water from a location that has a water source like a lake.\n      :parameters (?p - player ?loc - location ?water - water) \n      :precondition (and (at ?p ?loc) (has_water_source ?loc))\n      :effect (and (inventory ?p ?water) (not (treated ?water)))\n   )\n(:action hunt_fish ; catch fish with spear\n      :parameters (?p - player ?loc - location ?spear - spear ?fish - fish) \n      :precondition (and (inventory ?p ?spear) (has_fish ?loc))\n      :effect (and (inventory ?p ?fish))\n   )\n(:action cook_fish ; cook fish \n      :parameters (?p - player ?fish - fish ?fire - fire ?loc - location) \n      :precondition (and (inventory ?p ?fish) (at ?fire ?loc))\n      :effect (and (cooked ?fish))\n   )   \n)\n(:action make_weapon ; create a spear to hunt fish \n      :parameters (?rock - rock ?p - player ?wood - wood ?vines - vines ?spear - spear) \n      :precondition (and (inventory ?p ?rock) (inventory ?p ?vines) (inventory ?p ?wood))\n      :effect (and (inventory ?p ?spear))\n   )\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action chop_wood ; chop down wood from a nearby tree.\n      :parameters (?p - player ?loc - location ?wood - wood) \n      :precondition (and (at ?p ?loc) (has_wood ?loc))\n      :effect (and (inventory ?p ?wood) (not (groove ?wood)))\n   )\n(:action carve_groove ; create a grove in wood to light flint.\n      :parameters (?p - player ?wood - wood ?rock - rock) \n      :precondition (and (inventory ?p ?wood) (inventory ?p ?rock) (not (groove ?wood)))\n      :effect (and (groove ?wood))\n   )\n(:action light_fire ; light a fire\n      :parameters (?p - player ?wood - wood ?loc - location ?tinder - tinder ?fire - fire) \n      :precondition (and (inventory ?p ?wood) (inventory ?p ?tinder) (can_light_fire ?loc) (groove ?wood))\n      :effect (and (at ?fire ?loc) (not (inventory ?wood)) (not (groove ?wood)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Cook Frozen Fish\n\nSteps:\n- learn_fish_cooking techniques\n- get_ideas npc spear fish\n- treat_new_member_with_salt marshmallow_cream\n- learn_new_recipe npc kitchen\n\nDescriptions:\n- Learn basic fish-cooking techniques.\n- Get ideas for your specific type of fish.\n- Try new marinades and seasoning.\n- Learn unique recipes.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Carob Fruit Balls.\n- mix_ingredients user1 mixing_bowl1 spoon1 carob1 carob1 carob1 carob1\n- roll_into_balls user1 mixing_bowl1 spoon1\n- freeze_balls user1 mixing_bowl1 freezer1\n- serve_balls user1 mixing_bowl1 plate1\n\nDescriptions:\n- Mix all of the ingredients together.\n- Roll into small balls.\n- Place in the freezer for half an hour.\n- Serve.\n\nPDDL Actions:\n(:action mix_ingredients\n    :parameters (?p - person ?bowl - container ?spoon - tool\n                    ?ing1 - ingredient ?ing2 - ingredient\n                    ?ing3 - ingredient ?ing4 - ingredient)\n    :precondition (and\n      (owned ?p ?bowl) (clean ?bowl) (at ?bowl kitchen_counter1)\n      (owned ?p ?spoon) (clean ?spoon)\n      (owned ?p ?ing1) (clean ?ing1) (at ?ing1 kitchen_counter1)\n      (owned ?p ?ing2) (clean ?ing2) (at ?ing2 kitchen_counter1)\n      (owned ?p ?ing3) (clean ?ing3) (at ?ing3 kitchen_counter1)\n      (owned ?p ?ing4) (clean ?ing4) (at ?ing4 kitchen_counter1)\n    )\n    :effect (and\n      (mixed ?bowl)\n      (dirty ?bowl)\n      (dirty ?spoon)\n      (in ?ing1 ?bowl)\n      (in ?ing2 ?bowl)\n      (in ?ing3 ?bowl)\n      (in ?ing4 ?bowl)\n    )\n  )\n\n  ;; 动作2：将混合物揉成小球\n(:action roll_into_balls\n    :parameters (?p - person ?bowl - container ?spoon - tool)\n    :precondition (and\n      (owned ?p ?bowl) (mixed ?bowl) (at ?bowl kitchen_counter1)\n      (owned ?p ?spoon) (clean ?spoon)\n    )\n    :effect (and\n      (rolled ?bowl)\n      (dirty ?spoon)\n    )\n  )\n\n  ;; 动作3：将小球放入冰箱冷冻\n(:action freeze_balls\n    :parameters (?p - person ?bowl - container ?freezer - appliance)\n    :precondition (and\n      (owned ?p ?bowl) (rolled ?bowl) (at ?bowl kitchen_counter1)\n      (owned ?p ?freezer) (at ?freezer kitchen_counter1)\n    )\n    :effect (and\n      (frozen ?bowl)\n      (at ?bowl freezer_location)\n    )\n  )\n\n  ;; 动作4：上桌食用\n(:action serve_balls\n    :parameters (?p - person ?bowl - container ?plate - container)\n    :precondition (and\n      (owned ?p ?bowl) (frozen ?bowl) (at ?bowl freezer_location)\n      (owned ?p ?plate) (at ?plate dining_table1)\n    )\n    :effect (and\n      (served ?bowl)\n      (at ?bowl dining_table1)\n    )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Freeze Meatballs\n\nSteps:\n- cook_meatballs velveeta\n- cool_meatballs velveeta\n- free_meatballs velveeta\n- cook npc\n\nDescriptions:\n- Cook the meatballs.\n- Allow the meatballs to cool.\n- Decide where you'd like to freeze the meatballs.\n- Know how to reheat the cooked meatballs.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean Chicken Livers\n\nSteps:\n- collect_livers npc\n- buy_livers livers\n- free_chicken livers freezer\n- chopped_lemon npc\n\nDescriptions:\n- Collect chicken livers from whole chickens.\n- Buy the livers from a butcher.\n- Clean and freeze the chicken livers.\n- Make chopped liver.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is eat_fish.\n- go east npc camp path\n- go east npc path riverside\n- go north npc riverside rainforest\n- get_wood npc wood rainforest\n- go south npc rainforest riverside\n- make_spear npc spear wood\n- make_drill npc wood drill\n- catch_fish npc spear fish riverside\n- make_fire npc drill riverside\n- cook_fish npc fish riverside\n- eat_fish npc fish\n\nDescriptions:\n- Build simple hole-in-the-ground traps to catch animals. Dig a hole in the ground and cover it with something like a large leaf. Put a piece of fruit in the middle as bait. When an animal comes to take the fruit, they will fall in the hole and you can kill it, skin it, and cook it to eat it.\n- Boil water from streams to kill any bacteria. Look for running streams to find fresh water. Filter out any particles through a sock, shirt, or other fabric, then start a fire and boil the water to kill bacteria that can make you sick.\n- The plastic sheet will accumulate condensation that will drip down the underside of the sheet and into the container. This water is distilled and safe to drink.\n- Make a 4-pronged bamboo spear to fish with. Find a 6-ft (1.8 m) stalk of bamboo and cut 4- 6 in (15.24 cm) slits into 1 end of it with a knife or sharp rock. Weave a piece of vine into the slits to separate the tip of the bamboo into 4 prongs and sharpen them with a knife or a sharp rock.\n- If you don’t have a water bottle or other container to collect water, try to find other natural containers in the jungle such as a coconut shell or piece of wood shaped like a bowl. You can also leave these items out when it rains to collect the fresh water.\n\nPDDL Actions:\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action eat_fish ; eat cooked fish \n      :parameters (?p - player ?fish - fish) \n      :precondition (and (inventory ?p ?fish) (cooked ?fish))\n      :effect (and (not (hungry ?p)))\n   )\n(:action make_fire ; make fire at a location\n      :parameters (?p - player ?drill - drill ?loc - location) \n      :precondition (and (inventory ?p ?drill) (at ?p ?loc) (not (has_fire ?loc)))\n      :effect (and (has_fire ?loc))\n   )\n(:action make_spear ; make a spear using wood to catch fish or defend against predators\n      :parameters (?p - player ?spear - spear ?wood - wood) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?spear)))\n      :effect (and (inventory ?p ?spear))\n   )\n(:action catch_fish ; catch a fish using spear\n      :parameters (?p - player ?spear - spear ?fish - fish ?loc - location) \n      :precondition (and (at ?p ?loc) (inventory ?p ?spear) (has_fish ?loc) (not (inventory ?p ?fish)))\n      :effect (and (inventory ?p ?fish))\n   )\n(:action make_drill ; make a drill using wood to create fire\n      :parameters (?p - player ?wood - wood ?drill - drill) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?drill)))\n      :effect (and (inventory ?p ?drill))\n   )\n(:action get_wood ; get wood from a location that has trees\n      :parameters (?p - player ?wood - wood ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?wood)))\n      :effect (and (inventory ?p ?wood))\n   )\n(:action cook_fish ; grill fish using fire\n      :parameters (?p - player ?fish - fish ?loc - location) \n      :precondition (and (inventory ?p ?fish) (at ?p ?loc) (has_fire ?loc) (not (cooked ?fish)))\n      :effect (and (cooked ?fish))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Store Egg Yolks\n\nSteps:\n- put_ingredients_in_container egg_yolks container\n- cover_yolks velveeta\n- put_lid_on_container container1 refrigerator1 container2\n\nDescriptions:\n- Put the egg yolks into a small container.\n- Cover the yolks with either water or a small amount of melted butter.\n- Put a lid on the container and place the container in the refrigerator.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Use up Sour Milk for Hen Food\n\nSteps:\n- gather_chicks npc\n- mix_sour_milk npc\n- make_sliplargerbead npc\n\nDescriptions:\n- Give chicks and hens sour milk to help them grow and make eggs.\n- Mix sour milk into the hen feed as an occasional protein supplement.\n- Make sour milk cheese to treat your hens.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Chinese Macaroni in Just 20 Minutes.\n- boil_macaroni macaroni pan kitchen\n- serve_macaroni macaroni plate dining_table pan\n\nDescriptions:\n- Boil macaroni in hot boiling water with some salt and oil for 10-15 minutes.\n- After the macaroni has boiled put under running water for about 15 seconds to prevent over cooking.\n- In another pan add some oil and toss in the macaroni.\n- Add salt, red chilli powder ,soy sauce,white vinegar and ajino moto.\n- Cook for some seconds.\n- Serve hot with chilled drinks.\n\nPDDL Actions:\n(:action boil_macaroni\n    :parameters (?macaroni - ingredient ?pot - container ?kitchen - location)\n    :precondition (and\n      (at ?macaroni ?kitchen)\n      (at ?pot ?kitchen)\n      (not (cooked ?macaroni))\n    )\n    :effect (and\n      (cooked ?macaroni)\n      (in ?macaroni ?pot)\n    )\n  )\n\n  ;; 动作2：冷却通心粉\n(:action cool_macaroni\n    :parameters (?macaroni - ingredient ?pot - container ?sink - location)\n    :precondition (and\n      (cooked ?macaroni)\n      (in ?macaroni ?pot)\n      (at ?pot ?sink)\n    )\n    :effect (and\n      (cooled ?macaroni)\n    )\n  )\n\n  ;; 动作3：在平底锅中翻炒通心粉\n(:action toss_macaroni_in_pan\n    :parameters (?macaroni - ingredient ?pan - container ?kitchen - location)\n    :precondition (and\n      (cooled ?macaroni)\n      (at ?pan ?kitchen)\n      (at ?macaroni ?kitchen)\n    )\n    :effect (and\n      (in ?macaroni ?pan)\n    )\n  )\n\n  ;; 动作4：加入调味料\n(:action add_seasoning\n    :parameters (?macaroni - ingredient ?pan - container)\n    :precondition (and\n      (in ?macaroni ?pan)\n      (not (seasoned ?macaroni))\n    )\n    :effect (and\n      (seasoned ?macaroni)\n    )\n  )\n\n  ;; 动作5：烹饪通心粉\n(:action cook_macaroni_in_pan\n    :parameters (?macaroni - ingredient ?pan - container)\n    :precondition (and\n      (in ?macaroni ?pan)\n      (seasoned ?macaroni)\n    )\n    :effect (and\n      (cooked ?macaroni)\n    )\n  )\n\n  ;; 动作6：盛盘并上桌\n(:action serve_macaroni\n    :parameters (?macaroni - ingredient ?plate - container ?dining_table - location ?pan - container)\n    :precondition (and\n      (cooked ?macaroni)\n      (in ?macaroni ?pan)\n      (at ?plate ?dining_table)\n    )\n    :effect (and\n      (in ?macaroni ?plate)\n      (served ?macaroni)\n    )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Use an Egg Boiler\n\nSteps:\n- clean_eraser user1 eraser1\n- clean_oven npc\n- drink_water person water\n\nDescriptions:\n- Determine the best way to clean your egg boiler between uses.\n- Clean the heating unit with a damp cloth and diluted vinegar mixture.\n- Use distilled water to extend the life of your egg boiler.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]