[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is remove_players.\n- gather_info npc ss\n- set_dress_code npc ss\n- set_meeting_location npc ss\n- create_name npc ss\n- create_secret npc ss\n- secret_society_is_ready npc ss\n- initiate_new_member npc adrian ss\n- initiate_new_member npc chris ss\n- initiate_new_member npc lara ss\n- teach_new_member_secret npc adrian ss\n- teach_new_member_secret adrian chris ss\n- teach_new_member_secret adrian lara ss\n- remove_member anish ss\n- check_if_cult adrian chris lara npc ss\n\nDescriptions:\n- Create a secret or a secret mission. A secret society must have something to protect.\n- Conduct a proper initiation for you and your closest friend. This should be done before you initiate others. That way, you are sure to come up with a good idea. The initiation is one of the most important parts of the society. It has to be something neither of you would do normally. Candle-lighting sets a serious and official tone, which is always good. Secret names are fun to have.\n- An important thing in secret societies is to meet in secret, that means meeting in a new place every time or having access to a secret room somewhere. You could even figure out a time to chat online.\n- Initiate well to do people in the society. In a school, initiate the most brilliant and enthusiastic students that seem like clique-material, and they will motivate and inspire others. But you don't want to have too many members. The more members, the less secret it is. Five to ten should be good.\n- There needs to be a way to get rid of someone if they become bad for the group or start talking—like blabbing the society's secret. If they do, pretend like that was never the secret, but immediately create a new secret. Put this in the rules.\n- Read a few clique-like books, like the clique series by Lisi Harrison, for some background information, although, maybe not so mean like they were.\n- Make a dress code. Most small secret societies use robes while large ones, like the Freemasons, have complex aprons.\n- Think of a name. You and your closest friend should discuss what your secret society should be called.\n\nPDDL Actions:\n(:action create_name ; create name for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_name ?sc)))\n      :effect (and (has_name ?sc))\n   )\n(:action create_secret ; create secret for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_secret ?sc)))\n      :effect (and (has_secret ?sc) (knows_secret ?p ?sc))\n   )\n(:action set_meeting_location ; determine a regular secret meeting location for the society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_location ?sc)))\n      :effect (and (has_location ?sc))\n   )\n(:action secret_society_is_ready ; check that all prequisites of the secret society are complete\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (not (society_is_ready ?sc)) (has_name ?sc) (has_dress_code ?sc) (has_location ?sc) (has_info ?p) (has_secret ?sc))\n      :effect (and (society_is_ready ?sc))\n   )\n(:action initiate_new_member ; add a new member to secret society\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (in ?p1 ?sc) (is_trusted ?p2 ?sc) (friends ?p1 ?p2) (not (in ?p2 ?sc)))\n      :effect (and (in ?p2 ?sc))\n   )\n(:action remove_member ; remove an existing society member due to untrustworthiness\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))\n      :effect (and (not (in ?p ?sc)))\n   )\n(:action teach_new_member_secret ; once a new member becomes trustworthy, teach them the secret\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (in ?p1 ?sc) (in ?p2 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (knows_secret ?p1 ?sc) (not (knows_secret ?p2 ?sc)))\n      :effect (and (knows_secret ?p2 ?sc))\n   )\n(:action check_if_cult ; check if the group is large enough for a cult\n      :parameters (?p1 - player ?p2 - player ?p3 - player ?p4 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (not (equals ?p1 ?p2)) (not (equals ?p1 ?p3)) (not (equals ?p1 ?p4)) (not (equals ?p2 ?p3)) (not (equals ?p2 ?p4)) (not (equals ?p3 ?p4)) (in ?p1 ?sc) (in ?p2 ?sc) (in ?p3 ?sc) (in ?p4 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (is_trusted ?p3 ?sc) (is_trusted ?p4 ?sc) (knows_secret ?p1 ?sc) (knows_secret ?p2 ?sc) (knows_secret ?p3 ?sc) (knows_secret ?p4 ?sc))\n      :effect (and (is_cult ?sc))\n   )\n)\n(:action set_dress_code ; determines the dress code for the secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_dress_code ?sc)))\n      :effect (and (has_dress_code ?sc))\n   )\n(:action gather_info ; read books to gather information on how to create a secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (has_info ?p)))\n      :effect (and (has_info ?p))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Lace Candleholder\n\nSteps:\n- wipe_glass_with_rubbing_alcohol glass_filled\n- wrap_strips npc\n- wrap_lace velveeta\n- take_candle_holder_to_well_ventilated area\n- coat_candle_with_painting velveeta\n- dry_painting velveeta\n- use_candle_holder user1 candle1 lamp1\n\nDescriptions:\n- Wipe down a glass candleholder with rubbing alcohol.\n- Cut a strip of lace long enough to wrap around your candleholder.\n- Wrap the lace tightly around the candleholder and secure it with tape.\n- Take the candleholder to a well-ventilated area.\n- Coat the candleholder with spray paint.\n- Allow the paint to dry before removing the lace.\n- Use the candleholder.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is remove_players.\n- gather_info npc ss\n- set_dress_code npc ss\n- set_meeting_location npc ss\n- create_name npc ss\n- create_secret npc ss\n- secret_society_is_ready npc ss\n- initiate_new_member npc adrian ss\n- initiate_new_member npc chris ss\n- initiate_new_member npc lara ss\n- teach_new_member_secret npc adrian ss\n- teach_new_member_secret adrian chris ss\n- teach_new_member_secret adrian lara ss\n- remove_member anish ss\n- check_if_cult adrian chris lara npc ss\n\nDescriptions:\n- Create a secret or a secret mission. A secret society must have something to protect.\n- Conduct a proper initiation for you and your closest friend. This should be done before you initiate others. That way, you are sure to come up with a good idea. The initiation is one of the most important parts of the society. It has to be something neither of you would do normally. Candle-lighting sets a serious and official tone, which is always good. Secret names are fun to have.\n- An important thing in secret societies is to meet in secret, that means meeting in a new place every time or having access to a secret room somewhere. You could even figure out a time to chat online.\n- Initiate well to do people in the society. In a school, initiate the most brilliant and enthusiastic students that seem like clique-material, and they will motivate and inspire others. But you don't want to have too many members. The more members, the less secret it is. Five to ten should be good.\n- There needs to be a way to get rid of someone if they become bad for the group or start talking—like blabbing the society's secret. If they do, pretend like that was never the secret, but immediately create a new secret. Put this in the rules.\n- Read a few clique-like books, like the clique series by Lisi Harrison, for some background information, although, maybe not so mean like they were.\n- Make a dress code. Most small secret societies use robes while large ones, like the Freemasons, have complex aprons.\n- Think of a name. You and your closest friend should discuss what your secret society should be called.\n\nPDDL Actions:\n(:action create_name ; create name for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_name ?sc)))\n      :effect (and (has_name ?sc))\n   )\n(:action create_secret ; create secret for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_secret ?sc)))\n      :effect (and (has_secret ?sc) (knows_secret ?p ?sc))\n   )\n(:action set_meeting_location ; determine a regular secret meeting location for the society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_location ?sc)))\n      :effect (and (has_location ?sc))\n   )\n(:action secret_society_is_ready ; check that all prequisites of the secret society are complete\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (not (society_is_ready ?sc)) (has_name ?sc) (has_dress_code ?sc) (has_location ?sc) (has_info ?p) (has_secret ?sc))\n      :effect (and (society_is_ready ?sc))\n   )\n(:action initiate_new_member ; add a new member to secret society\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (in ?p1 ?sc) (is_trusted ?p2 ?sc) (friends ?p1 ?p2) (not (in ?p2 ?sc)))\n      :effect (and (in ?p2 ?sc))\n   )\n(:action remove_member ; remove an existing society member due to untrustworthiness\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))\n      :effect (and (not (in ?p ?sc)))\n   )\n(:action teach_new_member_secret ; once a new member becomes trustworthy, teach them the secret\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (in ?p1 ?sc) (in ?p2 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (knows_secret ?p1 ?sc) (not (knows_secret ?p2 ?sc)))\n      :effect (and (knows_secret ?p2 ?sc))\n   )\n(:action check_if_cult ; check if the group is large enough for a cult\n      :parameters (?p1 - player ?p2 - player ?p3 - player ?p4 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (not (equals ?p1 ?p2)) (not (equals ?p1 ?p3)) (not (equals ?p1 ?p4)) (not (equals ?p2 ?p3)) (not (equals ?p2 ?p4)) (not (equals ?p3 ?p4)) (in ?p1 ?sc) (in ?p2 ?sc) (in ?p3 ?sc) (in ?p4 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (is_trusted ?p3 ?sc) (is_trusted ?p4 ?sc) (knows_secret ?p1 ?sc) (knows_secret ?p2 ?sc) (knows_secret ?p3 ?sc) (knows_secret ?p4 ?sc))\n      :effect (and (is_cult ?sc))\n   )\n)\n(:action set_dress_code ; determines the dress code for the secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_dress_code ?sc)))\n      :effect (and (has_dress_code ?sc))\n   )\n(:action gather_info ; read books to gather information on how to create a secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (has_info ?p)))\n      :effect (and (has_info ?p))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean a Candle Jar\n\nSteps:\n- free_candle_holder user1 jar1 candle1\n- free_candle_holder user1 jar1 candle1\n- pop_wax npc\n- wash_mixture canola_oil glass_filled\n\nDescriptions:\n- Place the jar or candle holder in the freezer overnight.\n- Take the jar or candle holder out of the freezer the following day.\n- Use a knife to pop the wax out in one piece.\n- Wash the jar or candle holder in the dishwasher to complete the clean.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Candle in a Cup\n\nSteps:\n- get_teepee npc\n- buy_wicks wick1\n- cleaned_cup user1\n- plug_in_hot_glue_gun user1 hot_tool user2\n- secure_wick wick1\n- place_dip_in_hot_glue user1 hot_gems1\n- cut_wick wick1\n- place-wicks-in-container wax1 container1\n- add-scenting_sauce alice\n- pour_wand npc\n- straighten_wick wick1\n- clean_glass glass_filled\n- wait_for_wicks wick1\n- cut_wick wick1\n\nDescriptions:\n- Visit any thrift store, charity shop or bric-a-brac shop, to find old tea cups, eggs cups or coffee cups.\n- Go to the craft store to buy wax, wicks that you can cut to the right size and candle dyes or scents.\n- Clean your cups thoroughly.\n- Plug in your hot glue gun.\n- Secure your metal sustainer to your wick by squeezing it together with the metal, if it is not already attached.\n- Place a dab of hot glue in the center of your cup and press the metal sustainer and wick on top of it.\n- Cut the wick so that it is 2 inches (5 cm) above the top of the cup.\n- Place the microwaveable wax in a microwaveable container, like a plastic measuring cup, and heat it according to the package directions.\n- Add dye or scent if you choose.\n- Carefully pour the wax in the cup until it is 1/2 inch (1.27 cm) below the cups rim.\n- Straighten the wick immediately after pouring the wax.\n- Clean your receptacles of glass while they are still hot.\n- Wait for about an hour for the wax to dry.\n- Trim the wick to about 1/2 inch (1.27 cm) above the rim.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Candle out of an Orange\n\nSteps:\n- prepare_orange orange\n- cut_orange npc cutting_board\n- peel_orange peeler\n- locate_wicks user1 wick1\n- add_oil_to_fridge oil_tank npc\n- create_design npc work_station\n- light_candle npc\n- place_wicks_in_hole wick1\n- make_sliplargerbeads npc\n\nDescriptions:\n- Prepare your orange.\n- Cut the orange on the cutting board.\n- Peel the orange.\n- Locate the \"wick\".\n- Add oil.\n- Create a design.\n- Light the candle.\n- Place the top half (with its pre-designed hole) onto the bottom half with the wick.\n- Enjoy!.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is 3-decorate.\n- go south npc bedroom closet\n- get lantern npc closet\n- get balloon npc closet\n- go north npc closet bedroom\n- go west npc bedroom livingroom\n- turn_on_tv npc livingroom\n- hang_lantern npc\n- blow_balloon npc\n\nDescriptions:\n- Put out anime balloons. Draw anime faces on balloons. Alternately, you can call local party supply stores to see if they have any relevant balloons. A third option is to purchase anime balloons online. You can have the balloons filled with helium, or blow them up yourself and place them around.\n- Hang paper lanterns. Buy paper lanterns, in the color of your party theme, at a party supply store or online. You can also make paper lanterns using tissue paper and bendable metal wire.\n- Ideas for main dishes include teriyaki meat or salmon, and stir fry with chicken or beef, noodles, vegetables, and toasted sesame seed sauce.\n\nPDDL Actions:\n(:action hang_lantern\n    :parameters (?p - player)\n    :precondition (and (inventory ?p lantern))\n    :effect (and (hung lantern) (not (inventory ?p lantern)))\n  )\n(:action turn_on_tv\n    :parameters (?p - player ?l - location)\n    :precondition (and (at ?p ?l) (at tv ?l))\n    :effect (on tv)\n  )\n)\n(:action blow_balloon\n    :parameters (?p - player)\n    :precondition (and (inventory ?p balloon))\n    :effect (and (inflated balloon) (not (inventory ?p balloon)))\n  )\n(:action get\n    :parameters (?obj - item ?p - player ?l - location)\n    :precondition (and (at ?p ?l) (at ?obj ?l))\n    :effect (and (inventory ?p ?obj) (not (at ?obj ?l)))\n  )\n(:action get_beer\n    :parameters (?p - player ?l - location)\n    :precondition (and (has_fridge ?l) (at ?p ?l))\n    :effect (and (inventory ?p beer) (opened beer))\n  )\n(:action go\n    :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n    :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n    :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n  )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Recycle Candles\n\nSteps:\n- collect_candle npc\n- purchase_supplies npc store\n- find_saupan stove_knob velveeta\n- place_saupan stove_knob velveeta\n- prepare_candle_holders user1 wick1\n- check_wax wick1\n- pour_wicks_into_pan wick1 pan1\n- pour_wand npc\n- place_full_candle_holders npc hallway\n\nDescriptions:\n- Collect partially used candles.\n- Purchase needed supplies and containers.\n- Find a large saucepan that will accommodate the amount of wax you will use.\n- Place the saucepan on the stove on low heat.\n- Prepare the candle holders while you are waiting for the wax to melt.\n- Check the wax and stir until any remaining chunks are dissolved.\n- Use a mesh strainer and pour the hot wax through into another pan.\n- Pour the hot wax into your candle holders.\n- Place the full candle holders or molds on a flat surface out of the way of foot traffic so the wax can harden evenly.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Add Scent to a Candle\n\nSteps:\n- gather_materials materials\n- set_wick wick1\n- measure_wailmer wick1\n- melt_wand alice wand1\n- add-scenting_sauce alice\n- pour_wax_into_container alice container1\n- burn_candle user1 candle1\n\nDescriptions:\n- Gather materials.\n- Set the wick.\n- Measure your wax flakes.\n- Melt the wax.\n- Add scent.\n- Pour the wax into the container.\n- Burn the candle.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is remove_players.\n- gather_info npc ss\n- set_dress_code npc ss\n- set_meeting_location npc ss\n- create_name npc ss\n- create_secret npc ss\n- secret_society_is_ready npc ss\n- initiate_new_member npc adrian ss\n- initiate_new_member npc chris ss\n- initiate_new_member npc lara ss\n- teach_new_member_secret npc adrian ss\n- teach_new_member_secret adrian chris ss\n- teach_new_member_secret adrian lara ss\n- remove_member anish ss\n- check_if_cult adrian chris lara npc ss\n\nDescriptions:\n- Create a secret or a secret mission. A secret society must have something to protect.\n- Conduct a proper initiation for you and your closest friend. This should be done before you initiate others. That way, you are sure to come up with a good idea. The initiation is one of the most important parts of the society. It has to be something neither of you would do normally. Candle-lighting sets a serious and official tone, which is always good. Secret names are fun to have.\n- An important thing in secret societies is to meet in secret, that means meeting in a new place every time or having access to a secret room somewhere. You could even figure out a time to chat online.\n- Initiate well to do people in the society. In a school, initiate the most brilliant and enthusiastic students that seem like clique-material, and they will motivate and inspire others. But you don't want to have too many members. The more members, the less secret it is. Five to ten should be good.\n- There needs to be a way to get rid of someone if they become bad for the group or start talking—like blabbing the society's secret. If they do, pretend like that was never the secret, but immediately create a new secret. Put this in the rules.\n- Read a few clique-like books, like the clique series by Lisi Harrison, for some background information, although, maybe not so mean like they were.\n- Make a dress code. Most small secret societies use robes while large ones, like the Freemasons, have complex aprons.\n- Think of a name. You and your closest friend should discuss what your secret society should be called.\n\nPDDL Actions:\n(:action create_name ; create name for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_name ?sc)))\n      :effect (and (has_name ?sc))\n   )\n(:action create_secret ; create secret for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_secret ?sc)))\n      :effect (and (has_secret ?sc) (knows_secret ?p ?sc))\n   )\n(:action set_meeting_location ; determine a regular secret meeting location for the society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_location ?sc)))\n      :effect (and (has_location ?sc))\n   )\n(:action secret_society_is_ready ; check that all prequisites of the secret society are complete\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (not (society_is_ready ?sc)) (has_name ?sc) (has_dress_code ?sc) (has_location ?sc) (has_info ?p) (has_secret ?sc))\n      :effect (and (society_is_ready ?sc))\n   )\n(:action initiate_new_member ; add a new member to secret society\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (in ?p1 ?sc) (is_trusted ?p2 ?sc) (friends ?p1 ?p2) (not (in ?p2 ?sc)))\n      :effect (and (in ?p2 ?sc))\n   )\n(:action remove_member ; remove an existing society member due to untrustworthiness\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))\n      :effect (and (not (in ?p ?sc)))\n   )\n(:action teach_new_member_secret ; once a new member becomes trustworthy, teach them the secret\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (in ?p1 ?sc) (in ?p2 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (knows_secret ?p1 ?sc) (not (knows_secret ?p2 ?sc)))\n      :effect (and (knows_secret ?p2 ?sc))\n   )\n(:action check_if_cult ; check if the group is large enough for a cult\n      :parameters (?p1 - player ?p2 - player ?p3 - player ?p4 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (not (equals ?p1 ?p2)) (not (equals ?p1 ?p3)) (not (equals ?p1 ?p4)) (not (equals ?p2 ?p3)) (not (equals ?p2 ?p4)) (not (equals ?p3 ?p4)) (in ?p1 ?sc) (in ?p2 ?sc) (in ?p3 ?sc) (in ?p4 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (is_trusted ?p3 ?sc) (is_trusted ?p4 ?sc) (knows_secret ?p1 ?sc) (knows_secret ?p2 ?sc) (knows_secret ?p3 ?sc) (knows_secret ?p4 ?sc))\n      :effect (and (is_cult ?sc))\n   )\n)\n(:action set_dress_code ; determines the dress code for the secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_dress_code ?sc)))\n      :effect (and (has_dress_code ?sc))\n   )\n(:action gather_info ; read books to gather information on how to create a secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (has_info ?p)))\n      :effect (and (has_info ?p))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Tye Dye Candle\n\nSteps:\n- prepare_area work area\n- burn_wicks npc\n- pour_wax_into_pan velveeta\n- remove-from-mixture cubes\n-  ((in_machine wick1) (center_of_mixture w1))\n- melt_wailmer wick1\n- add-ingredients additives to alice mixture1\n- add-scenting_sauce alice\n- pour-wand wick-1\n- dip_candle_in_dye npc\n- free_candle npc\n- make_drill npc wood drill\n- remove_candle_from_mixture velveeta\n\nDescriptions:\n- Prepare your entire work area, set out all materials beforehand.\n- Melt a small amount of wax in a double boiler or wax melter, to at least 160ºF.\n- Pour wax into cube trays, wax button molds, or pour a thin layer into a pan.\n- When the cubes have hardened, remove them from the mold.\n- Wick the mold and place the white wax chunks into the mold,  Make sure the wick is centered.\n- Melt a smaller amount of wax than you normally would to fill the mold.\n- Add any additives at this time.\n- Add scent if you wish.\n- Pour the liquid wax into the mold.\n- Take your liquid dye, or melted dye, and drop a small amount around the edges of the mold, so the dye travels down the sides of the candle.\n- Place the candle in the freezer.\n- Top off the well that forms, if one does.\n- Remove your candle from the mold when it is completely hard, and enjoy the unique swirled patterns on your candle.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is remove_players.\n- gather_info npc ss\n- set_dress_code npc ss\n- set_meeting_location npc ss\n- create_name npc ss\n- create_secret npc ss\n- secret_society_is_ready npc ss\n- initiate_new_member npc adrian ss\n- initiate_new_member npc chris ss\n- initiate_new_member npc lara ss\n- teach_new_member_secret npc adrian ss\n- teach_new_member_secret adrian chris ss\n- teach_new_member_secret adrian lara ss\n- remove_member anish ss\n- check_if_cult adrian chris lara npc ss\n\nDescriptions:\n- Create a secret or a secret mission. A secret society must have something to protect.\n- Conduct a proper initiation for you and your closest friend. This should be done before you initiate others. That way, you are sure to come up with a good idea. The initiation is one of the most important parts of the society. It has to be something neither of you would do normally. Candle-lighting sets a serious and official tone, which is always good. Secret names are fun to have.\n- An important thing in secret societies is to meet in secret, that means meeting in a new place every time or having access to a secret room somewhere. You could even figure out a time to chat online.\n- Initiate well to do people in the society. In a school, initiate the most brilliant and enthusiastic students that seem like clique-material, and they will motivate and inspire others. But you don't want to have too many members. The more members, the less secret it is. Five to ten should be good.\n- There needs to be a way to get rid of someone if they become bad for the group or start talking—like blabbing the society's secret. If they do, pretend like that was never the secret, but immediately create a new secret. Put this in the rules.\n- Read a few clique-like books, like the clique series by Lisi Harrison, for some background information, although, maybe not so mean like they were.\n- Make a dress code. Most small secret societies use robes while large ones, like the Freemasons, have complex aprons.\n- Think of a name. You and your closest friend should discuss what your secret society should be called.\n\nPDDL Actions:\n(:action create_name ; create name for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_name ?sc)))\n      :effect (and (has_name ?sc))\n   )\n(:action create_secret ; create secret for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_secret ?sc)))\n      :effect (and (has_secret ?sc) (knows_secret ?p ?sc))\n   )\n(:action set_meeting_location ; determine a regular secret meeting location for the society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_location ?sc)))\n      :effect (and (has_location ?sc))\n   )\n(:action secret_society_is_ready ; check that all prequisites of the secret society are complete\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (not (society_is_ready ?sc)) (has_name ?sc) (has_dress_code ?sc) (has_location ?sc) (has_info ?p) (has_secret ?sc))\n      :effect (and (society_is_ready ?sc))\n   )\n(:action initiate_new_member ; add a new member to secret society\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (in ?p1 ?sc) (is_trusted ?p2 ?sc) (friends ?p1 ?p2) (not (in ?p2 ?sc)))\n      :effect (and (in ?p2 ?sc))\n   )\n(:action remove_member ; remove an existing society member due to untrustworthiness\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (is_trusted ?p ?sc)))\n      :effect (and (not (in ?p ?sc)))\n   )\n(:action teach_new_member_secret ; once a new member becomes trustworthy, teach them the secret\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (in ?p1 ?sc) (in ?p2 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (knows_secret ?p1 ?sc) (not (knows_secret ?p2 ?sc)))\n      :effect (and (knows_secret ?p2 ?sc))\n   )\n(:action check_if_cult ; check if the group is large enough for a cult\n      :parameters (?p1 - player ?p2 - player ?p3 - player ?p4 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (not (equals ?p1 ?p2)) (not (equals ?p1 ?p3)) (not (equals ?p1 ?p4)) (not (equals ?p2 ?p3)) (not (equals ?p2 ?p4)) (not (equals ?p3 ?p4)) (in ?p1 ?sc) (in ?p2 ?sc) (in ?p3 ?sc) (in ?p4 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (is_trusted ?p3 ?sc) (is_trusted ?p4 ?sc) (knows_secret ?p1 ?sc) (knows_secret ?p2 ?sc) (knows_secret ?p3 ?sc) (knows_secret ?p4 ?sc))\n      :effect (and (is_cult ?sc))\n   )\n)\n(:action set_dress_code ; determines the dress code for the secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_dress_code ?sc)))\n      :effect (and (has_dress_code ?sc))\n   )\n(:action gather_info ; read books to gather information on how to create a secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (has_info ?p)))\n      :effect (and (has_info ?p))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Get Wax Out of a Jar Candle\n\nSteps:\n- prepare_oven npc\n- cover_sheet mixing_bowl table\n- place-candle-in-oven candle-mixture\n- put_ingredients_in_oven stove_knob velveeta\n- pull_baking_sheeter mixing_bowl\n- take_mixture_off_oven mixing_bowl canola_oil table\n- wipe_mixture_with_paper towel1 container1\n- reuse_mixture_container jar\n\nDescriptions:\n- Pre-heat your oven.\n- Cover a baking sheet with aluminum foil.\n- Place the candle jars upside down on the baking sheet.\n- Put the baking sheet into the oven and wait for the wax to melt.\n- Pull the baking sheet out of the oven.\n- Take the jars off the baking sheet.\n- Wipe the jars using a paper towel.\n- Reuse the jar.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is create_cult.\n- gather_info npc ss\n- set_dress_code npc ss\n- set_meeting_location npc ss\n- create_name npc ss\n- create_secret npc ss\n- secret_society_is_ready npc ss\n- initiate_new_member npc adrian ss\n- initiate_new_member adrian lara ss\n- initiate_new_member adrian liam ss\n- teach_new_member_secret npc adrian ss\n- teach_new_member_secret adrian lara ss\n- teach_new_member_secret adrian liam ss\n- check_if_cult adrian lara liam npc ss\n\nDescriptions:\n- Create a secret or a secret mission. A secret society must have something to protect.\n- Conduct a proper initiation for you and your closest friend. This should be done before you initiate others. That way, you are sure to come up with a good idea. The initiation is one of the most important parts of the society. It has to be something neither of you would do normally. Candle-lighting sets a serious and official tone, which is always good. Secret names are fun to have.\n- An important thing in secret societies is to meet in secret, that means meeting in a new place every time or having access to a secret room somewhere. You could even figure out a time to chat online.\n- Initiate well to do people in the society. In a school, initiate the most brilliant and enthusiastic students that seem like clique-material, and they will motivate and inspire others. But you don't want to have too many members. The more members, the less secret it is. Five to ten should be good.\n- Read a few clique-like books, like the clique series by Lisi Harrison, for some background information, although, maybe not so mean like they were.\n- Make a dress code. Most small secret societies use robes while large ones, like the Freemasons, have complex aprons.\n- Think of a name. You and your closest friend should discuss what your secret society should be called.\n\nPDDL Actions:\n(:action create_name ; create name for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_name ?sc)))\n      :effect (and (has_name ?sc))\n   )\n(:action create_secret ; create secret for a secret society\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (has_info ?p) (in ?p ?sc) (not (has_secret ?sc)))\n      :effect (and (has_secret ?sc) (knows_secret ?p ?sc))\n   )\n(:action set_meeting_location ; determine a regular secret meeting location for the society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_location ?sc)))\n      :effect (and (has_location ?sc))\n   )\n(:action secret_society_is_ready ; check that all prequisites of the secret society are complete\n      :parameters (?p - player ?sc - secret_society) \n      :precondition (and (not (society_is_ready ?sc)) (has_name ?sc) (has_dress_code ?sc) (has_location ?sc) (has_info ?p) (has_secret ?sc))\n      :effect (and (society_is_ready ?sc))\n   )\n(:action initiate_new_member ; add a new member to secret society\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (in ?p1 ?sc) (is_trusted ?p2 ?sc) (friends ?p1 ?p2) (not (in ?p2 ?sc)))\n      :effect (and (in ?p2 ?sc))\n   )\n(:action teach_new_member_secret ; once a new member becomes trustworthy, teach them the secret\n      :parameters (?p1 - player ?p2 - player ?sc - secret_society)\n      :precondition (and (in ?p1 ?sc) (in ?p2 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (knows_secret ?p1 ?sc) (not (knows_secret ?p2 ?sc)))\n      :effect (and (knows_secret ?p2 ?sc))\n   )\n(:action check_if_cult ; check if the group is large enough for a cult\n      :parameters (?p1 - player ?p2 - player ?p3 - player ?p4 - player ?sc - secret_society)\n      :precondition (and (society_is_ready ?sc) (not (equals ?p1 ?p2)) (not (equals ?p1 ?p3)) (not (equals ?p1 ?p4)) (not (equals ?p2 ?p3)) (not (equals ?p2 ?p4)) (not (equals ?p3 ?p4)) (in ?p1 ?sc) (in ?p2 ?sc) (in ?p3 ?sc) (in ?p4 ?sc) (is_trusted ?p1 ?sc) (is_trusted ?p2 ?sc) (is_trusted ?p3 ?sc) (is_trusted ?p4 ?sc) (knows_secret ?p1 ?sc) (knows_secret ?p2 ?sc) (knows_secret ?p3 ?sc) (knows_secret ?p4 ?sc))\n      :effect (and (is_cult ?sc))\n   )\n)\n(:action set_dress_code ; determines the dress code for the secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (has_info ?p) (not (has_dress_code ?sc)))\n      :effect (and (has_dress_code ?sc))\n   )\n(:action gather_info ; read books to gather information on how to create a secret society\n      :parameters (?p - player ?sc - secret_society)\n      :precondition (and (in ?p ?sc) (not (has_info ?p)))\n      :effect (and (has_info ?p))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make Candle Tarts\n\nSteps:\n- break_paraffin npc\n- set_double_boiled_with_heat user1 stove1 heat1\n- set_burner_add_wicks npc\n- add-ingredient wax1 crayon1 candle1\n- stirf_wand npc\n- mix_ingredients alice wand1\n- free tart_papyrus mixing_bowl tins\n- cut_wick wick1\n- wrap_wick_with_ink wick1 pencil1\n- pour_wax_into_mixture wick1 container1\n- set_wicks_to_cool wick1\n- tape-papyrus tarts\n- make_sliplargerbeads npc\n\nDescriptions:\n- Break up paraffin.\n- Set the double boiler over medium heat.\n- Watch the pot as the wax melts; do not leave it unattended, even for a second.\n- Add a piece of a crayon or commercial candle dye when the wax has melted.\n- Stir it with a wooden spoon to spread the color throughout the melted wax.\n- Mix in fragrance with the melted wax.\n- Spray tart pans or muffin tins with cooking spray.\n- Cut a piece of wick about 1 ⁄2 inches (3.8 cm) longer than the depth of your mold, if you choose to add a wick.\n- Insert it into a wick holder, and wrap the other end around a pencil.\n- Pour the wax into the mold slowly to avoid spills and burns and to prevent air bubbles from forming in your wax tart.\n- Allow the wax to cool and set completely.\n- Turn the tart pans upside down over your hand, and tap them lightly to release the wax tarts.\n- Enjoy!.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Candle\n\nSteps:\n- gather_supplies you supplies\n- melt_shortening velveeta\n- add_color_and_scent alice\n- pour_candle wick1 candle1\n\nDescriptions:\n- Gather your supplies.\n- Melt your shortening.\n- Add your color and scent.\n- Prepare the wick and pour the candle.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is safe_in_cave.\n- go east npc camp path\n- go east npc path riverside\n- go north npc riverside rainforest\n- get_wood npc wood rainforest\n- get_foliage npc foliage rainforest\n- go east npc rainforest cave\n- make_drill npc wood drill\n- build_shelter npc wood foliage cave\n- make_fire npc drill cave\n- make_spear npc spear wood\n- survive npc spear cave\n\nDescriptions:\n- Think about where you came from if you got lost on foot. Orient yourself using any landmarks you remember, such as a hill in the distance or a river. Get back to a point you remember to find the trail again or head back in the direction of a village that you came from.\n- Boil water from streams to kill any bacteria. Look for running streams to find fresh water. Filter out any particles through a sock, shirt, or other fabric, then start a fire and boil the water to kill bacteria that can make you sick.\n- Place shorter sticks and branches against the sides of the center pole. Line the length of the middle stick with branches going outward towards the ground at a 45-degree angle. The more sticks you can find to place along the sides, the easier it will be to cover your shelter.\n- The plastic sheet will accumulate condensation that will drip down the underside of the sheet and into the container. This water is distilled and safe to drink.\n- Make a 4-pronged bamboo spear to fish with. Find a 6-ft (1.8 m) stalk of bamboo and cut 4- 6 in (15.24 cm) slits into 1 end of it with a knife or sharp rock. Weave a piece of vine into the slits to separate the tip of the bamboo into 4 prongs and sharpen them with a knife or a sharp rock.\n- If you don’t have a water bottle or other container to collect water, try to find other natural containers in the jungle such as a coconut shell or piece of wood shaped like a bowl. You can also leave these items out when it rains to collect the fresh water.\n- Cover the sides with leaves and foliage to cover the lean-to shelter. Find large leaves and lay them over top of the frame you built. Cover the shelter as well as you can to protect you from the elements and keep animals out.\n\nPDDL Actions:\n(:action build_shelter ; build a shelter using wood and foliage\n      :parameters (?p - player ?wood - wood ?foliage - foliage ?loc - location) \n      :precondition (and (at ?p ?loc) (inventory ?p ?wood) (inventory ?p ?foliage) (not (has_shelter ?loc)))\n      :effect (and (has_shelter ?loc))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get_foliage ; get foliage from a location that has trees\n      :parameters (?p - player ?foliage - foliage ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?foliage)))\n      :effect (and (inventory ?p ?foliage))\n   )\n(:action make_fire ; make fire at a location\n      :parameters (?p - player ?drill - drill ?loc - location) \n      :precondition (and (inventory ?p ?drill) (at ?p ?loc) (not (has_fire ?loc)))\n      :effect (and (has_fire ?loc))\n   )\n(:action survive ; live safely in the shelter with weapon and fire on\n      :parameters (?p - player ?spear - spear ?loc - location) \n      :precondition (and (at ?p ?loc) (has_shelter ?loc) (has_fire ?loc) (inventory ?p ?spear) (not (safe ?p ?loc)))\n      :effect (and (safe ?p ?loc))\n   )\n)\n(:action make_spear ; make a spear using wood to catch fish or defend against predators\n      :parameters (?p - player ?spear - spear ?wood - wood) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?spear)))\n      :effect (and (inventory ?p ?spear))\n   )\n(:action make_drill ; make a drill using wood to create fire\n      :parameters (?p - player ?wood - wood ?drill - drill) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?drill)))\n      :effect (and (inventory ?p ?drill))\n   )\n(:action get_wood ; get wood from a location that has trees\n      :parameters (?p - player ?wood - wood ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?wood)))\n      :effect (and (inventory ?p ?wood))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Clean a Wax Pot\n\nSteps:\n- heat_pot stove pot\n- drink_wailmer npc\n- boil_water container water\n- add-water water pot\n- drink_water npc\n- scrape-wicks wick1\n- wash_pot pot1\n\nDescriptions:\n- Heat your improvised pot like you normally would to melt the wax.\n- Pour out the liquid wax into a disposable container and throw it out.\n- Boil enough water to fill your container.\n- Pour boiling water into your pot and wait 15-20 minutes.\n- Wait for the water to cool off and then strain the water in a colander.\n- Scrape any remaining wax with a spatula or spoon.\n- Wash the pot with a mild dish soap and water.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Reuse an Old Candle\n\nSteps:\n- take_out_of_candle npc\n- plug_candle_wicks_into_socket npc\n- place_candle_in_jar user1 candle1 jar1\n- put_candle_on_table candle1 hot_plate1\n- set_burner_add_candle npc\n- dip_wick wick1\n- dry_wicks wick1\n- dip_wick wick1\n- dry_wicks wick1\n- place_wick_in_empty_jar wick1\n- pour_wicks_into_machine wick1\n- take_wick_out_of_jar wick1 jar1\n- dry_wicks wick1\n- place_safe_area npc basement\n- light_candle npc\n\nDescriptions:\n- Take out the candle you'd like to reuse.\n- Plug the candle warmer in the socket and turn it on.\n- Place the candle in a jar, if it's  not already in one.\n- Put the candle on the candle warmer hot plate.\n- Allow time for the old candle to completely melt.\n- Dip the new wick into the melted wax.\n- Give it a few minutes to dry.\n- Dip the wick again in the melted wax.\n- Let it dry for a few minutes.\n- Place the wick into the empty jar.\n- Pour the wax into the jar with the wick.\n- Take the wick out of the jar carefully.\n- Allow to dry and harden.\n- Place it in a safe area.\n- Take a lighter, light the candle, and enjoy its fragrance.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make Shot Glass Candles\n\nSteps:\n- break_candle_into_measuring_cup npc\n- place_measuring_cup_into_pan stove pot water\n- set_burner_add_wicks_to_oven npc\n- place_wicks_in_shot_glass wick1\n- pour_wax_into_shot glass_filled\n- set_wick wick1 glass1\n- finish-wreath wreath-1\n\nDescriptions:\n- Break up all your old, half burned candles into a measuring cup.\n- Place the measuring cup into a pan of boiling water until the wax melts.\n- Watch to see when the wax has almost completely melted.\n- Place the wicks inside the shot glasses.\n- When the wax has melted down, pour the wax into each shot glass.\n- When the wax is almost completely set, move the wick into the center of the glass and then leave it to fully set.\n- Finished!.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make Chocolate Hearts for Valentine&#x27;s Day.\n- melt-chocolate chocolate microwave spoon\n- freeze-chocolate chocolate chocolate\n- release-from-molds chocolate chocolate\n- box-chocolates chocolate\n\nDescriptions:\n- Assemble the ingredients needed.\n- Melt the chocolate bars in the microwave until you have no lumps left after stirring.\n- Pour the melted chocolate into the heart shaped molds.\n- Put the chocolate into the freezer until hardened.\n- Leave them out for one minute and pop out of molds, Or, cut heart shapes in the tray.\n- Enjoy then and there, or box them up and give away!\n\nPDDL Actions:\n(:action assemble-ingredients\n    :parameters (?chocolate - entity ?ingredients - entity)\n    :precondition (and\n      (at-cost ?chocolate in-store)\n      (at-location ?ingredients in-cabinet)\n    )\n    :effect (and\n      (at-cost ?chocolate purchased-for-use)\n      (at-location ?ingredients on-countertop)\n    )\n  )\n(:action melt-chocolate\n    :parameters (?chocolate - entity ?microwave - entity ?spoon - entity)\n    :precondition (and\n      (at-texture ?chocolate solid)\n      (at-temperature ?chocolate colder)\n      (at-location ?chocolate packaged)\n      (at-power ?microwave off)\n      (at-cleanness ?spoon clean)\n    )\n    :effect (and\n      (at-texture ?chocolate liquid)\n      (at-temperature ?chocolate warmer)\n      (at-location ?chocolate out-of-package)\n      (at-power ?microwave on)\n      (at-cleanness ?spoon dirty)\n    )\n  )\n(:action pour-into-molds\n    :parameters (?chocolate - entity ?mold - entity)\n    :precondition (and\n      (at-texture ?chocolate liquid)\n      (at-fullness ?mold empty)\n    )\n    :effect (and\n      (at-texture ?chocolate in-molds)\n      (at-fullness ?mold full)\n    )\n  )\n(:action freeze-chocolate\n    :parameters (?chocolate - entity ?mold - entity)\n    :precondition (and\n      (at-texture ?chocolate liquid)\n    )\n    :effect (and\n      (at-texture ?chocolate frozen)\n      (at-hardness ?chocolate solid)\n      (at-temperature ?chocolate colder)\n      (at-ease-of-release ?chocolate easy-to-release-from-molds)\n      (at-fullness ?mold full)\n      (at-weight ?mold heavier)\n    )\n  )\n(:action release-from-molds\n    :parameters (?chocolate - entity ?mold - entity)\n    :precondition (and\n      (at-texture ?chocolate frozen)\n      (at-ease-of-release ?chocolate easy-to-release-from-molds)\n    )\n    :effect (and\n      (at-texture ?chocolate on-plate)\n      (at-fullness ?mold empty)\n      (at-weight ?mold lighter)\n    )\n  )\n(:action box-chocolates\n    :parameters (?chocolate - entity)\n    :precondition (and\n      (at-texture ?chocolate on-plate)\n    )\n    :effect (and\n      (at-texture ?chocolate in-box)\n    )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Chocolate Candle\n\nSteps:\n- place_candle_on_table table\n- add_water_to_hob stove water\n- cook npc kitchen\n- add-chocolate-sauce mixing_bowl chocolate\n- place_bowl_in_saupan bowl\n- prepare_container chocolate_comb container\n- check_wicks wick1\n- wait until it sets\n- get_chocolates chocolate candle1\n\nDescriptions:\n- Get the old candles and place them on a table that is not used for eating.\n- Add water to your saucepan about a quarter way up and turn on the hob.\n- While it is heating, add your chopped-up candle pieces into the the bowl not intended for eating purposes.\n- Add a spoon full or more of chocolate spread in the bowl.\n- Place the bowl in the saucepan most likely when it is not boiling.\n- While the wax and the chocolate spread is melting, prepare the container for the candle.\n- Quickly check to see if the wax had melted.\n- Just wait until it sets.\n- Enjoy your lovely chocolate candle!.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Prevent a Wick Lamp or Stove from Smoking.\n- put_vinegar_in_container vinegar1 container1\n- remove_wicks wick1\n- dip_wicks_in_vinegar wick1 vinegar1 container1\n- dry_wicks wick1\n- place_wicks_in_lamp wick1 lamp1\n\nDescriptions:\n- Pour some white vinegar into a small container deep enough for dipping.\n- Remove the wick from the lamp or stove, or use wicks yet to be inserted.\n- Dip each wick into the vinegar.\n- Allow to dry thoroughly.\n- Use once dry.\n\nPDDL Actions:\n(:action remove_wicks\n    :parameters (?w - wick)\n    :precondition (and (in_lamp ?w))\n    :effect (and\n     (removed ?w)\n     (not (in_lamp ?w))\n     (get ?w)\n     )\n  )\n\n  ;; 将醋倒入容器的动作\n(:action put_vinegar_in_container\n    :parameters (?v - vinegar ?c - container)\n    :precondition (not (vinegar_in_container ?v))\n    :effect (and (vinegar_in_container ?v) (in_container ?c ?v))\n  )\n\n  ;; 将灯芯浸泡在醋中的动作\n(:action dip_wicks_in_vinegar\n    :parameters (?w - wick ?v - vinegar ?c - container)\n    :precondition (and (get ?w) (vinegar_in_container ?v) (in_container ?c ?v))\n    :effect (and (wet ?w) (in_vinegar ?w))\n  )\n\n  ;; 晾干灯芯的动作\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (wet ?w)\n    :effect (and (dry ?w) (not (wet ?w)))\n  )\n\n  ;; 将灯芯放回灯中的动作\n(:action place_wicks_in_lamp\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (dry ?w) (not (in_lamp ?w)))\n    :effect (and (in_lamp ?w) (placed_back ?w ?l))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Put Out a Candle with Your Fingers\n\nSteps:\n- light_candle user1 candle1\n- lick_fingestick npc\n- place-in-hand npc\n- grab_wick wick1\n- practice_with_equipment npc\n\nDescriptions:\n- Light your candle.\n- Lick your fingers.\n- Place your hand about 1 inch (2.5 cm) away from the flame/wick.\n- Quickly grab the wick and then let go.\n- Practice.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]