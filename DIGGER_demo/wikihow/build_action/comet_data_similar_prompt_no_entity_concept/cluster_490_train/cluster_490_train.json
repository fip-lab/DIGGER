[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is drink_water.\n- get container npc camp\n- go east npc camp path\n- go east npc path riverside\n- collect_water npc container water riverside\n- go north npc riverside rainforest\n- get_wood npc wood rainforest\n- make_drill npc wood drill\n- make_fire npc drill rainforest\n- filter_water npc water\n- boil_water npc water rainforest\n- drink_water npc water\n\nDescriptions:\n- Boil water from streams to kill any bacteria. Look for running streams to find fresh water. Filter out any particles through a sock, shirt, or other fabric, then start a fire and boil the water to kill bacteria that can make you sick.\n- The plastic sheet will accumulate condensation that will drip down the underside of the sheet and into the container. This water is distilled and safe to drink.\n- If you don’t have a water bottle or other container to collect water, try to find other natural containers in the jungle such as a coconut shell or piece of wood shaped like a bowl. You can also leave these items out when it rains to collect the fresh water.\n- Make a solar water still with a container and a plastic sheet. Dig a hole in an area that receives at least some direct sunlight and put a container, such as a water bottle or can, in the middle of the hole. Fill the space between the sides of the hole and the container with wet leaves. Place a plastic sheet over the top of the hole and put rocks or other heavy objects around the edges to hold it in place. Put a small stone in the middle of the sheet above the container.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action collect_water ; use container to collect water from a location that has water\n      :parameters (?p - player ?container - container ?water - water ?loc - location) \n      :precondition (and (at ?p ?loc) (has_water ?loc) (inventory ?p ?container) (not (inventory ?p ?water)))\n      :effect (and (inventory ?p ?water) (not (filtered ?water)) (not (boiled ?water)))\n   )\n(:action boil_water ; boil water to kill any bacteria\n      :parameters (?p - player ?water - water ?loc - location) \n      :precondition (and (inventory ?p ?water) (at ?p ?loc) (filtered ?water) (not (boiled ?water)) (has_fire ?loc))\n      :effect (and (boiled ?water))\n   )\n(:action get_foliage ; get foliage from a location that has trees\n      :parameters (?p - player ?foliage - foliage ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?foliage)))\n      :effect (and (inventory ?p ?foliage))\n   )\n(:action filter_water ; filter water to remove any particles\n      :parameters (?p - player ?water - water) \n      :precondition (and (inventory ?p ?water) (not (filtered ?water)))\n      :effect (and (filtered ?water))\n   )\n(:action drink_water ; drink boiled water \n      :parameters (?p - player ?water - water) \n      :precondition (and (inventory ?p ?water) (boiled ?water))\n      :effect (and (not (thirsty ?p)))\n   )\n(:action make_fire ; make fire at a location\n      :parameters (?p - player ?drill - drill ?loc - location) \n      :precondition (and (inventory ?p ?drill) (at ?p ?loc) (not (has_fire ?loc)))\n      :effect (and (has_fire ?loc))\n   )\n(:action make_drill ; make a drill using wood to create fire\n      :parameters (?p - player ?wood - wood ?drill - drill) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?drill)))\n      :effect (and (inventory ?p ?drill))\n   )\n(:action get_wood ; get wood from a location that has trees\n      :parameters (?p - player ?wood - wood ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?wood)))\n      :effect (and (inventory ?p ?wood))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Solar Bleach Cloth Diapers\n\nSteps:\n- wash_papyrus npc\n- lay_add_stick npc\n- line-dry-papyrus npc\n- choose_amazing npc\n- slipluster_lemon_juice velveeta\n- bring-closest-to-bed cloth_diapers\n- blend_with_cloth npc\n- throw-in-dryer diapers\n\nDescriptions:\n- Wash the diapers.\n- Lay the diapers out flat, with the stains facing up.\n- Alternatively, line-dry the diapers or drape them over a drying rack.\n- Choose a sunny day to achieve the best, most potent results.\n- Spray lemon juice onto the worst stains.\n- Bring the cloth diapers in after a few hours pass.\n- Repeat the process for stubborn stains that do not come out after the first round of bleaching.\n- Throw the diapers into the dryer for a few minutes.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is make_fire.\n- go east npc camp path\n- go east npc path riverside\n- go north npc riverside rainforest\n- get_wood npc wood rainforest\n- go south npc rainforest riverside\n- make_drill npc wood drill\n- make_fire npc drill riverside\n\nDescriptions:\n- Boil water from streams to kill any bacteria. Look for running streams to find fresh water. Filter out any particles through a sock, shirt, or other fabric, then start a fire and boil the water to kill bacteria that can make you sick.\n- The plastic sheet will accumulate condensation that will drip down the underside of the sheet and into the container. This water is distilled and safe to drink.\n- If you don’t have a water bottle or other container to collect water, try to find other natural containers in the jungle such as a coconut shell or piece of wood shaped like a bowl. You can also leave these items out when it rains to collect the fresh water.\n\nPDDL Actions:\n(:action get_wood ; get wood from a location that has trees\n      :parameters (?p - player ?wood - wood ?loc - location) \n      :precondition (and (at ?p ?loc) (has_tree ?loc) (not (inventory ?p ?wood)))\n      :effect (and (inventory ?p ?wood))\n   )\n(:action make_fire ; make fire at a location\n      :parameters (?p - player ?drill - drill ?loc - location) \n      :precondition (and (inventory ?p ?drill) (at ?p ?loc) (not (has_fire ?loc)))\n      :effect (and (has_fire ?loc))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action make_drill ; make a drill using wood to create fire\n      :parameters (?p - player ?wood - wood ?drill - drill) \n      :precondition (and (inventory ?p ?wood) (not (inventory ?p ?drill)))\n      :effect (and (inventory ?p ?drill))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Cotton\n\nSteps:\n- set_washer_to_highest_heat washer1 heat1\n- add_dew_and_blend_machine machine\n- add-water water\n- add_blend_to_cycle alice\n- add-clothing clothing\n- run_washer_with_machine washer1 bike1 oil1\n- finish-wreath wreath\n\nDescriptions:\n- Set your washer to the highest heat possible.\n- Add detergent and bleach if your machine has a bleach dispenser.\n- Add water first if your machine doesn’t have a bleach dispenser.\n- Add bleach 5 minutes into the cycle.\n- Add the clothing to the washer.\n- Allow the washer to run normally.\n- Finished.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach a Shirt\n\nSteps:\n- bring-materials work_area\n- lay_on_floor shirt1\n- slide-and-burn you rags\n- choose_design npc work_station\n- apply_designer npc work_station shirt\n- pour_blend_into_glass_container alice\n- dip_gap_in_blend user1 cloth1 sponge1\n- blot_shirt npc work_station\n- wait_for_blend user1 bleach1 bottle1\n- peel_strips npc\n- clean_tape npc\n- dry_shirt npc\n\nDescriptions:\n- Bring all necessary materials to your work area.\n- Lay the shirt flat on the floor or another surface.\n- Slide the rags or cardboard into the shirt to protect the back from being bleached.\n- Choose the design that you want to bleach into the shirt.\n- Apply the design to the shirt.\n- Pour bleach into a glass container or measuring cup.\n- Dip a folded-up rag or sponge into the bleach.\n- Blot the shirt all around the design.\n- Wait for the bleach to take effect.\n- Peel the stencil or design off of the shirt.\n- Remove the rags or cardboard and rinse the shirt in cold water.\n- Dry the shirt accordingly.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is fill-inventory.\n- go south npc parkinglot pond\n- get_water npc pond water\n- go north npc pond parkinglot\n- go north npc parkinglot park\n- go east npc park store\n- get npc store bandage\n- go west npc store park\n- go west npc park car\n- go west npc car brickhouse\n- loot_shelter npc brickhouse food\n\nDescriptions:\n- Learn basic first-aid to treat minor injuries. Injuries are unfortunately inevitable, and they can range from minor to serious. Develop at least a basic knowledge of first aid to treat the injuries you or a partner may encounter. When searching for supplies, take any first aid gear you may find and build a basic first aid kit.\n- Purify any water you drink that isn’t from a sealed bottle. A waterborne illness can be life-threatening in a survival situation. If need to use any unbottled water for drinking, always purify it first. The most common method is boiling the water for 1 minute to kill any pathogens. Then filter out larger objects by pouring the water through a fine net or cloth.\n\nPDDL Actions:\n(:action get_water ; get water from a location that has a water source like a lake.\n      :parameters (?p - player ?loc - location ?water - water) \n      :precondition (and (at ?p ?loc) (has_water_source ?loc))\n      :effect (and (inventory ?p ?water) (not (treated ?water)))\n   )\n(:action barter_food_for_healing ; get food in exchange for healing.\n      :parameters (?p - player ?p_inj - player ?water - water ?bandage - bandage ?food - food ?l -location) \n      :precondition (and (inventory ?p ?water) (inventory ?p ?bandage) (is_injured ?p_inj) (at ?p ?l) (at ?p_inj ?l))\n      :effect (and (not (is_injured ?p_inj)) (gettable ?food)  )\n   )\n\n   \n)\n(:action gofish \n      :parameters (?p - player ?l - location ?fp - fishingpole ?f - fish)\n      :precondition (and (at ?p ?l) (inventory ?p ?fp) (haslake ?l) (at ?f ?l))\n      :effect (and (gettable ?f) )\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?p - player ?l - location ?i - item)\n      :precondition (and (at ?p ?l) (at ?i ?l) (gettable ?i))\n      :effect (and (not (at ?i ?l)) (inventory ?p ?i))\n   )\n(:action loot_shelter ; steal food from location that is occupied.\n      :parameters (?p - player ?loc - location ?food - food) \n      :precondition (and (at ?food ?loc) (at ?p ?loc) (is_occupied ?loc))\n      :effect (and (inventory ?p ?food) (not (at ?food ?loc)))\n   )\n(:action break_car_window ; steal food from car.\n      :parameters (?p - player ?car - car ?rock - rock ?item - item) \n      :precondition (and (at ?p ?car) (inventory ?p ?rock) (has_windows ?car) (at ?item ?car))\n      :effect (and (gettable ?item) (not (inventory ?p ?rock)) (not (has_windows ?car)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Use Bleach when Doing Your Laundry\n\nSteps:\n- fill-bucket water\n- mix_ingredients alice\n- add-dish washing_machine_treated items\n- soak_laundry npc\n- clean_items items water\n\nDescriptions:\n- Fill a bucket or sink with 1 gallon (3.8 L) of hot water.\n- Mix 1 tablespoon (15 mL) of oxygen or chlorine bleach into the water.\n- Add your usual washing detergent to treat stained items.\n- Soak your laundry for up to 1 hour.\n- Rinse the items under cold water.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is start_a_fire.\n- go west npc camp path\n- get_dry_materials npc path dry_materials\n- get_twigs_leaves npc path twigs_leaves\n- get_logs npc path logs\n- build_teepee npc path dry_materials twigs_leaves teepee\n- start_fire npc path teepee logs\n\nDescriptions:\n- Use dry sticks, branches, or tree bark to serve as your kindling.\n- Find small, dry material to use as tinder. Look for dry grass, leaves, tree bark, pine needles, or any other small flammable materials you can find in the area. Tinder needs to be material that is easy to light and will produce a large flame so you can start your fire.\n- Avoid using too much energy. It may be difficult for you to find adequate food and water if you're lost in the woods. Try not to sweat or use too much energy by doing things like running around and screaming for help if you're by yourself. Conserve as much energy as you can for doing things like building shelter, fire, and searching for water.\n- Search for a dry, flat area between 2 trees with splits in their trunks. Look around the area to find a relatively flat area with a tree that has a trunk that splits about 3–5 feet (0.91–1.52 m) off of the ground. If possible, try to find 2 trees that have a split in their trunks about 3–5 feet (0.91–1.52 m) off of the ground and are about 10 feet (3.0 m) apart from each other.\n- Gather small twigs and branches to use for kindling. Kindling needs to be material that will catch easily when you light your tinder.\n\nPDDL Actions:\n(:action get_logs ; get logs\n      :parameters (?p - player ?loc - location ?logs - logs)\n      :precondition (and (at ?p ?loc) (has_logs ?loc))\n      :effect (and (inventory ?p ?logs))\n   )\n(:action get_dry_materials ; get dry materials\n      :parameters (?p - player ?loc - location ?dry_materials - dry_materials)\n      :precondition (and (at ?p ?loc) (has_dry_materials ?loc))\n      :effect (and (inventory ?p ?dry_materials))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action start_fire ; start_fire\n      :parameters (?p - player ?loc - location ?teepee - teepee ?logs - logs)\n      :precondition (and (at ?p ?loc) (inventory ?p ?teepee) (inventory ?p ?logs))\n      :effect (and (has_fire ?p))\n   )\n)\n(:action build_teepee ; build teepee structure\n      :parameters (?p - player ?loc - location ?dry_materials - dry_materials ?twigs_leaves - twigs_leaves ?teepee - teepee)\n      :precondition (and (at ?p ?loc) (inventory ?p ?dry_materials) (inventory ?p ?twigs_leaves))\n      :effect (and (inventory ?p ?teepee))\n   )\n(:action get_twigs_leaves ; get twigs and leaves\n      :parameters (?p - player ?loc - location ?twigs_leaves - twigs_leaves)\n      :precondition (and (at ?p ?loc) (has_twigs_leaves ?loc))\n      :effect (and (inventory ?p ?twigs_leaves))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Linen\n\nSteps:\n- let_sun_set npc beach\n- use_as_cleaning_machine npc\n- add_salt_and_ingredients canola_oil stove_knob velveeta\n\nDescriptions:\n- Let the sun do the work.\n- Use non-bleach alternatives in your laundry.\n- Heat and soak on the stove with salt and baking soda.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Polish a Faucet With a Lemon.\n- cut-lemon water\n- squeeze-lemon water faucet\n- rub-faucet faucet water faucet\n\nDescriptions:\n- ######Cut a lemon in half.\n- ######Squeeze out the juice.\n- ######Take the squeezed out lemon half and rub vigorously over the faucets.\n- ######Wash the tap after scouring with the lemon half.\n\nPDDL Actions:\n(:action cut-lemon\n    :parameters (?lemon - entity)\n    :precondition (not (halved ?lemon))\n    :effect (halved ?lemon)\n  )\n\n  ;; Action to squeeze the lemon to extract juice\n(:action squeeze-lemon\n    :parameters (?lemon - entity ?juice - entity)\n    :precondition (and (halved ?lemon) (not (lemon-squeezed ?lemon)))\n    :effect (and\n              (lemon-squeezed ?lemon)\n              (juice-squeezed ?juice)\n              (juicy ?lemon)\n            )\n  )\n\n  ;; Action to rub the faucet with the squeezed lemon half\n(:action rub-faucet\n    :parameters (?faucet - entity ?lemon - entity ?juice - entity)\n    :precondition (and\n                    (juice-squeezed ?juice)\n                    (halved ?lemon)\n                  )\n    :effect (and\n              (faucet-wet ?faucet)\n              (faucet-clean ?faucet)\n              (faucet-shiny ?faucet)\n              (juice-on-faucet ?juice)\n            )\n  )\n\n  ;; Action to wash the faucet after scouring\n(:action wash-faucet\n    :parameters (?faucet - entity ?water - entity ?juice - entity)\n    :precondition (juice-on-faucet ?juice)\n    :effect (and\n              (water-in-sink ?water)\n              (faucet-clean ?faucet)\n              (not (juice-on-faucet ?juice))\n              (not (faucet-wet ?faucet)) ;; 假设清洗后水分被移除\n            )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Your Hair\n\nSteps:\n- start_with_unprocessed_hair npc\n- check_conditioner my_hair conditioner\n- juice-lemon water faucet\n- dilute_lemon_juice pitcher\n- pour_soap_into_fridge user1 bottle1\n- spray_with_lemon_juice alice\n- sliplargerbend npc\n- wash_wicks npc\n\nDescriptions:\n- Start with unprocessed hair.\n- Pre-condition your hair with a deep conditioner.\n- Juice several lemons.\n- Dilute the lemon juice.\n- Pour the solution into a spray bottle.\n- Spray your hair with lemon juice solution.\n- Sit outside in bright sunshine.\n- Wash your hair.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Clean Your Home Efficiently.\n- pickup_items item1 basket1\n- clean_surfaces tv cleaner1\n- clean_surfaces window1 cleaner1\n- clean_surfaces window2 cleaner1\n- pickup_items item2 basket1\n- shake_rugs rug1\n- shake_rugs rug2\n- empty_trash basket1 trash_bag1\n- empty_trash basket1 trash_bag2\n- dust_room living_room\n- dust_room kitchen\n- dust_room bathroom\n\nDescriptions:\n- ######Pick up and put away stray items and throw trash into waste baskets.\n- ######Dust, again going through the entire house room by room.\n- ######Take a large trash bag and go through each room emptying the waste baskets and trash cans.\n- ######Use a spray cleaner and rags or paper towels to clean any glass surfaces, including the TV screens.\n- First pick up any throw rugs and inside door mats and shake them outside.\n- ######Enjoy your clean home!\n\nPDDL Actions:\n(:action pickup_items\n    :parameters (?item - item ?basket - basket)\n    :precondition (and\n                    (stray_item ?item)\n                    (empty ?basket))\n    :effect (and\n              (in_basket ?item ?basket)\n              (organized ?item)\n              (full ?basket))\n  )\n\n  ;; 动作2：清洁房间的灰尘\n(:action dust_room\n    :parameters (?room - room)\n    :precondition (dusty ?room)\n    :effect (and\n              (cleaned_room ?room)\n              (not (dusty ?room)))\n  )\n\n  ;; 动作3：清空垃圾桶到垃圾袋\n(:action empty_trash\n    :parameters (?basket - basket ?dish - dish)\n    :precondition (full ?basket)\n    :effect (and\n              (empty ?basket)\n              (trash_disposed ?dish))\n  )\n\n  ;; 动作4：使用喷雾清洁剂清洁表面\n(:action clean_surfaces\n    :parameters (?surface - surface ?cleaner - cleaner)\n    :precondition (dirty_surface ?surface)\n    :effect (cleaned_surface ?surface)\n  )\n\n  ;; 动作5：摇动地毯和门垫以清洁\n(:action shake_rugs\n    :parameters (?rug - rug)\n    :precondition (dirty_rug ?rug)\n    :effect (cleaned_rug ?rug)\n  )\n\n  ;; 动作6：享受干净的家\n(:action enjoy_clean_home\n    :parameters ()\n    :precondition ()\n    :effect ()\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Lighten Clothing with Bleach\n\nSteps:\n- read_tag npc\n- gather_garments npc\n- fill_spice_bottle user1 bottle1\n- spritz_with_garnish npc\n- wash_clothes npc\n\nDescriptions:\n- Read the tag to determine if the fabric is safe to bleach.\n- Spread the garment on an old towel in a well-ventilated space.\n- Fill a spray bottle with bleach and water.\n- Spritz the garment until it's as lightened as you like.\n- Machine wash the clothes according to the care label.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Fold Bath Towels for Quick Hanging at Home.\n- fold-lengthwise towel1\n- fold-half-twice towel1\n- store-in-closet towel1\n- hang-on-rack towel1\n\nDescriptions:\n- Fold the towel in thirds lengthwise.\n- Fold in half, and then in half again.\n- Store the towel in the linen closet.\n- To go from the closet for hanging, simply unfold the final fold and hang on the towel rack.\n\nPDDL Actions:\n(:action fold-lengthwise\n    :parameters (?towel - towel)\n    :precondition (and (not (folded ?towel)) (not (smaller ?towel)))\n    :effect (and (folded ?towel) (smaller ?towel)))\n(:action fold-half-twice\n    :parameters (?towel - towel)\n    :precondition (and (folded ?towel) (smaller ?towel) (not (thicker ?towel)))\n    :effect (and (thicker ?towel)))\n(:action store-in-closet\n    :parameters (?towel - towel)\n    :precondition (and (thicker ?towel) (not (in-closet ?towel)) (not (emptiness ?towel)))\n    :effect (and (in-closet ?towel) (emptiness ?towel)))\n(:action hang-on-rack\n    :parameters (?towel - towel)\n    :precondition (and (in-closet ?towel) (folded ?towel) (not (on-rack ?towel)) (emptiness ?towel))\n    :effect (and (on-rack ?towel) (not (folded ?towel)) (openness ?towel))))\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Towels\n\nSteps:\n- mix_blend_with_cleaning_products alice\n- wear_rubber_gens velveeta\n- mix_soap alice\n- choose_blend_product alice\n\nDescriptions:\n- Never mix bleach with other cleaning products.\n- Wear rubber gloves to protect your hands when handling bleach.\n- Mix bleach solutions outdoors or in a well-ventilated room.\n- Choose a bleach product recommended for use in the laundry.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Paint Bare Wood.\n- acquire_tool alice paintbrush1\n- acquire_paint alice oil_paint1\n- apply_under_coat alice paintbrush1 oil_paint1 barewood1\n- apply_second_coat alice paintbrush1 oil_paint1 barewood1\n- finish_painting alice barewood1\n\nDescriptions:\n- Acquire oil based paints, which air dry slowly.\n- The under-coat should be thin, and smooth, move your paint brush down the wood, don't paint up or horizontally.\n- Paint the second coat, but be much more careful this time, make sure there are no paint bubbles appearing and smooth out any drips or pools left over from the under-coat.\n- Be the most precise with this.\n- Finished.\n\nPDDL Actions:\n(:action acquire_paint\n    :parameters (?p - person ?m - material)\n    :precondition (and\n      (not (has_paint ?p ?m))\n    )\n    :effect (has_paint ?p ?m)\n  )\n\n  ;; 动作2：获取画笔\n(:action acquire_tool\n    :parameters (?p - person ?t - tool)\n    :precondition (and\n      (not (has_tool ?p ?t))\n    )\n    :effect (has_tool ?p ?t)\n  )\n\n  ;; 动作3：清洁工具\n(:action clean_tool\n    :parameters (?t - tool)\n    :precondition (and\n      (dirty ?t)\n    )\n    :effect (clean ?t)\n  )\n\n  ;; 动作4：涂抹底漆\n(:action apply_under_coat\n    :parameters (?p - person ?t - tool ?m - material ?o - object)\n    :precondition (and\n      (has_paint ?p ?m)\n      (has_tool ?p ?t)\n      (clean ?t)\n      (present ?o)\n      (not (painted_under_coat ?o))\n    )\n    :effect (and\n      (paint_applied ?o ?m)\n      (painted_under_coat ?o)\n      (dirty ?t)\n    )\n  )\n\n  ;; 动作5：涂抹第二层涂料\n(:action apply_second_coat\n    :parameters (?p - person ?t - tool ?m - material ?o - object)\n    :precondition (and\n      (has_paint ?p ?m)\n      (has_tool ?p ?t)\n      (dirty ?t)\n      (present ?o)\n      (painted_under_coat ?o)\n      (not (painted_second_coat ?o))\n    )\n    :effect (and\n      (paint_applied ?o ?m)\n      (painted_second_coat ?o)\n      (dirty ?t)\n    )\n  )\n\n  ;; 动作6：完成涂漆\n(:action finish_painting\n    :parameters (?p - person ?o - object)\n    :precondition (and\n      (painted_second_coat ?o)\n    )\n    :effect (finished_painting ?o)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Neutralize Bleach\n\nSteps:\n- determine_agent neutralizing agent\n- blend_wood wood\n- clean_wood fir1 log1\n- mix_neutralizer neutralizer mixing_bowl\n- apply_neutralizing agent apply_agent agent\n\nDescriptions:\n- Determine what neutralizing agent you need.\n- Bleach your wood.\n- Rinse the wood.\n- Mix your neutralizer.\n- Apply your neutralizing agent.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Remove Paint from Windows.\n- mix_soap_and_water bucket01 soap_bottle01\n- wet_window window01 bucket01 sponge01\n- open_razor_blade_package razor_blade_package01 razor_blade01\n- scrape_paint window01 razor_blade01\n- buff_window window01 cloth01\n- remove_splatters_with_solvent window01 solvent01\n- spritz_glass_cleaner window01 glass_cleaner_bottle01\n\nDescriptions:\n- You will need a bucket of hot water mixed with dish soap, a clean cloth or sponge, a new safety razor blade and some glass cleaner.\n- Wet the window with the water and dish soap.\n- Position the razor blade.\n- Using slow, smooth motions, start scraping the paint from the window.\n- Once all of the paint has been scraped away, spritz the window with some glass cleaner and use a clean, dry cloth to buff the windows clean.\n- Remove small paint splatters with chemical solvents.\n\nPDDL Actions:\n(:action gather_items\n    :parameters (?items - item)\n    :precondition (not (in_hand ?items))\n    :effect (in_hand ?items)\n  )\n\n  ;;; Action 2: Mix Soap and Water in Bucket\n(:action mix_soap_and_water\n    :parameters (?b - bucket ?sb - soap_bottle)\n    :precondition (and\n      (empty ?b)\n      (full ?sb)\n    )\n    :effect (and\n      (mixed ?b)\n      (not (empty ?b))\n      (not (full ?sb))\n    )\n  )\n\n  ;;; Action 3: Wet the Window with Soap Solution\n(:action wet_window\n    :parameters (?w - window ?b - bucket ?s - sponge)\n    :precondition (and\n      (dry ?w)\n      (mixed ?b)\n      (clean_tool ?s)\n    )\n    :effect (and\n      (wet ?w)\n      (not (dry ?w))\n      (dirty_tool ?s)\n    )\n  )\n\n  ;;; Action 4: Open Razor Blade Package\n(:action open_razor_blade_package\n    :parameters (?rp - razor_blade_package ?rb - razor_blade)\n    :precondition (and\n      (closed ?rp)\n      (not (in_hand ?rb))\n    )\n    :effect (and\n      (open ?rp)\n      (in_hand ?rb)\n      (not (closed ?rp))\n    )\n  )\n\n  ;;; Action 5: Scrape Paint from Window\n(:action scrape_paint\n    :parameters (?w - window ?rb - razor_blade)\n    :precondition (and\n      (wet ?w)\n      (in_hand ?rb)\n      (contains_paint ?w)\n    )\n    :effect (and\n      (not (contains_paint ?w))\n      (dirty_tool ?rb)\n      (clean ?w)\n    )\n  )\n\n  ;;; Action 6: Spritz Window with Glass Cleaner\n(:action spritz_glass_cleaner\n    :parameters (?w - window ?gcb - glass_cleaner_bottle)\n    :precondition (and\n      (not (contains_paint ?w))\n      (has_glass_cleaner ?gcb)\n      (not (opaque ?w))\n    )\n    :effect (and\n      (opaque ?w)\n      (not (has_glass_cleaner ?gcb))\n    )\n  )\n\n  ;;; Action 7: Buff Window with Cloth\n(:action buff_window\n    :parameters (?w - window ?c - cloth)\n    :precondition (and\n      (opaque ?w)\n      (clean_cloth ?c)\n    )\n    :effect (and\n      (transparent ?w)\n      (dirty_cloth ?c)\n      (not (opaque ?w))\n    )\n  )\n\n  ;;; Action 8: Remove Small Paint Splatters with Solvent\n(:action remove_splatters_with_solvent\n    :parameters (?w - window ?s - solvent)\n    :precondition (and\n      (contains_splatters ?w)\n      (has_solvent ?s)\n    )\n    :effect (and\n      (not (contains_splatters ?w))\n      (not (has_solvent ?s))\n    )\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Skin with Peroxide\n\nSteps:\n- garnish-soap bar soap1 container1\n- add_hydrogen_peroxide container1\n- create_paste_and_spapyrus velveeta\n- apply_ingredients_to_masking agent1 razor1\n- sliplargerbeads alice\n- clean_paste_with_water alice\n- lighten_skin npc\n\nDescriptions:\n- Grate 2 tbsp (30 g) of mild bar soap into a plastic container.\n- Add 2 US tbsp (30 mL) of 3% hydrogen peroxide to the container.\n- Use a plastic spoon or wooden spatula to create a paste.\n- Apply the paste to your dark skin patch using the spoon or spatula.\n- Allow the paste to sit for 10 minutes.\n- Rinse off the paste using warm water.\n- Use the treatment as often as once a week until your skin lightens.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is get-papyrus.\n- get shell npc garage\n- go in npc garage work_station\n- flatten_sheet npc work_station sheet\n- polish_sheet npc work_station sheet shell\n- cut_sheet npc garage sheet scissors papyrus\n\nDescriptions:\n- Replace the wet linen sheets with dry ones. You should do this every few hours. Be careful when removing the wet linen. Peel it off of the papyrus gently. The drying process should take approximately 72 hours.\n- Polish the papyrus. This step isn't absolutely necessary, but it will make the papyrus look nicer and more finished. Use a shell or smooth piece of ivory. Any type of shell that is smooth and without ridges will do. Rub the shell or ivory over the sheet of paper until it appears to be shinier than it was.\n- Flatten the sheet. The paper may not be completely flat after you remove it from the wooden boards. Put the paper under a stone slab for up to 6 days to make it completely flat.\n\nPDDL Actions:\n(:action get ; pick up an item and put it in the inventory\n      :parameters (?item - item ?p - player ?l1 - location) \n      :precondition (and (at ?p ?l1) (at ?item ?l1))\n      :effect (and (inventory ?p ?item) (not (at ?item ?l1)))\n   )\n(:action go ; navigate to an adjacent location \n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action cut_sheet ; \n      :parameters (?p - player ?loc - location ?sheet - sheet ?scissors - scissors ?papyrus - papyrus) \n      :precondition (and (inventory ?p ?scissors) (smooth ?sheet))\n      :effect (inventory ?p ?papyrus)\n   )\n)\n(:action polish_sheet ; \n      :parameters (?p - player ?loc - location ?sheet - sheet ?shell - shell) \n      :precondition (and (at ?p ?loc) (has_hard_surface ?loc) (inventory ?p ?sheet) (inventory ?p ?shell) (very_flat ?sheet))\n      :effect (and (not (inventory ?p ?shell)) (smooth ?sheet))\n   )\n(:action flatten_sheet ; \n      :parameters (?p - player ?loc - location ?sheet - sheet) \n      :precondition (and (at ?p ?loc) (has_hard_surface ?loc) (inventory ?p ?sheet) (flat ?sheet))\n      :effect (and (very_flat ?sheet) (not (smooth ?sheet)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Bleach Paper\n\nSteps:\n- prepare_acetone_wicks alice\n- put_gens_in_machine npc\n- hold_ink_stained_paper npc\n- wash_paper npc work_station\n- let_paper_wicks_open wick1\n\nDescriptions:\n- Prepare an acetone wash in a glass casserole pan.\n- Put on a pair of rubber gloves or prepare a set of metal tongs.\n- Hold the ink-stained paper under the acetone for 3 minutes.\n- Place the washed paper on a bed of paper towels.\n- Let the paper completely air dry.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is fill-inventory.\n- go south npc parkinglot pond\n- get_water npc pond water\n- go north npc pond parkinglot\n- go north npc parkinglot park\n- go east npc park store\n- get npc store bandage\n- go west npc store park\n- go west npc park car\n- go west npc car brickhouse\n- loot_shelter npc brickhouse food\n\nDescriptions:\n- Learn basic first-aid to treat minor injuries. Injuries are unfortunately inevitable, and they can range from minor to serious. Develop at least a basic knowledge of first aid to treat the injuries you or a partner may encounter. When searching for supplies, take any first aid gear you may find and build a basic first aid kit.\n- Purify any water you drink that isn’t from a sealed bottle. A waterborne illness can be life-threatening in a survival situation. If need to use any unbottled water for drinking, always purify it first. The most common method is boiling the water for 1 minute to kill any pathogens. Then filter out larger objects by pouring the water through a fine net or cloth.\n\nPDDL Actions:\n(:action get_water ; get water from a location that has a water source like a lake.\n      :parameters (?p - player ?loc - location ?water - water) \n      :precondition (and (at ?p ?loc) (has_water_source ?loc))\n      :effect (and (inventory ?p ?water) (not (treated ?water)))\n   )\n(:action barter_food_for_healing ; get food in exchange for healing.\n      :parameters (?p - player ?p_inj - player ?water - water ?bandage - bandage ?food - food ?l -location) \n      :precondition (and (inventory ?p ?water) (inventory ?p ?bandage) (is_injured ?p_inj) (at ?p ?l) (at ?p_inj ?l))\n      :effect (and (not (is_injured ?p_inj)) (gettable ?food)  )\n   )\n\n   \n)\n(:action gofish \n      :parameters (?p - player ?l - location ?fp - fishingpole ?f - fish)\n      :precondition (and (at ?p ?l) (inventory ?p ?fp) (haslake ?l) (at ?f ?l))\n      :effect (and (gettable ?f) )\n   )\n(:action go\n      :parameters (?dir - direction ?p - player ?l1 - location ?l2 - location) \n      :precondition (and (at ?p ?l1) (connected ?l1 ?dir ?l2) (not (blocked ?l1 ?dir ?l2)))\n      :effect (and (at ?p ?l2) (not (at ?p ?l1)))\n   )\n(:action get\n      :parameters (?p - player ?l - location ?i - item)\n      :precondition (and (at ?p ?l) (at ?i ?l) (gettable ?i))\n      :effect (and (not (at ?i ?l)) (inventory ?p ?i))\n   )\n(:action loot_shelter ; steal food from location that is occupied.\n      :parameters (?p - player ?loc - location ?food - food) \n      :precondition (and (at ?food ?loc) (at ?p ?loc) (is_occupied ?loc))\n      :effect (and (inventory ?p ?food) (not (at ?food ?loc)))\n   )\n(:action break_car_window ; steal food from car.\n      :parameters (?p - player ?car - car ?rock - rock ?item - item) \n      :precondition (and (at ?p ?car) (inventory ?p ?rock) (has_windows ?car) (at ?item ?car))\n      :effect (and (gettable ?item) (not (inventory ?p ?rock)) (not (has_windows ?car)))\n   )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Do a Bleach Bath\n\nSteps:\n- fill bathtub water\n-  ((in_container chlorine_blend) (sealed container))\n- soak_wicks npc\n- clean_wicks npc\n- Moisturize_body bath\n- blend_bath npc bathroom\n\nDescriptions:\n- Fill a bathtub with 40 US gal (150 L) of water.\n- Mix in ⁄4–⁄2  c (59–118 ml) of chlorine bleach.\n- Soak in the tub for up to 10 minutes.\n- Rinse off in warm water.\n- Moisturize your body with lotion after your bath.\n- Take bleach baths up to 3 times a week.\n\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]