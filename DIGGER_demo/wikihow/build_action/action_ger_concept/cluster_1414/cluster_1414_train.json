[
    "Sure! Below are the PDDL actions for the task \"How to Apply Glitter on Nail Polish\" based on the given steps and descriptions.\n\n```lisp\n(:action clean_nails\n    :parameters (?p - person ?scissors - scissors)\n    :precondition (and (inventory ?p ?scissors))\n    :effect (and (nails_clean ?p) (nails_cut ?p) (nails_shaped ?p))\n)\n\n(:action apply_base_coat\n    :parameters (?p - person ?base_coat - polish)\n    :precondition (and (nails_clean ?p))\n    :effect (and (base_coat_applied ?p))\n)\n\n(:action apply_base_color\n    :parameters (?p - person ?base_color - polish)\n    :precondition (and (base_coat_applied ?p))\n    :effect (and (base_color_applied ?p))\n)\n\n(:action dry_base_color\n    :parameters (?p - person)\n    :precondition (and (base_color_applied ?p))\n    :effect (and (base_color_dried ?p))\n)\n\n(:action block_areas_with_tape\n    :parameters (?p - person ?tape - tape)\n    :precondition (and (inventory ?p ?tape) (base_color_dried ?p))\n    :effect (and (tape_applied ?p))\n)\n\n(:action apply_clear_polish\n    :parameters (?p - person ?clear_polish - polish)\n    :precondition (and (tape_applied ?p))\n    :effect (and (clear_polish_applied ?p))\n)\n\n(:action remove_tape\n    :parameters (?p - person ?tape - tape)\n    :precondition (and (clear_polish_applied ?p))\n    :effect (and (not (tape_applied ?p)) (tape_removed ?p))\n)\n\n(:action sprinkle_glitter\n    :parameters (?p - person ?glitter - glitter)\n    :precondition (and (clear_polish_applied ?p) (tape_removed ?p))\n    :effect (and (glitter_applied ?p))\n)\n\n(:action brush_excess_glitter\n    :parameters (?p - person)\n    :precondition (and (glitter_applied ?p) (waited_1_minute ?p))\n    :effect (and (excess_glitter_brushed ?p))\n)\n\n(:action repeat_process\n    :parameters (?p - person)\n    :precondition (and (excess_glitter_brushed ?p))\n    :effect (and (nails_glittered ?p))\n)\n\n(:action apply_clear_top_coat\n    :parameters (?p - person ?top_coat - polish)\n    :precondition (and (nails_glittered ?p))\n    :effect (and (top_coat_applied ?p))\n)\n\n(:action clean_manicure\n    :parameters (?p - person)\n    :precondition (and (top_coat_applied ?p))\n    :effect (and (manicure_cleaned ?p))\n)\n```\n\nThese actions reflect the steps needed to apply glitter on nail polish, including cleaning, applying base coats, using tape to block areas, applying clear polish, sprinkling glitter, and cleaning up. Each action includes the relevant parameters, preconditions, and effects that capture the state changes of the entities involved.",
    "Based on the task \"How to Make Glitter Tape\" and the provided steps and descriptions, I will generate the PDDL actions. The task involves acquiring glitter, applying it to tape, and preparing it for use. I will focus on the relevant entity states and transitions for each step.\n\n### PDDL Actions\n\n```lisp\n(:action acquire_gems; acquire loose glitter\n    :parameters (?p - player ?fairy_moss - fairy_moss)\n    :precondition (and (inventory ?p ?fairy_moss) (for_sale ?fairy_moss))\n    :effect (and (acquired ?fairy_moss) (not (for_sale ?fairy_moss)))\n)\n\n(:action dip_item; dip tape into glitter\n    :parameters (?p - player ?work_station - work_station ?track - track)\n    :precondition (and (inventory ?p ?work_station) (inventory ?p ?track) (created ?work_station))\n    :effect (glitter_covered ?track)\n)\n\n(:action gems_covered_with_glitter; ensure tape is covered with glitter\n    :parameters (?alice - player ?track - track)\n    :precondition (and (inventory ?alice ?track) (glitter_covered ?track))\n    :effect (glitter_fully_covered ?track)\n)\n\n(:action clean_gems; shake off excess glitter\n    :parameters (?alice - player ?wand1 - wand)\n    :precondition (and (inventory ?alice ?wand1) (glitter_fully_covered ?track))\n    :effect (excess_glitter_removed ?track)\n)\n\n(:action make_gems_tape; finalize the glitter tape\n    :parameters (?alice - player ?track - track)\n    :precondition (and (inventory ?alice ?track) (excess_glitter_removed ?track))\n    :effect (glitter_tape_ready ?track)\n)\n```\n\n### Explanation of Actions:\n\n1. **acquire_gems**: This action represents acquiring loose glitter. The precondition checks if the `fairy_moss` is in the player's inventory and is for sale. The effect is that the glitter is acquired.\n\n2. **dip_item**: This action involves dipping the tape into glitter at the workstation. The precondition checks that both the workstation and track are in the player's inventory and that the workstation is created. The effect is that the track (tape) is covered with glitter.\n\n3. **gems_covered_with_glitter**: This ensures that the tape is fully covered in glitter. The precondition checks if the track is already glitter covered. The effect is that the track is now fully covered with glitter.\n\n4. **clean_gems**: This action represents shaking off excess glitter using a wand. The precondition is that the track is fully covered with glitter. The effect is that excess glitter is removed.\n\n5. **make_gems_tape**: This final action prepares the glitter tape for use. The precondition checks if the excess glitter has been removed. The effect is that the glitter tape is ready.",
    "Here are the PDDL actions based on the given task \"How to Do Holly Nail Art\":\n\n### PDDL Actions\n\n#### Action: put_polish_on_flat_surface\n```lisp\n(:action put_polish_on_flat_surface\n   :parameters (?p - player ?bead - bead ?color - color)\n   :precondition (and (at ?p flat_surface) (not (on_surface ?bead)))\n   :effect (and (on_surface ?bead) (colored ?bead ?color))\n)\n```\n\n#### Action: create_holly_leaves\n```lisp\n(:action create_holly_leaves\n   :parameters (?p - player)\n   :precondition (and (at ?p flat_surface) (on_surface bead1) (colored bead1 green))\n   :effect (and (holly_leaves_created ?p))\n)\n```\n\n#### Action: add_holly_berries_to_duster\n```lisp\n(:action add_holly_berries_to_duster\n   :parameters (?p - player ?duster - duster ?bead - bead)\n   :precondition (and (at ?p flat_surface) (holly_leaves_created ?p) (on_surface ?bead) (colored ?bead red))\n   :effect (and (holly_berries_added ?duster) (not (on_surface ?bead)))\n)\n```\n\n#### Action: apply_topcoat\n```lisp\n(:action apply_topcoat\n   :parameters (?p - player ?work_station - work_station)\n   :precondition (and (at ?p ?work_station) (holly_berries_added duster))\n   :effect (and (topcoat_applied ?work_station))\n)\n```\n\n### Descriptions and State Changes\n\n1. **put_polish_on_flat_surface bead1**\n   - **Parameters:** ?p (player), ?bead (bead), ?color (color)\n   - **Precondition:** The player is at the flat surface and the bead is not on the surface.\n   - **Effect:** The bead is now on the surface and colored with the specified color.\n\n2. **create_holly_leaves npc**\n   - **Parameters:** ?p (player)\n   - **Precondition:** The player is at the flat surface, bead1 is on the surface and colored green.\n   - **Effect:** Holly leaves are created by the player.\n\n3. **add_holly_berries_to_duster npc**\n   - **Parameters:** ?p (player), ?duster (duster), ?bead (bead)\n   - **Precondition:** The player is at the flat surface, holly leaves are created, bead is on the surface and colored red.\n   - **Effect:** Holly berries are added to the duster and the bead is removed from the surface.\n\n4. **apply_topcoat npc work_station**\n   - **Parameters:** ?p (player), ?work_station (work station)\n   - **Precondition:** The player is at the work station and holly berries are added to the duster.\n   - **Effect:** Topcoat is applied at the work station.\n\nThese actions encapsulate the task of creating holly nail art, focusing on the relevant state changes of the entities involved (beads, duster, and work station).",
    "Here are the PDDL actions for the task \"How to Do Ravenclaw Nails\":\n\n```pddl\n;; Action 1: Remove old nail varnish\n(:action remove_old_varnish\n    :parameters (?p - person ?n - nail)\n    :precondition (and\n      (has_old_varnish ?n)\n    )\n    :effect (and\n      (not (has_old_varnish ?n))\n      (clean ?n)\n    )\n)\n\n;; Action 2: Shape nails to personal preference\n(:action shape_to_personal_preference\n    :parameters (?p - person ?n - nail)\n    :precondition (and\n      (clean ?n)\n    )\n    :effect (shaped ?n)\n)\n\n;; Action 3: Dry wicks\n(:action dry_wicks\n    :parameters (?w - wick)\n    :precondition (and\n      (wet ?w)\n    )\n    :effect (dry ?w)\n)\n\n;; Action 4: Choose nail varnish colour\n(:action choose_colour\n    :parameters (?p - person ?v - varnish)\n    :precondition (and\n      (not (has_chosen_colour ?p ?v))\n    )\n    :effect (has_chosen_colour ?p ?v)\n)\n\n;; Action 5: Get nail art pencil\n(:action get_nail_artist_pencil\n    :parameters (?p - person ?t - tool)\n    :precondition (and\n      (not (has_tool ?p ?t))\n    )\n    :effect (has_tool ?p ?t)\n)\n\n;; Action 6: Apply base coat\n(:action apply_base_coat\n    :parameters (?p - person ?n - nail ?v - varnish)\n    :precondition (and\n      (clean ?n)\n      (shaped ?n)\n      (has_chosen_colour ?p ?v)\n    )\n    :effect (and\n      (base_coat_applied ?n ?v)\n      (wet ?n)\n    )\n)\n\n;; Action 7: Wait for nails to dry\n(:action wait_for_nails_to_dry\n    :parameters (?n - nail)\n    :precondition (and\n      (wet ?n)\n    )\n    :effect (dry ?n)\n)\n\n;; Action 8: Apply second coat\n(:action apply_second_coat\n    :parameters (?p - person ?n - nail ?v - varnish)\n    :precondition (and\n      (dry ?n)\n      (base_coat_applied ?n ?v)\n    )\n    :effect (and\n      (second_coat_applied ?n ?v)\n      (wet ?n)\n    )\n)\n\n;; Action 9: Wait for second coat to dry\n(:action wait_for_second_coat_to_dry\n    :parameters (?n - nail)\n    :precondition (and\n      (wet ?n)\n      (second_coat_applied ?n ?v)\n    )\n    :effect (dry ?n)\n)\n\n;; Action 10: Apply nail art\n(:action apply_nail_art\n    :parameters (?p - person ?n - nail ?t - tool ?v - varnish)\n    :precondition (and\n      (dry ?n)\n      (second_coat_applied ?n ?v)\n      (has_tool ?p ?t)\n    )\n    :effect (and\n      (nail_art_applied ?n ?v)\n      (wet ?n)\n    )\n)\n\n;; Action 11: Wait for nail art to dry\n(:action wait_for_nail_art_to_dry\n    :parameters (?n - nail)\n    :precondition (and\n      (wet ?n)\n      (nail_art_applied ?n ?v)\n    )\n    :effect (dry ?n)\n)\n\n;; Action 12: Apply top coat\n(:action apply_top_coat\n    :parameters (?p - person ?n - nail ?v - varnish)\n    :precondition (and\n      (dry ?n)\n      (nail_art_applied ?n ?v)\n    )\n    :effect (and\n      (top_coat_applied ?n ?v)\n      (wet ?n)\n    )\n)\n\n;; Action 13: Wait for top coat to dry\n(:action wait_for_top_coat_to_dry\n    :parameters (?n - nail)\n    :precondition (and\n      (wet ?n)\n      (top_coat_applied ?n ?v)\n    )\n    :effect (dry ?n)\n)\n\n;; Action 14: Finish with painting\n(:action finish_with_painting\n    :parameters (?p - person ?n - nail)\n    :precondition (and\n      (dry ?n)\n      (top_coat_applied ?n ?v)\n    )\n    :effect (finished_nails ?n)\n)\n\n;; Action 15: Dry nails in bedroom\n(:action dry_nails\n    :parameters (?p - person ?n - nail ?b - bedroom)\n    :precondition (and\n      (finished_nails ?n)\n      (created ?b)\n    )\n    :effect (nails_dried ?n)\n)\n```\n\nThese actions capture the steps and state changes involved in doing Ravenclaw nails, ensuring that each step's preconditions and effects accurately reflect the changes in the state of the nails and other entities involved.",
    "Here are the PDDL actions for the task \"How to Remove Glitter\":\n\n```lisp\n(:action clean_gems\n    :parameters (?user - user ?alice - alice)\n    :precondition (and (selected ?user) (selected ?alice))\n    :effect (clean ?gems)\n)\n\n(:action use_vacuum_hose\n    :parameters (?user - user ?fairy_moss - fairy_moss)\n    :precondition (and (selected ?user) (purchased ?fairy_moss))\n    :effect (and (clean ?floor) (not (messy ?floor)))\n)\n\n(:action remove_all_gems\n    :parameters (?glitter_tape - glitter_tape ?velveeta - velveeta)\n    :precondition (and (in_pieces ?glitter_tape) (on_counter ?velveeta))\n    :effect (and (remove ?glitter_bits) (clean ?surface))\n)\n```\n\n### Explanation of the PDDL Actions:\n\n1. **clean_gems**\n   - **Action Name:** clean_gems\n   - **Parameters:** \n     - `?user` (user)\n     - `?alice` (alice)\n   - **Preconditions:** \n     - The user and Alice must be selected.\n   - **Effect:** \n     - The gems are cleaned.\n\n2. **use_vacuum_hose**\n   - **Action Name:** use_vacuum_hose\n   - **Parameters:**\n     - `?user` (user)\n     - `?fairy_moss` (fairy_moss)\n   - **Preconditions:**\n     - The user must be selected.\n     - The fairy moss must be purchased.\n   - **Effect:**\n     - The floor is cleaned.\n     - The floor is no longer messy.\n\n3. **remove_all_gems**\n   - **Action Name:** remove_all_gems\n   - **Parameters:**\n     - `?glitter_tape` (glitter_tape)\n     - `?velveeta` (velveeta)\n   - **Preconditions:**\n     - The glitter tape must be in pieces.\n     - The velveeta must be on the counter.\n   - **Effect:**\n     - The glitter bits are removed.\n     - The surface is cleaned.\n```\n\nThese actions reflect the steps required to remove glitter as described in the task. Each action has been defined with appropriate preconditions and effects to ensure the state changes of the entities involved are accurately represented.",
    "Based on the provided task \"How to Do Ombre Nails\" and the descriptions, I will generate the PDDL actions accordingly. Here are the actions:\n\n```pddl\n(define (domain ombre_nails)\n  (:requirements :strips :typing)\n  (:types person tool material object)\n\n  ;; Action 1: Clean nails\n  (:action clean_nails\n    :parameters (?p - person)\n    :precondition (and\n      (not (clean_nails ?p))\n    )\n    :effect (clean_nails ?p)\n  )\n\n  ;; Action 2: Apply clear base coat\n  (:action apply_clear_coat\n    :parameters (?p - person ?m - material ?o - object)\n    :precondition (and\n      (clean_nails ?p)\n      (has_material ?p ?m)\n      (not (clear_coat_applied ?o))\n    )\n    :effect (clear_coat_applied ?o)\n  )\n\n  ;; Action 3: Apply base color coat\n  (:action apply_color_coat\n    :parameters (?p - person ?m - material ?o - object)\n    :precondition (and\n      (clear_coat_applied ?o)\n      (has_material ?p ?m)\n      (not (color_coat_applied ?o))\n    )\n    :effect (color_coat_applied ?o)\n  )\n\n  ;; Action 4: Add first coat of glitter\n  (:action add_glitter_coat\n    :parameters (?p - person ?m - material ?o - object)\n    :precondition (and\n      (color_coat_applied ?o)\n      (has_material ?p ?m)\n      (not (glitter_coat_applied ?o))\n    )\n    :effect (glitter_coat_applied ?o)\n  )\n\n  ;; Action 5: Paint second coat of glitter\n  (:action paint_with_glitter\n    :parameters (?p - person ?m - material ?o - object)\n    :precondition (and\n      (glitter_coat_applied ?o)\n      (has_material ?p ?m)\n      (not (second_glitter_coat_applied ?o))\n    )\n    :effect (second_glitter_coat_applied ?o)\n  )\n\n  ;; Action 6: Add clear topcoat\n  (:action add_clear_topcoat\n    :parameters (?p - person ?m - material ?o - object)\n    :precondition (and\n      (second_glitter_coat_applied ?o)\n      (has_material ?p ?m)\n      (not (clear_topcoat_applied ?o))\n    )\n    :effect (clear_topcoat_applied ?o)\n  )\n)\n```\n\n### Explanation of the Actions:\n1. **clean_nails**: This action cleans the nails of the person.\n   - **Parameters**: ?p (person)\n   - **Preconditions**: The person's nails are not clean.\n   - **Effect**: The person's nails become clean.\n\n2. **apply_clear_coat**: This action applies a clear base coat.\n   - **Parameters**: ?p (person), ?m (material), ?o (object)\n   - **Preconditions**: The person's nails are clean, they have the material, and the clear coat is not yet applied to the object.\n   - **Effect**: The clear coat is applied to the object.\n\n3. **apply_color_coat**: This action applies a base color coat.\n   - **Parameters**: ?p (person), ?m (material), ?o (object)\n   - **Preconditions**: The clear coat is applied, the person has the material, and the color coat is not yet applied to the object.\n   - **Effect**: The color coat is applied to the object.\n\n4. **add_glitter_coat**: This action adds the first coat of glitter.\n   - **Parameters**: ?p (person), ?m (material), ?o (object)\n   - **Preconditions**: The color coat is applied, the person has the material, and the glitter coat is not yet applied to the object.\n   - **Effect**: The glitter coat is applied to the object.\n\n5. **paint_with_glitter**: This action paints the second coat of glitter.\n   - **Parameters**: ?p (person), ?m (material), ?o (object)\n   - **Preconditions**: The first glitter coat is applied, the person has the material, and the second glitter coat is not yet applied to the object.\n   - **Effect**: The second glitter coat is applied to the object.\n\n6. **add_clear_topcoat**: This action adds a clear topcoat.\n   - **Parameters**: ?p (person), ?m (material), ?o (object)\n   - **Preconditions**: The second glitter coat is applied, the person has the material, and the clear topcoat is not yet applied to the object.\n   - **Effect**: The clear topcoat is applied to the object.\n\nThese actions accurately reflect the steps and state changes required to complete the task of creating ombre nails.",
    "Based on the task \"How to Remove Glitter from Your Clothes\" and the provided steps, here are the PDDL actions:\n\n```lisp\n(:action remove_gems ; use coconut oil to remove glitter from face and skin\n    :parameters (?co - coconut_oil ?face - face)\n    :precondition (and (inventory ?co) (glitter_on ?face))\n    :effect (and (not (glitter_on ?face)) (glitter_removed ?face))\n)\n\n(:action remove_glitter_from_hair ; use olive oil to remove glitter from hair\n    :parameters (?hair - hair ?oo - olive_oil)\n    :precondition (and (inventory ?oo) (glitter_on ?hair))\n    :effect (and (not (glitter_on ?hair)) (glitter_removed ?hair))\n)\n\n(:action vacuum_floor ; vacuum the carpet with a hose attachment\n    :parameters (?vacuum - vacuum ?rug - rug)\n    :precondition (and (inventory ?vacuum) (glitter_on ?rug))\n    :effect (and (not (glitter_on ?rug)) (clean ?rug))\n)\n\n(:action wet_cloth ; use a wet cloth on tile and hardwood flooring\n    :parameters (?cloth - cloth ?floor - floor)\n    :precondition (and (wet ?cloth) (glitter_on ?floor))\n    :effect (and (not (glitter_on ?floor)) (clean ?floor))\n)\n\n(:action get ; pick up an item and put it in the inventory\n    :parameters (?item - item)\n    :precondition (and (not (inventory ?item)))\n    :effect (and (inventory ?item))\n)\n\n(:action make_wet ; wet the cloth\n    :parameters (?cloth - cloth ?water - water)\n    :precondition (and (inventory ?cloth) (inventory ?water))\n    :effect (and (wet ?cloth))\n)\n```\n\n### Explanation of Actions:\n\n1. **remove_gems**\n   - **Parameters**: `?co` (coconut oil), `?face` (face)\n   - **Preconditions**: `coconut_oil` is in the inventory, and `glitter` is on the `face`.\n   - **Effect**: Removes `glitter` from the `face`.\n\n2. **remove_glitter_from_hair**\n   - **Parameters**: `?hair` (hair), `?oo` (olive oil)\n   - **Preconditions**: `olive_oil` is in the inventory, and `glitter` is on the `hair`.\n   - **Effect**: Removes `glitter` from the `hair`.\n\n3. **vacuum_floor**\n   - **Parameters**: `?vacuum` (vacuum), `?rug` (rug)\n   - **Preconditions**: `vacuum` is in the inventory, and `glitter` is on the `rug`.\n   - **Effect**: Cleans the `rug` by removing the `glitter`.\n\n4. **wet_cloth**\n   - **Parameters**: `?cloth` (cloth), `?floor` (floor)\n   - **Preconditions**: The `cloth` is wet, and `glitter` is on the `floor`.\n   - **Effect**: Cleans the `floor` by removing the `glitter`.\n\n5. **get**\n   - **Parameters**: `?item` (item)\n   - **Preconditions**: The `item` is not already in the inventory.\n   - **Effect**: Adds the `item` to the inventory.\n\n6. **make_wet**\n   - **Parameters**: `?cloth` (cloth), `?water` (water)\n   - **Preconditions**: `cloth` and `water` are in the inventory.\n   - **Effect**: Makes the `cloth` wet.\n\nThese actions ensure the task of removing glitter from various surfaces and body parts is accurately represented in PDDL, with the appropriate preconditions and effects reflecting the state changes of the entities involved.",
    "Certainly! Here are the PDDL actions based on the new task \"How to Remove Glitter from Your Hands\":\n\n```lisp\n(:action purchase_rubbing_alcohol\n   :parameters (?npc - npc ?store - location ?alcohol - item)\n   :precondition (and (at ?npc ?store) (available ?alcohol ?store))\n   :effect (and (inventory ?npc ?alcohol) (not (available ?alcohol ?store)))\n)\n\n(:action soak_cotton_pad\n   :parameters (?npc - npc ?alcohol - item ?cotton_pad - item ?location - location)\n   :precondition (and (at ?npc ?location) (inventory ?npc ?alcohol) (inventory ?npc ?cotton_pad))\n   :effect (and (soaked ?cotton_pad) (not (dry ?cotton_pad)))\n)\n\n(:action rub_area_with_glitter\n   :parameters (?npc - npc ?cotton_pad - item ?glitter_area - body_part)\n   :precondition (and (inventory ?npc ?cotton_pad) (soaked ?cotton_pad) (glittery ?glitter_area))\n   :effect (and (not (glittery ?glitter_area)) (clean ?glitter_area))\n)\n\n(:action peel_strips\n   :parameters (?npc - npc ?glitter_area - body_part)\n   :precondition (and (clean ?glitter_area))\n   :effect (and (peeled ?glitter_area) (not (clean ?glitter_area)))\n)\n\n(:action wash_others_with_soap\n   :parameters (?npc - npc ?water - water ?soap - item ?glitter_area - body_part)\n   :precondition (and (at ?npc ?glitter_area) (hot ?water) (inventory ?npc ?soap) (peeled ?glitter_area))\n   :effect (and (not (peeled ?glitter_area)) (clean ?glitter_area))\n)\n```\n\n### Descriptions of Entity States and Actions:\n\n1. **purchase_rubbing_alcohol**\n   - Parameters: `?npc` (the person purchasing), `?store` (location of the store), `?alcohol` (the rubbing alcohol).\n   - Preconditions: The NPC is at the store, and the alcohol is available at the store.\n   - Effects: The NPC has the rubbing alcohol in their inventory, and the alcohol is no longer available at the store.\n\n2. **soak_cotton_pad**\n   - Parameters: `?npc` (the person soaking the pad), `?alcohol` (the rubbing alcohol), `?cotton_pad` (the cotton pad), `?location` (where the action is performed).\n   - Preconditions: The NPC is at the location, and they have both the rubbing alcohol and the cotton pad.\n   - Effects: The cotton pad is soaked, and it is no longer dry.\n\n3. **rub_area_with_glitter**\n   - Parameters: `?npc` (the person rubbing the area), `?cotton_pad` (the soaked cotton pad), `?glitter_area` (the body part with glitter).\n   - Preconditions: The NPC has the soaked cotton pad, and the body part is glittery.\n   - Effects: The body part is no longer glittery and is now clean.\n\n4. **peel_strips**\n   - Parameters: `?npc` (the person peeling), `?glitter_area` (the body part with glitter).\n   - Preconditions: The body part is clean.\n   - Effects: The body part is peeled, and it is no longer clean.\n\n5. **wash_others_with_soap**\n   - Parameters: `?npc` (the person washing), `?water` (the water used), `?soap` (the soap used), `?glitter_area` (the body part).\n   - Preconditions: The NPC is at the body part, the water is hot, they have soap, and the body part is peeled.\n   - Effects: The body part is no longer peeled and is now clean.\n\nThese actions capture the steps and state changes involved in the task of removing glitter from your hands.",
    "Sure, here are the PDDL actions for the task \"How to Get Glitter out of Your Hair\":\n\n```lisp\n;; Action 1: Style hair with glitter\n(:action style_with_glitter\n    :parameters (?a - person ?w - wand)\n    :precondition (and\n                    (not (styled_with_glitter ?a))\n                    (available ?w)\n                  )\n    :effect (styled_with_glitter ?a)\n  )\n\n;; Action 2: Create barrier with hairspray\n(:action create_bar\n    :parameters (?a - person ?h - hairspray)\n    :precondition (and\n                    (styled_with_glitter ?a)\n                    (not (barrier_created ?a))\n                    (available ?h)\n                  )\n    :effect (barrier_created ?a)\n  )\n\n;; Action 3: Put oil in hair\n(:action put_oil_in_drink\n    :parameters (?a - person)\n    :precondition (and\n                    (barrier_created ?a)\n                    (not (oil_applied ?a))\n                  )\n    :effect (oil_applied ?a)\n  )\n\n;; Action 4: Create look with glitter\n(:action create_look\n    :parameters (?a - person ?v - velveeta)\n    :precondition (and\n                    (oil_applied ?a)\n                    (not (look_created ?a))\n                    (available ?v)\n                  )\n    :effect (look_created ?a)\n  )\n```\n\nNote: The parameters and preconditions have been adjusted to fit the task steps and descriptions. The step involving \"put_oil_in_drink\" seems to be irrelevant to the task and was interpreted as applying oil to the hair, which aligns with the task description. The entity `velveeta` was assumed to be a placeholder for glitter in this context.",
    "Certainly! Here are the PDDL actions for the task \"How to Do Strawberry Nail Art\":\n\n```pddl\n(define (domain strawberry_nail_art)\n  (:predicates\n    (base_coat_applied ?npc)\n    (nail_painted_red ?person)\n    (leaves_painted_white ?leaves)\n    (leaves_painted_green ?leaves)\n    (seeds_painted ?npc)\n    (top_coat_applied ?npc)\n    (nail_art_finished ?wreath)\n  )\n\n  ;; Step 1: Put on a base coat to protect and strengthen your nails.\n  (:action put_in_base_coathanger\n    :parameters (?npc - person)\n    :precondition (not (base_coat_applied ?npc))\n    :effect (base_coat_applied ?npc)\n  )\n\n  ;; Step 2: Paint your nails red.\n  (:action paint_nail_with_red\n    :parameters (?person - person)\n    :precondition (base_coat_applied ?person)\n    :effect (nail_painted_red ?person)\n  )\n\n  ;; Step 3: Paint the strawberry leaves white first.\n  (:action paint_with_strawberry\n    :parameters (?leaves - leaves ?pot - pot)\n    :precondition (not (leaves_painted_white ?leaves))\n    :effect (leaves_painted_white ?leaves)\n  )\n\n  ;; Step 4: Paint the strawberry leaves green.\n  (:action paint_stalks\n    :parameters (?npc - person ?leaves - leaves ?pot - pot)\n    :precondition (leaves_painted_white ?leaves)\n    :effect (leaves_painted_green ?leaves)\n  )\n\n  ;; Step 5: Paint the seeds.\n  (:action paint_seeds\n    :parameters (?npc - person ?garden_center - location)\n    :precondition (leaves_painted_green ?npc)\n    :effect (seeds_painted ?npc)\n  )\n\n  ;; Step 6: Finish off with a top coat.\n  (:action finish_with_top_coathanger\n    :parameters (?npc - person ?velveeta - item)\n    :precondition (seeds_painted ?npc)\n    :effect (top_coat_applied ?npc)\n  )\n\n  ;; Step 7: Finished.\n  (:action finish-wreath\n    :parameters (?wreath - item)\n    :precondition (top_coat_applied ?wreath)\n    :effect (nail_art_finished ?wreath)\n  )\n)\n```\nIn this translation, each action captures the essential steps and their preconditions and effects related to the state changes of the entities involved in the task of doing strawberry nail art.",
    "Sure, let's generate the PDDL actions for the task \"How to Have Glittery Nails\" based on the steps provided:\n\n```pddl\n(:action wash_fingers\n    :parameters (?p - you)\n    :precondition (and (cleaned ?p))\n    :effect (and (moisturized ?p))\n)\n\n(:action paint_nail_polish\n    :parameters (?p - npc ?nail_polish - nail_polish)\n    :precondition (and (inventory ?p ?nail_polish) (moisturized you))\n    :effect (and (painted_nails you) (glitter_ready you))\n)\n\n(:action mix_gems\n    :parameters (?a - alice ?v - velveeta)\n    :precondition (and (unselected ?a) (whole ?v))\n    :effect (and (selected ?a) (cut_up ?v))\n)\n\n(:action finish_up\n    :parameters (?p - npc)\n    :precondition (and (painted_nails you) (glitter_ready you))\n    :effect (and (glittery_nails you) (admiring_bracelet you))\n)\n```\n\n### Explanation:\n\n1. **wash_fingers**:\n   - **Parameters**: `?p - you`\n   - **Preconditions**: `cleaned ?p` (assuming the fingers are already cleaned)\n   - **Effect**: `moisturized ?p` (the fingers are now moisturized)\n\n2. **paint_nail_polish**:\n   - **Parameters**: `?p - npc ?nail_polish - nail_polish`\n   - **Preconditions**: `inventory ?p ?nail_polish` (the NPC has the nail polish) and `moisturized you` (your fingers are moisturized)\n   - **Effect**: `painted_nails you` (your nails are painted) and `glitter_ready you` (your nails are ready for glitter)\n\n3. **mix_gems**:\n   - **Parameters**: `?a - alice ?v - velveeta`\n   - **Preconditions**: `unselected ?a` (Alice is unselected) and `whole ?v` (Velveeta is whole)\n   - **Effect**: `selected ?a` (Alice is now selected) and `cut_up ?v` (Velveeta is cut up)\n\n4. **finish_up**:\n   - **Parameters**: `?p - npc`\n   - **Preconditions**: `painted_nails you` (your nails are painted) and `glitter_ready you` (your nails are ready for glitter)\n   - **Effect**: `glittery_nails you` (your nails are now glittery) and `admiring_bracelet you` (you are now admiring your bracelet)\n\nThis set of actions captures the steps and state transitions necessary to achieve glittery nails."
]