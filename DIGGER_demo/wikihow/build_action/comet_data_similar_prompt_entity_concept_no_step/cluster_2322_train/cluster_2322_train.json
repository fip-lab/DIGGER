[
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Bead Ring.\n- sliplargerbeads bead3\n- sliplargerbeads bead2\n- sliplargerbeads bead1\n- cutelastic elastic1\n- finishring elastic1 tail1\n- admirering you\n\nDescriptions:\n- Cut a strip of elastic.\n- Slip two larger beads at either side of the small bead.\n- Slip a small bead on one tail.\n- Continue this pattern until you have enough beads to fit around the finger.\n- Finish the ring by slipping the loose tails through the first small bead you placed on the elastic.\n- Finished.\n\nPDDL Actions:\n(:action CutElastic\n    :parameters (?e - elastic)\n    :precondition (not (cut ?e))\n    :effect (cut ?e)\n  )\n(:action SlipLargerBeads\n    :parameters (?b - bead)\n    :precondition (and (not (on_strip ?b)) (not (in_order ?b)))\n    :effect (and (on_strip ?b) (in_order ?b))\n  )\n(:action SlipSmallBead\n    :parameters (?b - bead)\n    :precondition (not (on_strip ?b))\n    :effect (on_strip ?b)\n  )\n(:action PatternBeads\n    :parameters (?b - bead)\n    :precondition (not (in_order ?b))\n    :effect (in_order ?b)\n  )\n(:action FinishRing\n    :parameters (?e - elastic ?t - tail)\n    :precondition (and (not (curved ?e)) (not (adorned ?t)))\n    :effect (and (curved ?e) (adorned ?t))\n  )\n(:action AdmireRing\n    :parameters (?p - person)\n    :precondition (not (admiring ?p))\n    :effect (admiring ?p)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Do a Chain Braid\n\nSteps:\n\nDescriptions:\n- Part your hair down the center.\n- Grab a small section of hair from next to the part.\n- Divide the section into two thinner strands.\n- Tie the strands into a knot, just like tying a pair of shoes.\n- Add some hair to each strand, just like French braiding.\n- Tie the strands into another knot.\n- Continue adding hair to each strand and tying them into knots.\n- Tie the braid off with an elastic.\n- Braid the other section of hair.\n- Gather your hair into a half-up, half-down ponytail or two pigtails.\n- Twist the ponytail or pigtails into a bun.\n\nEntity_state:\n-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'pony': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[horse]] is related to [[pony]]']}, 'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'bun': {'the bung': [{'attribute': 'location', 'before': 'on bike | on', 'after': 'removed from bike | removed'}, {'attribute': 'composition', 'before': 'attached', 'after': 'disattached'}, {'attribute': 'volume', 'before': 'full', 'after': 'empty'}, {'attribute': 'location', 'before': 'away from bike', 'after': 'on bike'}, {'attribute': 'composition', 'before': 'loose', 'after': 'attached'}], 'concept_knowledge': ['[[roll]] is related to [[bun]]']}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'pony': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[horse]] is related to [[pony]]']}, 'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'bun': {'the bung': [{'attribute': 'location', 'before': 'on bike | on', 'after': 'removed from bike | removed'}, {'attribute': 'composition', 'before': 'attached', 'after': 'disattached'}, {'attribute': 'volume', 'before': 'full', 'after': 'empty'}, {'attribute': 'location', 'before': 'away from bike', 'after': 'on bike'}, {'attribute': 'composition', 'before': 'loose', 'after': 'attached'}], 'concept_knowledge': ['[[roll]] is related to [[bun]]']}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'pony': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[horse]] is related to [[pony]]']}, 'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'bun': {'the bung': [{'attribute': 'location', 'before': 'on bike | on', 'after': 'removed from bike | removed'}, {'attribute': 'composition', 'before': 'attached', 'after': 'disattached'}, {'attribute': 'volume', 'before': 'full', 'after': 'empty'}, {'attribute': 'location', 'before': 'away from bike', 'after': 'on bike'}, {'attribute': 'composition', 'before': 'loose', 'after': 'attached'}], 'concept_knowledge': ['[[roll]] is related to [[bun]]']}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'pony': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[horse]] is related to [[pony]]']}, 'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'bun': {'the bung': [{'attribute': 'location', 'before': 'on bike | on', 'after': 'removed from bike | removed'}, {'attribute': 'composition', 'before': 'attached', 'after': 'disattached'}, {'attribute': 'volume', 'before': 'full', 'after': 'empty'}, {'attribute': 'location', 'before': 'away from bike', 'after': 'on bike'}, {'attribute': 'composition', 'before': 'loose', 'after': 'attached'}], 'concept_knowledge': ['[[roll]] is related to [[bun]]']}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'pony': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[horse]] is related to [[pony]]']}, 'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'bun': {'the bung': [{'attribute': 'location', 'before': 'on bike | on', 'after': 'removed from bike | removed'}, {'attribute': 'composition', 'before': 'attached', 'after': 'disattached'}, {'attribute': 'volume', 'before': 'full', 'after': 'empty'}, {'attribute': 'location', 'before': 'away from bike', 'after': 'on bike'}, {'attribute': 'composition', 'before': 'loose', 'after': 'attached'}], 'concept_knowledge': ['[[roll]] is related to [[bun]]']}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Bead Ring.\n- sliplargerbeads bead3\n- sliplargerbeads bead2\n- sliplargerbeads bead1\n- cutelastic elastic1\n- finishring elastic1 tail1\n- admirering you\n\nDescriptions:\n- Cut a strip of elastic.\n- Slip two larger beads at either side of the small bead.\n- Slip a small bead on one tail.\n- Continue this pattern until you have enough beads to fit around the finger.\n- Finish the ring by slipping the loose tails through the first small bead you placed on the elastic.\n- Finished.\n\nPDDL Actions:\n(:action CutElastic\n    :parameters (?e - elastic)\n    :precondition (not (cut ?e))\n    :effect (cut ?e)\n  )\n(:action SlipLargerBeads\n    :parameters (?b - bead)\n    :precondition (and (not (on_strip ?b)) (not (in_order ?b)))\n    :effect (and (on_strip ?b) (in_order ?b))\n  )\n(:action SlipSmallBead\n    :parameters (?b - bead)\n    :precondition (not (on_strip ?b))\n    :effect (on_strip ?b)\n  )\n(:action PatternBeads\n    :parameters (?b - bead)\n    :precondition (not (in_order ?b))\n    :effect (in_order ?b)\n  )\n(:action FinishRing\n    :parameters (?e - elastic ?t - tail)\n    :precondition (and (not (curved ?e)) (not (adorned ?t)))\n    :effect (and (curved ?e) (adorned ?t))\n  )\n(:action AdmireRing\n    :parameters (?p - person)\n    :precondition (not (admiring ?p))\n    :effect (admiring ?p)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Curly Hair\n\nSteps:\n\nDescriptions:\n- Gather some hair at the crown and start to braid.\n- Pull more hair from each side of the head before repeating the pattern.\n- Continue the braiding process to the end.\n\nEntity_state:\n-{'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}-{'scissors': {'the clipping': [{'attribute': 'location', 'before': 'attached', 'after': 'cut'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'moisture', 'before': 'drier | dry', 'after': 'wetter | moister | moistened'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}, {'attribute': 'composition', 'before': 'pure', 'after': 'dipped into rooting hormone'}, {'attribute': 'location', 'before': 'attached', 'after': 'removed'}], 'concept_knowledge': ['[[scissors]] are used to [[cut]]', '[[scissors]] can [[cut that paper]]', '[[cut]] is related to [[scissors]]', '*Something you find in [[the desk]] is [[scissors]]', '[[going to get a haircut]] requires [[scissors]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Style Your Braids\n\nSteps:\n\nDescriptions:\n- Trim away frizz, dip the braids in hot water, then set them with gel.\n- Re-do the braids around your hairline.\n- Tame the baby hairs around your hairline with edge control cream.\n- Switch up the length and style of your braids.\n- Cover unruly hairlines and roots with clever styling or a scarf.\n\nEntity_state:\n-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Wreath with Clothes Hangers.\n- untwist-and-shape-hanger hanger-1 pliers-1\n- crumple-and-thread-paper paper3 hanger-1\n- crumple-and-thread-paper paper2 hanger-1\n- crumple-and-thread-paper paper1 hanger-1\n- push-squares-and-twist-ends hanger-1 pliers-1\n- slide-and-scrunch-squares paper3 hanger-1\n- slide-and-scrunch-squares paper2 hanger-1\n- slide-and-scrunch-squares paper1 hanger-1\n- finish-wreath wreath-1 hanger-1\n\nDescriptions:\n- Untwist wire hanger and shape into a circle, using pliers as needed.\n- Gently crumple 3\" squares of wax paper or crepe paper and thread hanger through center of each square.\n- When you have threaded enough squares to fill length of hanger, gently push squares away from ends and use pliers to twist ends together.\n- Gently slide squares of paper back toward the joined ends of wire hanger, scrunching paper more for additional fullness.\n- Finished.\n\nPDDL Actions:\n(:action untwist-and-shape-hanger\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (shape-straight ?h)\n    :effect (and\n              (shape-circle ?h)\n              (not (shape-straight ?h))\n            )\n  )\n\n  ;;   2：         \n(:action crumple-and-thread-paper\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (shape-circle ?h)\n                    (not (crumpled ?p))\n                    (not (threaded ?h ?p))\n                  )\n    :effect (and\n              (crumpled ?p)\n              (threaded ?h ?p)\n            )\n  )\n\n  ;;   3：           \n(:action push-squares-and-twist-ends\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (and\n                    (shape-circle ?h)\n                    (threaded ?h paper1)\n                    (threaded ?h paper2)\n                    (threaded ?h paper3)\n                  )\n    :effect (and\n              (squares-pushed-away ?h)\n              (twisted-ends ?h)\n            )\n  )\n\n  ;;   4：          \n(:action slide-and-scrunch-squares\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (squares-pushed-away ?h)\n                    (threaded ?h ?p)\n                    (crumpled ?p)\n                  )\n    :effect (squares-scrunched ?p)\n  )\n\n  ;;   5：    \n(:action finish-wreath\n    :parameters (?w - wreath ?h - hanger)\n    :precondition (and\n                    (twisted-ends ?h)\n                    (squares-scrunched paper1)\n                    (squares-scrunched paper2)\n                    (squares-scrunched paper3)\n                  )\n    :effect (completed ?w)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Hair\n\nSteps:\n\nDescriptions:\n- Learn how to Dutch braid.\n- Try a waterfall braid.\n- Create a braided headband.\n- Make a braided braid.\n- Try a rope braid.\n\nEntity_state:\n-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'waterfall': {'sink': [{'attribute': 'volume', 'before': 'empty', 'after': 'full of macaroni'}, {'attribute': 'location', 'before': 'on counter top', 'after': 'under faucet'}, {'attribute': 'cleanness', 'before': 'clean | cleaner', 'after': 'dirty | dirtier'}, {'attribute': 'wetness', 'before': 'drier', 'after': 'wetter'}], 'concept_knowledge': ['*Something you find at [[a waterfall]] is [[water]]', \"[[queda d'água]] is a translation of [[waterfall]]\"]}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'waterfall': {'sink': [{'attribute': 'volume', 'before': 'empty', 'after': 'full of macaroni'}, {'attribute': 'location', 'before': 'on counter top', 'after': 'under faucet'}, {'attribute': 'cleanness', 'before': 'clean | cleaner', 'after': 'dirty | dirtier'}, {'attribute': 'wetness', 'before': 'drier', 'after': 'wetter'}], 'concept_knowledge': ['*Something you find at [[a waterfall]] is [[water]]', \"[[queda d'água]] is a translation of [[waterfall]]\"]}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'waterfall': {'sink': [{'attribute': 'volume', 'before': 'empty', 'after': 'full of macaroni'}, {'attribute': 'location', 'before': 'on counter top', 'after': 'under faucet'}, {'attribute': 'cleanness', 'before': 'clean | cleaner', 'after': 'dirty | dirtier'}, {'attribute': 'wetness', 'before': 'drier', 'after': 'wetter'}], 'concept_knowledge': ['*Something you find at [[a waterfall]] is [[water]]', \"[[queda d'água]] is a translation of [[waterfall]]\"]}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Cornrows\n\nSteps:\n\nDescriptions:\n- Try side-swept cornrows for an elegant look.\n- Go with swirl cornrows to try something unique.\n- Braid long cornrows into a high ponytail.\n- Try cornrows with zig-zag parts for something totally different.\n\nEntity_state:\n-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'cornrows': {'the bead': [{'attribute': 'location', 'before': 'off strip | on counter', 'after': 'on strip | on band'}, {'attribute': 'organization', 'before': 'random', 'after': 'in order on band'}, {'attribute': 'shape', 'before': 'loose', 'after': 'banded'}, {'attribute': 'location', 'before': 'off strip of elastic | in container', 'after': 'on strip of elastic | on elastic'}, {'attribute': 'location', 'before': 'off strip of elastic | off elastic', 'after': 'on strip of elastic | on elastic'}, {'attribute': 'composition', 'before': 'random', 'after': 'in order'}, {'attribute': 'shape', 'before': 'in straighter line', 'after': 'curved'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'cornrows': {'the bead': [{'attribute': 'location', 'before': 'off strip | on counter', 'after': 'on strip | on band'}, {'attribute': 'organization', 'before': 'random', 'after': 'in order on band'}, {'attribute': 'shape', 'before': 'loose', 'after': 'banded'}, {'attribute': 'location', 'before': 'off strip of elastic | in container', 'after': 'on strip of elastic | on elastic'}, {'attribute': 'location', 'before': 'off strip of elastic | off elastic', 'after': 'on strip of elastic | on elastic'}, {'attribute': 'composition', 'before': 'random', 'after': 'in order'}, {'attribute': 'shape', 'before': 'in straighter line', 'after': 'curved'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Wreath with Clothes Hangers.\n- untwist-and-shape-hanger hanger-1 pliers-1\n- crumple-and-thread-paper paper3 hanger-1\n- crumple-and-thread-paper paper2 hanger-1\n- crumple-and-thread-paper paper1 hanger-1\n- push-squares-and-twist-ends hanger-1 pliers-1\n- slide-and-scrunch-squares paper3 hanger-1\n- slide-and-scrunch-squares paper2 hanger-1\n- slide-and-scrunch-squares paper1 hanger-1\n- finish-wreath wreath-1 hanger-1\n\nDescriptions:\n- Untwist wire hanger and shape into a circle, using pliers as needed.\n- Gently crumple 3\" squares of wax paper or crepe paper and thread hanger through center of each square.\n- When you have threaded enough squares to fill length of hanger, gently push squares away from ends and use pliers to twist ends together.\n- Gently slide squares of paper back toward the joined ends of wire hanger, scrunching paper more for additional fullness.\n- Finished.\n\nPDDL Actions:\n(:action untwist-and-shape-hanger\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (shape-straight ?h)\n    :effect (and\n              (shape-circle ?h)\n              (not (shape-straight ?h))\n            )\n  )\n\n  ;;   2：         \n(:action crumple-and-thread-paper\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (shape-circle ?h)\n                    (not (crumpled ?p))\n                    (not (threaded ?h ?p))\n                  )\n    :effect (and\n              (crumpled ?p)\n              (threaded ?h ?p)\n            )\n  )\n\n  ;;   3：           \n(:action push-squares-and-twist-ends\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (and\n                    (shape-circle ?h)\n                    (threaded ?h paper1)\n                    (threaded ?h paper2)\n                    (threaded ?h paper3)\n                  )\n    :effect (and\n              (squares-pushed-away ?h)\n              (twisted-ends ?h)\n            )\n  )\n\n  ;;   4：          \n(:action slide-and-scrunch-squares\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (squares-pushed-away ?h)\n                    (threaded ?h ?p)\n                    (crumpled ?p)\n                  )\n    :effect (squares-scrunched ?p)\n  )\n\n  ;;   5：    \n(:action finish-wreath\n    :parameters (?w - wreath ?h - hanger)\n    :precondition (and\n                    (twisted-ends ?h)\n                    (squares-scrunched paper1)\n                    (squares-scrunched paper2)\n                    (squares-scrunched paper3)\n                  )\n    :effect (completed ?w)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Wire Rope\n\nSteps:\n\nDescriptions:\n- Know how many strands of wire you'll be braiding.\n- Separate the strands of wire.\n- Pull the wire strands correctly.\n- Secure loose ends.\n\nEntity_state:\n-{'ends': {'ends': [{'attribute': 'organization', 'before': 'seperate', 'after': 'touching'}, {'attribute': 'form', 'before': 'bare', 'after': 'joined together'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}-{'ends': {'ends': [{'attribute': 'organization', 'before': 'seperate', 'after': 'touching'}, {'attribute': 'form', 'before': 'bare', 'after': 'joined together'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Side Braid Hair\n\nSteps:\n\nDescriptions:\n- Sweep all your hair onto 1 side.\n- Part hair into 2 sections.\n- Begin the braid.\n- Secure with a hair elastic.\n\nEntity_state:\n-{'elastic': {'the strip of elastic': [{'attribute': 'length', 'before': 'longer | heavier', 'after': 'shorter | lighter'}, {'attribute': 'shape', 'before': 'uncut', 'after': 'cut'}, {'attribute': 'location', 'before': 'on counter', 'after': 'in lap'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'weight', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'shape', 'before': 'straight', 'after': 'rounded'}], 'concept_knowledge': ['[[stretch]] is related to [[elastic]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}-{'elastic': {'the strip of elastic': [{'attribute': 'length', 'before': 'longer | heavier', 'after': 'shorter | lighter'}, {'attribute': 'shape', 'before': 'uncut', 'after': 'cut'}, {'attribute': 'location', 'before': 'on counter', 'after': 'in lap'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'weight', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'length', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'color', 'before': 'less colorful', 'after': 'more colorful'}, {'attribute': 'shape', 'before': 'straight', 'after': 'rounded'}], 'concept_knowledge': ['[[stretch]] is related to [[elastic]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Bead Ring.\n- sliplargerbeads bead3\n- sliplargerbeads bead2\n- sliplargerbeads bead1\n- cutelastic elastic1\n- finishring elastic1 tail1\n- admirering you\n\nDescriptions:\n- Cut a strip of elastic.\n- Slip two larger beads at either side of the small bead.\n- Slip a small bead on one tail.\n- Continue this pattern until you have enough beads to fit around the finger.\n- Finish the ring by slipping the loose tails through the first small bead you placed on the elastic.\n- Finished.\n\nPDDL Actions:\n(:action CutElastic\n    :parameters (?e - elastic)\n    :precondition (not (cut ?e))\n    :effect (cut ?e)\n  )\n(:action SlipLargerBeads\n    :parameters (?b - bead)\n    :precondition (and (not (on_strip ?b)) (not (in_order ?b)))\n    :effect (and (on_strip ?b) (in_order ?b))\n  )\n(:action SlipSmallBead\n    :parameters (?b - bead)\n    :precondition (not (on_strip ?b))\n    :effect (on_strip ?b)\n  )\n(:action PatternBeads\n    :parameters (?b - bead)\n    :precondition (not (in_order ?b))\n    :effect (in_order ?b)\n  )\n(:action FinishRing\n    :parameters (?e - elastic ?t - tail)\n    :precondition (and (not (curved ?e)) (not (adorned ?t)))\n    :effect (and (curved ?e) (adorned ?t))\n  )\n(:action AdmireRing\n    :parameters (?p - person)\n    :precondition (not (admiring ?p))\n    :effect (admiring ?p)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Plait\n\nSteps:\n\nDescriptions:\n- Start with smooth tangle-free hair.\n- Separate the hair to plait.\n- Plait as normal.\n- Secure the braid over the top of your head like a headband.\n\nEntity_state:\n-{'hair': {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': [\"You are likely to find [[hair]] in [[someone's head]]\", '[[wool]] is related to [[hair]]', '[[hair]] can [[fall out]]', '[[hair]] is part of [[your head]]', '[[Mammals]] have [[hair]]', '[[hair]] is used for [[warmth]]', '[[Pêlo]] is a translation of [[hair]]', '[[having a haircut]] requires [[hair]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'as': {'asparagus': [{'attribute': 'location', 'before': 'in fridge', 'after': 'out on table'}, {'attribute': 'composition', 'before': 'whole', 'after': 'cut up | cut'}, {'attribute': 'coverage', 'before': 'exposed', 'after': 'mostly covered'}, {'attribute': 'size', 'before': 'longer', 'after': 'shorter'}, {'attribute': 'shape', 'before': 'pointier', 'after': 'duller'}, {'attribute': 'texture', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'composition', 'before': 'raw | cold', 'after': 'cooked | warm'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'crispy', 'after': 'softened'}, {'attribute': 'composition', 'before': 'cooking', 'after': 'cooling'}, {'attribute': 'location', 'before': 'in oven | in pan', 'after': 'on platter | in serving dish'}], 'concept_knowledge': []}, 'normal': {'light': [{'attribute': 'amount', 'before': 'bright', 'after': 'diffused'}], 'concept_knowledge': ['[[ordinary]] is related to [[normal]]']}}-{'hair': {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': [\"You are likely to find [[hair]] in [[someone's head]]\", '[[wool]] is related to [[hair]]', '[[hair]] can [[fall out]]', '[[hair]] is part of [[your head]]', '[[Mammals]] have [[hair]]', '[[hair]] is used for [[warmth]]', '[[Pêlo]] is a translation of [[hair]]', '[[having a haircut]] requires [[hair]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'as': {'asparagus': [{'attribute': 'location', 'before': 'in fridge', 'after': 'out on table'}, {'attribute': 'composition', 'before': 'whole', 'after': 'cut up | cut'}, {'attribute': 'coverage', 'before': 'exposed', 'after': 'mostly covered'}, {'attribute': 'size', 'before': 'longer', 'after': 'shorter'}, {'attribute': 'shape', 'before': 'pointier', 'after': 'duller'}, {'attribute': 'texture', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'composition', 'before': 'raw | cold', 'after': 'cooked | warm'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'crispy', 'after': 'softened'}, {'attribute': 'composition', 'before': 'cooking', 'after': 'cooling'}, {'attribute': 'location', 'before': 'in oven | in pan', 'after': 'on platter | in serving dish'}], 'concept_knowledge': []}, 'normal': {'light': [{'attribute': 'amount', 'before': 'bright', 'after': 'diffused'}], 'concept_knowledge': ['[[ordinary]] is related to [[normal]]']}}-{'hair': {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': [\"You are likely to find [[hair]] in [[someone's head]]\", '[[wool]] is related to [[hair]]', '[[hair]] can [[fall out]]', '[[hair]] is part of [[your head]]', '[[Mammals]] have [[hair]]', '[[hair]] is used for [[warmth]]', '[[Pêlo]] is a translation of [[hair]]', '[[having a haircut]] requires [[hair]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'as': {'asparagus': [{'attribute': 'location', 'before': 'in fridge', 'after': 'out on table'}, {'attribute': 'composition', 'before': 'whole', 'after': 'cut up | cut'}, {'attribute': 'coverage', 'before': 'exposed', 'after': 'mostly covered'}, {'attribute': 'size', 'before': 'longer', 'after': 'shorter'}, {'attribute': 'shape', 'before': 'pointier', 'after': 'duller'}, {'attribute': 'texture', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'composition', 'before': 'raw | cold', 'after': 'cooked | warm'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'crispy', 'after': 'softened'}, {'attribute': 'composition', 'before': 'cooking', 'after': 'cooling'}, {'attribute': 'location', 'before': 'in oven | in pan', 'after': 'on platter | in serving dish'}], 'concept_knowledge': []}, 'normal': {'light': [{'attribute': 'amount', 'before': 'bright', 'after': 'diffused'}], 'concept_knowledge': ['[[ordinary]] is related to [[normal]]']}}-{'hair': {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': [\"You are likely to find [[hair]] in [[someone's head]]\", '[[wool]] is related to [[hair]]', '[[hair]] can [[fall out]]', '[[hair]] is part of [[your head]]', '[[Mammals]] have [[hair]]', '[[hair]] is used for [[warmth]]', '[[Pêlo]] is a translation of [[hair]]', '[[having a haircut]] requires [[hair]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'as': {'asparagus': [{'attribute': 'location', 'before': 'in fridge', 'after': 'out on table'}, {'attribute': 'composition', 'before': 'whole', 'after': 'cut up | cut'}, {'attribute': 'coverage', 'before': 'exposed', 'after': 'mostly covered'}, {'attribute': 'size', 'before': 'longer', 'after': 'shorter'}, {'attribute': 'shape', 'before': 'pointier', 'after': 'duller'}, {'attribute': 'texture', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'composition', 'before': 'raw | cold', 'after': 'cooked | warm'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'crispy', 'after': 'softened'}, {'attribute': 'composition', 'before': 'cooking', 'after': 'cooling'}, {'attribute': 'location', 'before': 'in oven | in pan', 'after': 'on platter | in serving dish'}], 'concept_knowledge': []}, 'normal': {'light': [{'attribute': 'amount', 'before': 'bright', 'after': 'diffused'}], 'concept_knowledge': ['[[ordinary]] is related to [[normal]]']}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Duct Tape Necklace.\n- unroll_tape tape1\n- fold_tape tape1\n- smooth_tape tape1\n- tape_ends_together tape1 ends1\n\nDescriptions:\n- Take one roll of duct tape and make a piece about a little bigger than your head.\n- Measure it around your head, and cut it off the roll.\n- Fold it halfway through the middle, like shown.\n- Fold the other half so there is no sticky part showing.\n- Tape the ends together.\n- And you are done!\n\nPDDL Actions:\n(:action unroll_tape\n    :parameters (?t - tape)\n    :precondition (and (rolled ?t) (on_roll ?t))\n    :effect (and (in_pieces ?t) (not (rolled ?t)))\n  )\n(:action measure_and_cut_tape\n    :parameters (?t - tape ?tb - table)\n    :precondition (and (in_pieces ?t) (elongated ?t) (not (measured ?tb)))\n    :effect (and (measured ?tb) (in_pieces ?t))\n  )\n(:action fold_tape\n    :parameters (?t - tape)\n    :precondition (and (in_pieces ?t) (elongated ?t))\n    :effect (and (folded ?t) (not (elongated ?t)))\n  )\n(:action smooth_tape\n    :parameters (?t - tape)\n    :precondition (and (folded ?t) (sticky ?t))\n    :effect (and (smooth ?t) (not (sticky ?t)))\n  )\n(:action tape_ends_together\n    :parameters (?t - tape ?e - ends)\n    :precondition (and (smooth ?t) (separate_pieces ?t) (separate_ends ?e))\n    :effect (and (one_piece ?t) (joined_ends ?e) (not (separate_ends ?e)) (not (separate_pieces ?t)))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Do a Basic Hair Braid\n\nSteps:\n\nDescriptions:\n- Part your hair off to the side.\n- Gather a small chunk of hair right next to the side part and your hairline.\n- Divide the chunk into three even sections.\n- Begin with a standard braid.\n- Add a thin strand of hair to the section closest to your hairline.\n- Cross the hairline section over the middle section.\n- Add a thin strand of hair to the section closest to your side part.\n- Cross the side part section over the new middle section.\n- Continue adding strands and crossing over sections.\n- Consider how you want to end the braid.\n- Stop braiding when you are 1 inch (2.54 centimeters) away from the nape of your neck.\n- Consider adding a decorations to the end of your braid after you tie it off.\n\nEntity_state:\n-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'section': {'area': [{'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[department]] is related to [[section]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'basement': {'drop cloth': [{'attribute': 'availability', 'before': 'absent', 'after': 'present'}, {'attribute': 'coverage', 'before': 'uncovered', 'after': 'covered'}, {'attribute': 'location', 'before': 'present', 'after': 'removed'}], 'concept_knowledge': ['*Something you find in [[the basement]] is [[the furnace]]', '[[cellar]] is related to [[basement]]', '[[a house]] has [[a basement]]', '[[A basement]] is [[a room under a house]]', '[[Something you find downstairs]] is the [[basement]]']}, 'braiding': {'webbing': [{'attribute': 'location', 'before': 'in vehicle', 'after': 'on ground'}, {'attribute': 'attention', 'before': 'carelessly placed', 'after': 'carefully placed'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'panel': {'panel': [{'attribute': 'selection', 'before': 'unadjusted', 'after': 'adjusted'}, {'attribute': 'visibility', 'before': 'invisible', 'after': 'visible'}, {'attribute': 'availability', 'before': 'closed', 'after': 'open'}, {'attribute': 'visibility', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'availability', 'before': 'deselected', 'after': 'selected'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Fishtail Braid\n\nSteps:\n\nDescriptions:\n- Make a side fishtail braid.\n- Try making a topsy-turvy ponytail before you start doing the fishtail braid.\n- Use a clip or barrette to cover up the hair tie.\n- Roll your braid into a bun at the nape of your neck.\n- Add some colored hair extensions before you start braiding your hair.\n\nEntity_state:\n-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'my hair': {'pedals': [{'attribute': 'location', 'before': 'on ground', 'after': 'in air'}, {'attribute': 'location', 'before': 'in air | on ground', 'after': 'on pedal'}, {'attribute': 'placement', 'before': 'on ground', 'after': 'now off ground'}, {'attribute': 'location', 'before': 'on ground', 'after': 'on pedal'}, {'attribute': 'motion', 'before': 'still', 'after': 'moving'}, {'attribute': 'location', 'before': 'on bike', 'after': 'on ground'}, {'attribute': 'placement', 'before': 'on pedal', 'after': 'now on ground'}], 'concept_knowledge': []}, 'ponytail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': ['[[queue de cheval]] is a translation of [[ponytail]]']}, 'extensions': {'sticks': [{'attribute': 'organization', 'before': 'scattered', 'after': 'bundled'}, {'attribute': 'availability', 'before': 'all over place', 'after': 'collected'}, {'attribute': 'location', 'before': 'bunched up', 'after': 'in formation'}, {'attribute': 'organization', 'before': 'bundled', 'after': 'stacked'}, {'attribute': 'composition', 'before': 'stand-alone', 'after': 'fortified'}, {'attribute': 'tightness', 'before': 'untied', 'after': 'tired with bark'}], 'concept_knowledge': []}, 'fish tail': {'tails': [{'attribute': 'orientation', 'before': 'bare', 'after': 'adorned | beaded'}, {'attribute': 'orientation', 'before': 'open', 'after': 'closed'}], 'concept_knowledge': []}, 'alice': {'character': [{'attribute': 'step', 'before': 'unselected', 'after': 'selected'}, {'attribute': 'choice', 'before': 'nameless', 'after': 'named'}], 'concept_knowledge': []}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Bead Ring.\n- sliplargerbeads bead3\n- sliplargerbeads bead2\n- sliplargerbeads bead1\n- cutelastic elastic1\n- finishring elastic1 tail1\n- admirering you\n\nDescriptions:\n- Cut a strip of elastic.\n- Slip two larger beads at either side of the small bead.\n- Slip a small bead on one tail.\n- Continue this pattern until you have enough beads to fit around the finger.\n- Finish the ring by slipping the loose tails through the first small bead you placed on the elastic.\n- Finished.\n\nPDDL Actions:\n(:action CutElastic\n    :parameters (?e - elastic)\n    :precondition (not (cut ?e))\n    :effect (cut ?e)\n  )\n(:action SlipLargerBeads\n    :parameters (?b - bead)\n    :precondition (and (not (on_strip ?b)) (not (in_order ?b)))\n    :effect (and (on_strip ?b) (in_order ?b))\n  )\n(:action SlipSmallBead\n    :parameters (?b - bead)\n    :precondition (not (on_strip ?b))\n    :effect (on_strip ?b)\n  )\n(:action PatternBeads\n    :parameters (?b - bead)\n    :precondition (not (in_order ?b))\n    :effect (in_order ?b)\n  )\n(:action FinishRing\n    :parameters (?e - elastic ?t - tail)\n    :precondition (and (not (curved ?e)) (not (adorned ?t)))\n    :effect (and (curved ?e) (adorned ?t))\n  )\n(:action AdmireRing\n    :parameters (?p - person)\n    :precondition (not (admiring ?p))\n    :effect (admiring ?p)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Leather\n\nSteps:\n\nDescriptions:\n- Fashion a bracelet from your braided leather.\n- Make a necklace using the same end connections as the bracelet.\n- Use a tiny braid as a leather ring.\n\nEntity_state:\n-{'velveeta': {'velveeta': [{'attribute': 'granularity', 'before': 'whole | a block', 'after': 'cubed | cut into cubes | cut into pieces'}, {'attribute': 'location', 'before': 'in the fridge | in package | in front of me', 'after': 'on the counter | in bowl | on the cutting board | to the side of me'}, {'attribute': 'temperature', 'before': 'cold', 'after': 'room temperature'}, {'attribute': 'size', 'before': 'large | whole', 'after': 'small | cut up'}, {'attribute': 'openness', 'before': 'closed', 'after': 'open'}, {'attribute': 'granularity', 'before': 'solid', 'after': 'liquid'}, {'attribute': 'location', 'before': 'on the cutting board', 'after': 'in the sauce pan'}, {'attribute': 'temperature', 'before': 'cool | room temperature', 'after': 'hot | warming'}, {'attribute': 'granularity', 'before': 'solid', 'after': 'liquid | melted'}, {'attribute': 'temperature', 'before': 'cool', 'after': 'hot'}, {'attribute': 'texture', 'before': 'thick', 'after': 'runny'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}-{'velveeta': {'velveeta': [{'attribute': 'granularity', 'before': 'whole | a block', 'after': 'cubed | cut into cubes | cut into pieces'}, {'attribute': 'location', 'before': 'in the fridge | in package | in front of me', 'after': 'on the counter | in bowl | on the cutting board | to the side of me'}, {'attribute': 'temperature', 'before': 'cold', 'after': 'room temperature'}, {'attribute': 'size', 'before': 'large | whole', 'after': 'small | cut up'}, {'attribute': 'openness', 'before': 'closed', 'after': 'open'}, {'attribute': 'granularity', 'before': 'solid', 'after': 'liquid'}, {'attribute': 'location', 'before': 'on the cutting board', 'after': 'in the sauce pan'}, {'attribute': 'temperature', 'before': 'cool | room temperature', 'after': 'hot | warming'}, {'attribute': 'granularity', 'before': 'solid', 'after': 'liquid | melted'}, {'attribute': 'temperature', 'before': 'cool', 'after': 'hot'}, {'attribute': 'texture', 'before': 'thick', 'after': 'runny'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Wreath with Clothes Hangers.\n- untwist-and-shape-hanger hanger-1 pliers-1\n- crumple-and-thread-paper paper3 hanger-1\n- crumple-and-thread-paper paper2 hanger-1\n- crumple-and-thread-paper paper1 hanger-1\n- push-squares-and-twist-ends hanger-1 pliers-1\n- slide-and-scrunch-squares paper3 hanger-1\n- slide-and-scrunch-squares paper2 hanger-1\n- slide-and-scrunch-squares paper1 hanger-1\n- finish-wreath wreath-1 hanger-1\n\nDescriptions:\n- Untwist wire hanger and shape into a circle, using pliers as needed.\n- Gently crumple 3\" squares of wax paper or crepe paper and thread hanger through center of each square.\n- When you have threaded enough squares to fill length of hanger, gently push squares away from ends and use pliers to twist ends together.\n- Gently slide squares of paper back toward the joined ends of wire hanger, scrunching paper more for additional fullness.\n- Finished.\n\nPDDL Actions:\n(:action untwist-and-shape-hanger\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (shape-straight ?h)\n    :effect (and\n              (shape-circle ?h)\n              (not (shape-straight ?h))\n            )\n  )\n\n  ;;   2：         \n(:action crumple-and-thread-paper\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (shape-circle ?h)\n                    (not (crumpled ?p))\n                    (not (threaded ?h ?p))\n                  )\n    :effect (and\n              (crumpled ?p)\n              (threaded ?h ?p)\n            )\n  )\n\n  ;;   3：           \n(:action push-squares-and-twist-ends\n    :parameters (?h - hanger ?p - pliers)\n    :precondition (and\n                    (shape-circle ?h)\n                    (threaded ?h paper1)\n                    (threaded ?h paper2)\n                    (threaded ?h paper3)\n                  )\n    :effect (and\n              (squares-pushed-away ?h)\n              (twisted-ends ?h)\n            )\n  )\n\n  ;;   4：          \n(:action slide-and-scrunch-squares\n    :parameters (?p - paper_square ?h - hanger)\n    :precondition (and\n                    (squares-pushed-away ?h)\n                    (threaded ?h ?p)\n                    (crumpled ?p)\n                  )\n    :effect (squares-scrunched ?p)\n  )\n\n  ;;   5：    \n(:action finish-wreath\n    :parameters (?w - wreath ?h - hanger)\n    :precondition (and\n                    (twisted-ends ?h)\n                    (squares-scrunched paper1)\n                    (squares-scrunched paper2)\n                    (squares-scrunched paper3)\n                  )\n    :effect (completed ?w)\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Make a Clothesline to Use Without Hangers\n\nSteps:\n\nDescriptions:\n- Find the smallest, thinnest surgical tubing you can find.\n- If you use rubber bands you will first have to loop the bands together by putting one through another and back through itself before it's pulled tight.\n- Once you have the full length you need (about 20 ft.) divide it into 3rds and cut it into separate pieces.\n- String one of the hooks along one of the strands until it's next to the knot.\n- Begin to braid the three strands in a common overlap pattern.\n- Once you're satisfied with the braided strands, Put the second hook in one of the strands.\n- It's ready to use almost anywhere, anytime, without hangers, clothespins or hanging things over the line.\n- Loop each end around some fixtures so the entire line is slightly stretched.\n- When you go to hang anything, pull one of the strands away from the other two and place a small corner of the garment through the gap.\n\nEntity_state:\n-{'ends': {'ends': [{'attribute': 'organization', 'before': 'seperate', 'after': 'touching'}, {'attribute': 'form', 'before': 'bare', 'after': 'joined together'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'hanger-': {'bubble want': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted | shaped like want | bent into loop'}, {'attribute': 'shape', 'before': 'in its original shape', 'after': 'in wand shape'}, {'attribute': 'use', 'before': 'for hanging', 'after': 'for blowing bubbles'}, {'attribute': 'location', 'before': 'inside', 'after': 'outside'}, {'attribute': 'wetness', 'before': 'dry', 'after': 'wet'}], 'concept_knowledge': []}}-{'ends': {'ends': [{'attribute': 'organization', 'before': 'seperate', 'after': 'touching'}, {'attribute': 'form', 'before': 'bare', 'after': 'joined together'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'hanger-': {'bubble want': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted | shaped like want | bent into loop'}, {'attribute': 'shape', 'before': 'in its original shape', 'after': 'in wand shape'}, {'attribute': 'use', 'before': 'for hanging', 'after': 'for blowing bubbles'}, {'attribute': 'location', 'before': 'inside', 'after': 'outside'}, {'attribute': 'wetness', 'before': 'dry', 'after': 'wet'}], 'concept_knowledge': []}}-{'ends': {'ends': [{'attribute': 'organization', 'before': 'seperate', 'after': 'touching'}, {'attribute': 'form', 'before': 'bare', 'after': 'joined together'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'hanger-': {'bubble want': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted | shaped like want | bent into loop'}, {'attribute': 'shape', 'before': 'in its original shape', 'after': 'in wand shape'}, {'attribute': 'use', 'before': 'for hanging', 'after': 'for blowing bubbles'}, {'attribute': 'location', 'before': 'inside', 'after': 'outside'}, {'attribute': 'wetness', 'before': 'dry', 'after': 'wet'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is make_papyrus.\n- cut_stalks npc knife papyrus_plant papyrus_stalks\n- cut_strips npc papyrus_strips papyrus_stalks knife\n- soak_strips npc water papyrus_strips\n- roll_strips npc rolling_pin papyrus_strips\n- weave_strips npc papyrus_strips\n- bundle_strips npc papyrus_strips wooden_boards linen_sheets\n- cut_sheet npc papyrus_strips knife papyrus\n\nDescriptions:\n- Cut the stalks. About 12 inches (30 cm) of papyrus plant will make a large piece of paper that will be nearly 24 inches (61 cm) in length. Cut off as many stalks as you will need to make the amount of paper you want. The cuts must be diagonally made. Then, cut the tips of the papyrus. You will not use the tips, which are the thinner, grass-like end of the plant.\n- Weave the strips together. Lay the strips on the cloth. Get a dry sheet of linen cloth or felt. Then, begin to weave them together. You want to create 2 layers of strips, with the top layer strips being perpendicular to the bottom layer strips. It should resemble a placemat. The strips should slightly overlap one another to prevent the papyrus from falling apart later.\n- Roll the excess water and sugar out of the plant. Grab a rolling pin and use it to roll the strips flat. The rolling pin should be squeezing the water out of them and flattening the strips into sheets.\n- Cut the paper. The sheet may be larger than you want when it is finished. Use a razor, scissors, or paper cutter to cut the papyrus into smaller sheets. Measure the sizes you are cutting so you will have multiple sheets of the same size.\n- Cut up the inner portion into strips. Use the knife you used to cut off the outer portion to cut the inner layers of the papyrus plant (pith) into thin strips. Hold the plant in your hand and cut towards you vertically. Make sure that all of the strips have the same size and thickness.\n- Place the bundle between 2 wooden boards. Make sure that the wooden boards are somewhat heavy. The pressure is necessary to flatten the papyrus strips together. Once the strips have been placed between the boards, press them together. Lay the sandwiched papyrus sheet on a flat surface and allow the wooden boards to flatten the sheet using gravity.\n\nPDDL Actions:\n(:action roll_strips; roll the excess water and sugar out of the strips to dry them\n    :parameters (?p - player ?rolling_pin - rolling_pin ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?rolling_pin) (inventory ?p ?papyrus_strips) (soaked ?papyrus_strips))\n    :effect (dried ?papyrus_strips)\n  )\n(:action soak_strips; place papyrus strips in water and let them soak\n    :parameters (?p - player ?water - water ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?water) (inventory ?p ?papyrus_strips))\n    :effect (soaked ?papyrus_strips)\n  )\n(:action weave_strips; weave the dried papyrus strips into a lattice\n    :parameters (?p - player ?papyrus_strips - papyrus_strips)\n    :precondition (and (inventory ?p ?papyrus_strips) (dried ?papyrus_strips))\n    :effect (woven ?papyrus_strips)\n  )\n(:action bundle_strips; bundle the woven strips between linen sheets and wooden boards\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?wooden_boards - wooden_boards ?linen_sheets - linen_sheets)\n    :precondition (and (inventory ?p ?papyrus_strips) (woven ?papyrus_strips) (inventory ?p ?wooden_boards) (inventory ?p ?linen_sheets))\n    :effect (finished ?papyrus_strips)\n  )\n(:action cut_sheet; the finished sheet is cut to size to complete the papyrus\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?knife - knife ?papyrus - papyrus)\n    :precondition (and (inventory ?p ?papyrus_strips) (finished ?papyrus_strips) (inventory ?p ?knife))\n    :effect (and (inventory ?p ?papyrus) (not (inventory ?p ?papyrus_strips)))\n  )\n)\n(:action cut_stalks; cut papyrus plant into stalks\n    :parameters (?p - player ?knife - knife ?papyrus_plant - papyrus_plant ?papyrus_stalks - papyrus_stalks)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_plant))\n    :effect (and (inventory ?p ?papyrus_stalks) (not (inventory ?p ?papyrus_plant)))\n  )\n(:action cut_strips; cut papyrus stalks into strips\n    :parameters (?p - player ?papyrus_strips - papyrus_strips ?papyrus_stalks - papyrus_stalks ?knife - knife)\n    :precondition (and (inventory ?p ?knife) (inventory ?p ?papyrus_stalks))\n    :effect (and (inventory ?p ?papyrus_strips) (not (inventory ?p ?papyrus_stalks)))\n  )\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Do Different Braids\n\nSteps:\n\nDescriptions:\n- Wrap 2 regular braids around your head to get milkmaid braids.\n- Create box braids on natural hair by doing multiple mini braids.\n- Divide your hair into multiple mini Dutch braids to do cornrows.\n- Wrap a pair of Dutch braids around your head for a braided crown.\n- Try an upside down braid for a twist.\n\nEntity_state:\n-{'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example.",
    "You are an a briliant AI planning assistant responsible for generating PDDL (Planning Domain Definition Language) actions for a given task. \"\n        \"Your objective is to translate the task's steps into corresponding PDDL actions that capture the intent and logic of each step. \"\n        \"Follow the example provided below and generate the appropriate PDDL actions based on the steps and their descriptions.\"\n         The point of action is to consider descriptions, steps, and other states as AIDS.\n         In this section, the entity states before and after each action will be provided to help define the PDDL effects and conditions. Each state includes attributes like location, condition, or readiness of objects involved.\nInstructions for Generating PDDL Actions:\nFor each step, generate a corresponding PDDL action that follows these guidelines:\nAction Name: Provide a concise and descriptive name for the action.\nParameters: List the objects, agents, or items involved in this action.\nPreconditions: Define the necessary conditions that must be true before the action can be performed.\nEffects: Specify the resulting changes or outcomes once the action is completed, based on the entity states provided.\n\nTask: {{task}}\nFile Name: {{file_name}}\nSteps:\nStep 1: {{step_1}}\nStep 2: {{step_2}}\nStep 3: {{step_3}}\nStep 4: {{step_4}}\nDescriptions:\n[{Descriptions}]\nEntity State:\nExample:\nSuppose the task is Make a Pipe Cleaner Bird.\n- bend_to_form_legs pc1\n- enlarge_torso torso\n- move_for_beak tip\n- shape_to_form_body pc2\n\nDescriptions:\n- Bend one pipe cleaner in half to form the legs.\n- Shape another pipe cleaner to form the body.\n- Move 1.5 inches (3.8 cm) from the tip of where the beak should be.\n- Use 2 pipe cleaners to enlarge the torso.\n\nPDDL Actions:\n(:action bend_to_form_legs\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p completely_on_ground))\n    :effect (and (position ?p bent) (location ?p partially_in_air))\n  )\n(:action shape_to_form_body\n    :parameters (?p - pipe_cleaner)\n    :precondition (and (position ?p straight) (location ?p on_ground))\n    :effect (and (position ?p bent) (location ?p on_pipe_cleaner))\n  )\n(:action move_for_beak\n    :parameters (?t - tip_of_pipe_cleaner)\n    :precondition (and (shape ?t straight) (location ?t closer_to_tip))\n    :effect (and (shape ?t shaped_to_form_beak) (location ?t now_away_from_tip))\n  )\n(:action enlarge_torso\n    :parameters (?t - torso)\n    :precondition (and (width ?t thinner) (weight ?t lighter))\n    :effect (and (width ?t now_wider) (weight ?t heavier))\n  )\n)\n\nYour Task:\nNow, generate PDDL actions based on the following new task and steps:\nTask: How to Braid Your Own Hair\n\nSteps:\n\nDescriptions:\n- Brush your hair thoroughly.\n- Part your hair into two sections.\n- Begin your braid.\n- Do the same for the left side.\n- Continue braiding your hair following the last step.\n- Secure the braid at the end with a hair elastic.\n\nEntity_state:\n-{'my equipment': {'equipment': [{'attribute': 'organization', 'before': 'scattered | laying sporadically', 'after': 'organized | gathered'}, {'attribute': 'equipment', 'before': 'unorganized', 'after': 'laid in pattern'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'my equipment': {'equipment': [{'attribute': 'organization', 'before': 'scattered | laying sporadically', 'after': 'organized | gathered'}, {'attribute': 'equipment', 'before': 'unorganized', 'after': 'laid in pattern'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'my equipment': {'equipment': [{'attribute': 'organization', 'before': 'scattered | laying sporadically', 'after': 'organized | gathered'}, {'attribute': 'equipment', 'before': 'unorganized', 'after': 'laid in pattern'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}-{'my equipment': {'equipment': [{'attribute': 'organization', 'before': 'scattered | laying sporadically', 'after': 'organized | gathered'}, {'attribute': 'equipment', 'before': 'unorganized', 'after': 'laid in pattern'}], 'concept_knowledge': []}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}, 'you': {'you': [{'attribute': 'focus', 'before': 'focused on making bracelet', 'after': 'admiring bracelet'}], 'concept_knowledge': ['[[me]] is not [[you]]', '[[body]] is related to [[you]]']}, 'braid': {'the piece of yarn': [{'attribute': 'shape', 'before': 'straight', 'after': 'twisted and folded'}], 'concept_knowledge': []}}\nIf a step is irrelevant to the task or description, or appears to be wrong, modify it to be relevant to the step and generate task-specific PDDL actions.\nGenerate the PDDL actions using the format and structure shown in the example."
]