[
    "(:action ask\n  :parameters (?agent - agent ?target - entity ?resource - resource)\n  :precondition (and (at ?agent ?target) (resource_available ?target ?resource) (not (has ?agent ?resource)))\n  :effect (and (has ?agent ?resource))",
    "(:action ask_for_moss\n     :parameters (?p - player ?loc - location ?moss - fairy_moss)\n     :precondition (and (at ?p ?loc) (nursery ?loc) (not (inventory ?p ?moss)))\n     :effect (and (inventory ?p ?moss))",
    "(:action ask\n       :parameters (?agent - player ?target - location ?resource - fairy_moss)\n       :precondition (and (at ?agent ?target) (nursery ?target) (not (has ?agent ?resource)))\n       :effect (and (has ?agent ?resource))",
    "(:action find_container\n     :parameters (?p - player ?loc - location ?container - container)\n     :precondition (and (at ?p ?loc) (storage ?loc) (not (inventory ?p ?container)))\n     :effect (and (inventory ?p ?container))",
    "(:action ask\n       :parameters (?agent - player ?target - location ?resource - container)\n       :precondition (and (at ?agent ?target) (storage ?target) (not (has ?agent ?resource)))\n       :effect (and (has ?agent ?resource))",
    "(:action find_container\n    :parameters (?p - player ?container - container)\n    :precondition (and (not (inventory ?p ?container)))\n    :effect (and (inventory ?p ?container))",
    "(:action fill_bowl\n    :parameters (?p - player ?bowl - bowl ?item - item)\n    :precondition (and (not (filled ?bowl ?item)))\n    :effect (and (filled ?bowl ?item))",
    "(:action find\n    ; Find a resource and update the state accordingly\n    :parameters (?actor - player ?resource - object ?location - object)\n    :precondition (and (not (in_state ?actor ?resource ?location)))\n    :effect (and (in_state ?actor ?resource ?location))",
    "(:action fill\n    :parameters (?p - player ?container - container ?resource - object ?loc - location)\n    :precondition (and \n                    (inventory ?p ?container) \n                    (not (filled ?container)) \n                    (or (suitable_position ?loc) (not (suitable_position ?loc)))\n                  )\n    :effect (and \n              (filled ?container) \n              (when (suitable_position ?loc) \n                (and (placed ?container ?loc) (not (inventory ?p ?container))",
    "(:action add_or_place ; Add an item to a container or place it in a suitable position\n    :parameters (?actor - person ?item - object ?container - container)\n    :precondition (and (inventory ?actor ?item) (inventory ?actor ?container) (not (contains ?container ?item)) (or (filled ?container) (suitable_position ?container)))\n    :effect (and (contains ?container ?item))",
    "(:action prune ; Prune a specified item in a container\n    :parameters (?p - person ?item - object ?container - container)\n    :precondition (and (contains ?container ?item) (grown ?item))\n    :effect (pruned ?item)\n)"
]