[
    "(:action make ; Create or transform an item and update inventory status\n  :parameters (?agent - person ?item - object ?result - object)\n  :precondition (and (inventory ?agent ?item))\n  :effect (and (inventory ?agent ?result) (not (inventory ?agent ?item))",
    "(:action get ; Retrieve an item and update its location\n  :parameters (?agent - entity ?item - object ?loc - location)\n  :precondition (and (at ?agent ?loc) (at ?item ?loc))\n  :effect (and (has ?agent ?item) (not (at ?item ?loc))",
    "(:action check\n  ; Check a resource and update task status\n  :parameters (?agent - agent ?resource - resource)\n  :precondition (and (available ?agent) (not (checked ?agent ?resource)))\n  :effect (checked ?agent ?resource)\n)",
    "(:action attack_thug\n         :parameters (?p - player ?thug - thug ?weapon - weapon)\n         :precondition (and (at ?p ?loc) (at ?thug ?loc) (inventory ?p ?weapon) (ready_to_use ?weapon))\n         :effect (and (defeated ?thug) (not (at ?thug ?loc))",
    "(:action make_horizontal_bar\n         :parameters (?p - player ?branch - branch ?bar - horizontal_bar)\n         :precondition (and (inventory ?p ?branch) (not (inventory ?p ?bar)))\n         :effect (and (inventory ?p ?bar) (not (inventory ?p ?branch))",
    "(:action get_weapon\n         :parameters (?p - player ?loc - location ?weapon - weapon)\n         :precondition (and (at ?p ?loc) (at ?weapon ?loc) (not (inventory ?p ?weapon)))\n         :effect (and (inventory ?p ?weapon) (not (at ?weapon ?loc))",
    "(:action check_weapons\n         :parameters (?p - player ?weapon - weapon ?ammo - ammunition)\n         :precondition (and (inventory ?p ?weapon) (inventory ?p ?ammo) (not (ready_to_use ?weapon)))\n         :effect (ready_to_use ?weapon)\n    )",
    "(:action manage_combat_resources\n     :parameters (?p - player ?target - entity ?item1 - object ?item2 - object ?loc - location)\n     :precondition (and \n         (at ?p ?loc)\n         (or \n             (and (at ?target ?loc) (inventory ?p ?item1) (ready_to_use ?item1)) ; For attacking\n             (and (inventory ?p ?item1) (not (inventory ?p ?item2))) ; For making horizontal bar\n             (and (at ?item1 ?loc) (not (inventory ?p ?item1))) ; For getting weapon\n             (and (inventory ?p ?item1) (inventory ?p ?item2) (not (ready_to_use ?item1))) ; For checking weapons\n         )\n     )\n     :effect (and \n         (or \n             (and (defeated ?target) (not (at ?target ?loc))"
]