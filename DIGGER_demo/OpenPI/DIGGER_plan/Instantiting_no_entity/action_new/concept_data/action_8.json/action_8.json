[
    "(:action start ; Start a task or process to update its status\n  :parameters (?entity - object)\n  :precondition (not (started ?entity))\n  :effect (started ?entity)\n)",
    "(:action select_character\n    :parameters (?c - character)\n    :precondition (and (started ?g) (in_cantina ?c))\n    :effect (selected ?c)\n)",
    "(:action save_name_and_exit\n    :parameters (?c - character)\n    :precondition (and (selected ?c) (named ?c))\n    :effect (and (saved ?c) (not (selected ?c))",
    "(:action select\n    :parameters (?entity - object ?context - context)\n    :precondition (and (started ?context) (in_context ?entity ?context) (not (selected ?entity)))\n    :effect (and (selected ?entity) (when (named ?entity) (and (saved ?entity) (not (selected ?entity))",
    "(:action turn\n    :parameters (?entity - entity ?state - state ?context - context)\n    :precondition (and \n        (available ?entity)\n        (not (in_state ?entity ?state))\n        (contextual_condition ?context ?entity ?state)) \n    :effect (and \n        (in_state ?entity ?state)\n        (contextual_effect ?context ?entity ?state))",
    "(:action turn\n       :parameters (?game - game ?state - state ?context - context)\n       :precondition (and \n           (available ?game)\n           (not (started ?game))\n           (contextual_condition ?context ?game ?state))\n       :effect (and \n           (started ?game)\n           (contextual_effect ?context ?game ?state))",
    "(:action turn\n       :parameters (?character - character ?state - state ?context - context)\n       :precondition (and \n           (available ?character)\n           (not (selected ?character))\n           (contextual_condition ?context ?character ?state))\n       :effect (and \n           (selected ?character)\n           (contextual_effect ?context ?character ?state))",
    "(:action turn\n       :parameters (?part - body_part ?state - state ?context - context)\n       :precondition (and \n           (available ?part)\n           (not (customized ?part))\n           (contextual_condition ?context ?part ?state))\n       :effect (and \n           (customized ?part)\n           (contextual_effect ?context ?part ?state))",
    "(:action customize\n    :parameters (?entity - object ?attribute - attribute_type ?value - value)\n    :precondition (and (selected ?entity) (modifiable ?attribute ?entity))\n    :effect (customized ?entity ?attribute ?value)\n)"
]