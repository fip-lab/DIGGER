[
    "(:action mix ;  Mix items and update state\n  :parameters (?p - person ?item - object ?location - place)\n  :precondition (and (at ?p ?location) (has ?p ?item))\n  :effect (and (mixed ?item) (not (has ?p ?item))",
    "(:action pour_into_container\n  :parameters (?p - person ?mixture - mixture ?container - container)\n  :precondition (and (at ?p kitchen) (mixed ?mixture) (has ?p ?mixture) (is_container ?container))\n  :effect (and (in ?mixture ?container) (not (has ?p ?mixture))",
    "(:action pour\n  :parameters (?actor - person ?substance - substance ?target - receptacle)\n  :precondition (and (at ?actor ?location) (prepared ?substance) (has ?actor ?substance) (is_receptacle ?target))\n  :effect (and (in ?substance ?target) (not (has ?actor ?substance))",
    "(:action grind ;  Grind an item and update its state\n  :parameters (?p - person ?item - object ?tool - tool)\n  :precondition (and (at ?p kitchen) (has ?p ?item) (is_tool ?tool))\n  :effect (and (ground ?item) (not (has ?p ?item))",
    "(:action gotolocation\n  :parameters (?agent - person ?location - location)\n  :precondition (and (at ?agent ?current_location) (connected ?current_location ?location))\n  :effect (and \n            (at ?agent ?location)\n            (not (at ?agent ?current_location))",
    "(:action process_ingredients\n  :parameters (?agent - person ?ingredient - ingredient ?container - container ?tool - tool)\n  :precondition (and (has ?agent ?ingredient) (available ?tool) (available ?container))\n  :effect (and \n            (processed ?ingredient ?tool)\n            (in ?ingredient ?container)\n           )"
]