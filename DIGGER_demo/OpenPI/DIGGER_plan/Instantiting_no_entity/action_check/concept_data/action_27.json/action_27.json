[
    "```lisp\n(\n  ; Brown action: Standardized variable types and ensured logical consistency\n  (:action brown\n    :parameters (?npc - agent ?item1 - item ?item2 - item ?tool - item ?location - location)\n    :precondition (and (at ?npc ?location) (inventory ?npc ?item1) (inventory ?npc ?item2) (inventory ?npc ?tool) (is_tool ?tool))\n    :effect (and (browned ?item1) (browned ?item2))\n  )\n\n  ; Drain action: Standardized variable types and ensured logical consistency\n  (:action drain\n    :parameters (?npc - agent ?item - item ?location - location)\n    :precondition (and (at ?npc ?location) (inventory ?npc ?item) (contains_excess ?item) (is_drain_location ?location))\n    :effect (not (contains_excess ?item))\n  )\n\n  ; Add action: Standardized variable types and ensured logical consistency\n  (:action add\n    :parameters (?npc - agent ?resource - item ?item - item)\n    :precondition (and (available ?npc) (contains ?resource ?item) (not (updated ?resource)))\n    :effect (updated ?resource)\n  )\n\n  ; Finish action: Standardized variable types and ensured logical consistency\n  (:action finish\n    :parameters (?npc - agent ?location - location ?item - item ?task - task)\n    :precondition (and \n      (at ?npc ?location)\n      (inventory ?npc ?item)\n      (task_step ?task ?step)\n      (valid_step ?step ?task)\n    )\n    :effect (not (task_step ?task ?step))\n  )\n)\n```"
]