[
    "```pddl\n[\n  '(:action make ; Create or transform an item and update inventory status\n    :parameters (?agent - agent ?item - object ?result - object)\n    :precondition (and (inventory ?agent ?item))\n    :effect (and (inventory ?agent ?result) (not (inventory ?agent ?item)))',\n    \n  '(:action get ; Retrieve an item and update its location\n    :parameters (?agent - agent ?item - object ?loc - location)\n    :precondition (and (at ?agent ?loc) (at ?item ?loc))\n    :effect (and (has ?agent ?item) (not (at ?item ?loc)))',\n    \n  '(:action check ; Check a resource and update task status\n    :parameters (?agent - agent ?resource - resource)\n    :precondition (and (available ?agent) (not (checked ?agent ?resource)))\n    :effect (checked ?agent ?resource))',\n    \n  '(:action attack_thug\n    :parameters (?agent - agent ?thug - thug ?weapon - weapon ?loc - location)\n    :precondition (and (at ?agent ?loc) (at ?thug ?loc) (inventory ?agent ?weapon) (ready_to_use ?weapon))\n    :effect (and (defeated ?thug) (not (at ?thug ?loc))))',\n    \n  '(:action make_horizontal_bar\n    :parameters (?agent - agent ?branch - branch ?bar - horizontal_bar)\n    :precondition (and (inventory ?agent ?branch) (not (inventory ?agent ?bar)))\n    :effect (and (inventory ?agent ?bar) (not (inventory ?agent ?branch))))',\n    \n  '(:action get_weapon\n    :parameters (?agent - agent ?loc - location ?weapon - weapon)\n    :precondition (and (at ?agent ?loc) (at ?weapon ?loc) (not (inventory ?agent ?weapon)))\n    :effect (and (inventory ?agent ?weapon) (not (at ?weapon ?loc))))',\n    \n  '(:action check_weapons\n    :parameters (?agent - agent ?weapon - weapon ?ammo - ammunition)\n    :precondition (and (inventory ?agent ?weapon) (inventory ?agent ?ammo) (not (ready_to_use ?weapon)))\n    :effect (ready_to_use ?weapon))',\n    \n  '(:action manage_combat_resources\n    :parameters (?agent - agent ?target - agent ?item1 - object ?item2 - object ?loc - location)\n    :precondition (and \n        (at ?agent ?loc)\n        (or \n            (and (at ?target ?loc) (inventory ?agent ?item1) (ready_to_use ?item1)) ; For attacking\n            (and (inventory ?agent ?item1) (not (inventory ?agent ?item2))) ; For making horizontal bar\n            (and (at ?item1 ?loc) (not (inventory ?agent ?item1))) ; For getting weapon\n            (and (inventory ?agent ?item1) (inventory ?agent ?item2) (not (ready_to_use ?item1))) ; For checking weapons\n        ))\n    :effect (and \n        (or \n            (and (defeated ?target) (not (at ?target ?loc)))\n            (and (inventory ?agent ?item2) (not (inventory ?agent ?item1)))\n            (and (inventory ?agent ?item1))\n            (ready_to_use ?item1)))'\n]\n```"
]