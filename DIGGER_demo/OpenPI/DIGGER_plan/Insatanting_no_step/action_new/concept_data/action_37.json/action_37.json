[
    "(:action unroll_tape\n    :parameters (?p - player ?loc - location ?tape - tape)\n    :precondition (and (at ?p ?loc) (inventory ?p ?tape) (not (is_unrolled ?tape)))\n    :effect (and (is_unrolled ?tape))",
    "(:action unroll\n    :parameters (?actor - agent ?loc - location ?item - object)\n    :precondition (and (at ?actor ?loc) (inventory ?actor ?item) (not (is_unrolled ?item)))\n    :effect (is_unrolled ?item))",
    "(:action measure ;  Measure an object and update its status\n  :parameters (?agent - person ?object - object ?attribute - attribute ?value - value)\n  :precondition (and (at ?agent ?location) (inventory ?agent ?object) (has_attribute ?object ?attribute) (measureable ?attribute ?value))\n  :effect (and (measured ?object ?attribute ?value) (not (has_attribute ?object ?attribute))",
    "(:action fold ; Fold an item and update its status\n  :parameters (?p - player ?loc - location ?item - object)\n  :precondition (and (at ?p ?loc) (inventory ?p ?item) (or (is_cut ?item) (is_folded ?item)))\n  :effect (and (when (is_cut ?item) (is_folded ?item))",
    "(:action tape ;  Use tape to join two items together\n  :parameters (?p - player ?loc - location ?item1 - object ?item2 - object ?tape - tape)\n  :precondition (and (at ?p ?loc) (inventory ?p ?tape) (inventory ?p ?item1) (inventory ?p ?item2) (is_smooth ?item1) (is_smooth ?item2))\n  :effect (is_joined ?item1 ?item2)\n)",
    "(:action complete ; Complete a multi-step task involving an item\n  :parameters (?p - player ?loc - location ?item - object ?length - length ?item2 - object)\n  :precondition (and \n    (at ?p ?loc)\n    (inventory ?p ?item)\n    (or \n      (not (is_unrolled ?item))\n      (and (is_unrolled ?item) (not (is_cut ?item ?length)))\n      (and (is_cut ?item ?length) (not (is_folded_halfway ?item)))\n      (and (is_folded_halfway ?item) (not (is_folded_completely ?item)))\n      (and (is_folded_completely ?item) (not (are_ends_joined ?item ?item2)))\n      (and (are_ends_joined ?item ?item2) (not (is_completed ?item)))\n    )\n  )\n  :effect (and \n    (or \n      (is_unrolled ?item)\n      (is_cut ?item ?length)\n      (is_folded_halfway ?item)\n      (is_folded_completely ?item)\n      (are_ends_joined ?item ?item2)\n      (is_completed ?item)\n    )"
]