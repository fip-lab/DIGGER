[
    "(:action equip_weapon\n    :parameters (?p - player ?w - weapon)\n    :precondition (and (inventory ?p ?w) (not (equipped ?w)))\n    :effect (and (equipped ?w) (not (inventory ?p ?w))",
    "(:action load_ammunition\n    :parameters (?p - player ?a - ammunition ?w - weapon)\n    :precondition (and (inventory ?p ?a) (equipped ?w) (not (loaded ?w)))\n    :effect (and (loaded ?w) (not (inventory ?p ?a))",
    "(:action equip\n    :parameters (?p - player ?item - object ?container - object)\n    :precondition (and \n        (inventory ?p ?item) \n        (not (equipped ?item)) \n        (or \n            (and (weapon ?item) (not (loaded ?container)) (equipped ?container))\n            (and (ammunition ?item) (weapon ?container))\n            (not (container ?container))\n        )\n    )\n    :effect (and \n        (equipped ?item)\n        (not (inventory ?p ?item))",
    "(:action load\n    ; Load a resource into an entity and update task status\n    :parameters (?user - entity ?resource - object ?target - entity)\n    :precondition (and (equipped ?target) (inventory ?user ?resource))\n    :effect (and (loaded ?target ?resource) (not (inventory ?user ?resource))",
    "(:action use_incendiary_weapon\n    :parameters (?p - player ?i - incendiary_weapon ?t - thug)\n    :precondition (and (inventory ?p ?i) (health_below_50 ?t))\n    :effect (and (used ?i ?t) (not (inventory ?p ?i))",
    "(:action attack_thug\n    :parameters (?p - player ?w - weapon ?t - thug)\n    :precondition (and (inventory ?p ?w) (in_range ?p ?t))\n    :effect (and (attacked ?t ?w) (health_decreased ?t))",
    "(:action use\n    :parameters (?p - player ?item - object ?target - entity)\n    :precondition (and (inventory ?p ?item)\n                      (or (health_below_50 ?target)\n                          (in_range ?p ?target)))\n    :effect (and (used ?item ?target)\n                 (not (inventory ?p ?item))",
    "(:action attack\n  :parameters (?p - player ?w - weapon ?a - ammunition ?t - thug ?iw - incendiary_weapon)\n  :precondition (and \n    (equipped ?w)\n    (or (loaded ?w ?a) (used ?iw))\n    (not (health_below_50 ?t))\n  )\n  :effect (and \n    (health_decreased ?t)\n    (or (availability ?w equipped) (location ?iw used))"
]