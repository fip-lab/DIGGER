[
    "(:action pour\n    ; Pour a liquid into a container and update the state of items involved\n    :parameters (?c - container ?i - item ?l - liquid)\n    :precondition (and (not (in ?i ?c)) (in ?l ?c) (at_location ?c ?loc) (dry ?i))\n    :effect (and (in ?i ?c) (wet ?i) (at_location ?c countertop))",
    "(:action remove_wick\n    :parameters (?w - wick ?l - lamp)\n    :precondition (and (in ?w ?l) (wicked ?l))\n    :effect (and (not (in ?w ?l))",
    "(:action remove ;  Remove an item from a container and update its state\n  :parameters (?item - object ?container - object)\n  :precondition (and (in ?item ?container) (contains ?container ?item))\n  :effect (and (not (in ?item ?container))",
    "(:action dry ; Dry an entity and update its status\n    :parameters (?entity - object)\n    :precondition (wet ?entity)\n    :effect (and (dry ?entity) (not (wet ?entity))",
    "(:action use\n    :parameters (?item1 - object ?item2 - object ?state - state)\n    :precondition (and \n        (available ?item1) \n        (available ?item2) \n        (not (in_state ?item1 ?state)) \n        (not (in_state ?item2 ?state))\n    )\n    :effect (and \n        (in_state ?item1 ?state) \n        (in_state ?item2 ?state)\n    )"
]