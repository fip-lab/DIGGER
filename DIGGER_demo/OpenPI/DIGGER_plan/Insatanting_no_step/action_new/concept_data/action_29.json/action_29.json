[
    "(:action assemble\n    :parameters (?p - player ?item - object ?location - location ?device - device)\n    :precondition (and \n        (at ?p ?location) \n        (or \n            (and (at ?item ?location) (not (inventory ?p ?item)))\n            (and (inventory ?p ?item) (not (melted ?item)) (at ?device kitchen) (power ?device off))\n        )\n    )\n    :effect (and \n        (or \n            (and (inventory ?p ?item) (not (at ?item ?location))",
    "(:action pour\n  ; General action for pouring a substance into a container\n  :parameters (?actor - entity ?substance - material ?container - container)\n  :precondition (and (melted ?substance) (inventory ?actor ?substance) (at ?container kitchen))\n  :effect (and (in_container ?substance ?container) (not (melted ?substance))",
    "(:action freeze\n  ; General action for freezing a substance in a container\n  :parameters (?actor - entity ?substance - material ?container - container)\n  :precondition (and (in_container ?substance ?container) (at ?container freezer))\n  :effect (and (frozen ?substance) (not (in_container ?substance ?container))",
    "(:action freeze\n    :parameters (?p - player ?item - object ?location - place)\n    :precondition (and (in_mold ?item) (at ?location kitchen))\n    :effect (and (frozen ?item) (not (in_mold ?item))",
    "(:action pop ; Pop an item out of its container and update status\n    :parameters (?p - player ?item - object ?container - object)\n    :precondition (and (contained_in ?item ?container) (prepared ?item) (at ?container ?location))\n    :effect (and (out_of_container ?item) (not (prepared ?item))"
]