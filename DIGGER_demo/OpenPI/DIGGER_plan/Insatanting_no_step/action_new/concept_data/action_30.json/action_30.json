[
    "(:action boil_macaroni\n    :parameters (?p - player ?m - macaroni ?w - water ?pot - boiling_pot ?s - salt ?o - oil)\n    :precondition (and (at ?p ?kitchen) (in ?m ?bag) (in ?w ?pipes) (in ?pot ?cabinet) (in ?s ?container) (in ?o ?container))\n    :effect (and (in ?m ?boiling_pot) (in ?w ?boiling_pot) (in ?s ?boiling_pot) (in ?o ?boiling_pot) (boiling ?w))",
    "(:action cool_macaroni\n    :parameters (?p - player ?m - macaroni ?w - water)\n    :precondition (and (at ?p ?kitchen) (in ?m ?boiling_pot) (boiled ?m))\n    :effect (and (in ?m ?strainer) (cooling ?m))",
    "(:action boil\n    :parameters (?p - player ?item - object ?water - water ?pot - boiling_pot ?salt - salt ?oil - oil ?strainer - strainer)\n    :precondition (and (at ?p ?kitchen)\n                       (in ?item ?bag)\n                       (in ?water ?pipes)\n                       (in ?pot ?cabinet)\n                       (in ?salt ?container)\n                       (in ?oil ?container)\n                       (or (not (boiled ?item)) (boiled ?item)))\n    :effect (and (when (not (boiled ?item))",
    "(:action toss_macaroni\n        :parameters (?p - player ?m - macaroni ?o - oil ?pan - pan)\n        :precondition (and (at ?p ?kitchen) (in ?m ?strainer) (in ?o ?container) (in ?pan ?cabinet))\n        :effect (and (in ?m ?pan) (in ?o ?pan) (on_stove ?pan))",
    "(:action add_ingredients\n        :parameters (?p - player ?ing - ingredient ?pan - pan)\n        :precondition (and (at ?p ?kitchen) (in ?ing ?container) (on_stove ?pan))\n        :effect (in ?ing ?pan)\n    )",
    "(:action toss\n    :parameters (?p - player ?item1 - object ?item2 - object ?container1 - container ?container2 - container ?location - location)\n    :precondition (and (at ?p ?location) (in ?item1 ?container1) (in ?item2 ?container2) (available ?container2))\n    :effect (and (in ?item1 ?container2) (in ?item2 ?container2) (on_stove ?container2))",
    "(:action add\n    :parameters (?actor - entity ?item - object ?container - container)\n    :precondition (and (at ?actor ?location) (contains ?container ?base_item) (available ?item))\n    :effect (and (contains ?container ?item) (mixed ?container))",
    "(:action cook_macaroni\n  :parameters (?p - player ?m - macaroni ?pan - pan)\n  :precondition (and (at ?p ?kitchen) (in ?m ?pan) (mixed ?m) (on_stove ?pan))\n  :effect (and (cooked ?m))",
    "(:action serve_macaroni\n  :parameters (?p - player ?m - macaroni ?plate - plate)\n  :precondition (and (cooked ?m) (at ?p ?kitchen) (clean ?plate))\n  :effect (and (served ?m ?plate))",
    "(:action cook\n  :parameters (?p - person ?item - food ?container - container ?location - place)\n  :precondition (and \n                  (at ?p ?location)\n                  (in ?item ?container)\n                  (prepared ?item)\n                  (ready_to_cook ?container)\n                  (or (not (cooked ?item)) (cooked ?item))\n                )\n  :effect (and\n            (cooked ?item)\n            (if (cooked ?item) (served ?item ?container))",
    "(:action serve ; Serve a resource and update task status\n  :parameters (?p - player ?resource - object ?container - container ?location - location)\n  :precondition (and (at ?p ?kitchen) (in ?resource ?container))\n  :effect (and (at ?resource ?location) (served ?resource))"
]