[
    "(:action prepare ; Prepare an item by combining necessary resources\n  :parameters (?p - person ?container - container ?resource1 - resource ?resource2 - resource)\n  :precondition (and (at ?p ?container) (at ?p ?resource1) (at ?p ?resource2))\n  :effect (and (contains ?container ?resource1) (contains ?container ?resource2) (combined ?resource1 ?resource2))",
    "(:action wet\n  ; Wet a target and update its status\n  :parameters (?p - person ?tool - object ?target - object)\n  :precondition (and (at ?p ?tool) (contains ?tool ?liquid) (prepared ?liquid))\n  :effect (and (wet ?target) (not (dry ?target))",
    "(:action position ; Position an item and perform related tasks\n  :parameters (?p - person ?item - object ?location - location)\n  :precondition (and (at ?p ?item) (at ?item ?location))\n  :effect (and (positioned ?item ?location))",
    "(:action use_item ; Use an item for a task following positioning\n  :parameters (?p - person ?item - object ?task - task ?location - location)\n  :precondition (and (positioned ?item ?location) (ready_for ?task ?location) (usable ?item))\n  :effect (and (task_done ?task ?location) (not (initial_state ?location))",
    "(:action clean\n  :parameters (?p - person ?tool - object ?material - object ?target - object)\n  :precondition (and \n                  (at ?p ?tool)\n                  (at ?p ?material)\n                  (at ?p ?target)\n                  (or \n                      (scraped_paint ?target)\n                      (splatters ?target)\n                      (dirty ?target)))\n  :effect (and \n            (clean ?target)\n            (not (dirty ?target))"
]