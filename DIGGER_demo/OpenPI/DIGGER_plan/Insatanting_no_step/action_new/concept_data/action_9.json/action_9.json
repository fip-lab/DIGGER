[
    "(:action knit\n    :parameters (?p - player ?loc - location ?item1 - object ?item2 - object ?item3 - object)\n    :precondition (and \n        (at ?p ?loc)\n        (inventory ?p ?item1)\n        (or (and (inventory ?p ?item2) (length ?item1 84)) \n            (and (inventory ?p ?item3))\n            (inventory ?p ?item2))\n    )\n    :effect (and \n        (or \n            (and (knitted ?item1) (not (inventory ?p ?item1))",
    "(:action join ;  Join different components to create a combined entity\n:parameters (?p - player ?composite - object ?component1 - object ?component2 - object)\n:precondition (and (at ?p ?loc) (inventory ?p ?component1) (inventory ?p ?component2) (form ?composite rectangular))\n:effect (and (joined ?composite) (components_joined ?composite ?component1 ?component2))",
    "(:action draw_top\n        :parameters (?p - player ?loc - location ?web - web ?needle - needle ?yarn_piece - yarn)\n        :precondition (and (at ?p ?loc) (inventory ?p ?web) (inventory ?p ?needle) (inventory ?p ?yarn_piece) (ends ?web joined))\n        :effect (and (secured_top ?web) (not (inventory ?p ?yarn_piece))",
    "(:action draw ; Draw an item or conclude a crafting task\n    :parameters (?agent - agent ?loc - location ?resource - resource ?tool - tool ?material - material)\n    :precondition (and (at ?agent ?loc) (inventory ?agent ?resource) (inventory ?agent ?tool) (inventory ?agent ?material) (ends ?resource joined))\n    :effect (and (secured ?resource) (not (inventory ?agent ?material))",
    "(:action fasten\n    :parameters (?player - player ?loc - location ?item1 - object ?item2 - object ?item3 - object ?item4 - object)\n    :precondition (and \n        (at ?player ?loc) \n        (inventory ?player ?item1) \n        (inventory ?player ?item2)\n        (inventory ?player ?item3)\n        (inventory ?player ?item4)\n        (or (and (yarn ?item1) (not (knitted ?item1))) ; Initial state for knitting\n            (and (web ?item1) (length ?item1 84) (not (sewn ?item1))) ; State after knitting, before sewing\n            (and (web ?item1) (sewn ?item1) (not (joined ?item1))) ; State after sewing, before joining ends\n            (and (web ?item1) (joined ?item1) (not (secured ?item1))) ; State after joining ends, before drawing top\n            (and (yarn ?item1) (not (cord ?item1))) ; State before twisting yarn into a cord\n            (and (cord ?item1) (not (fastened ?item2))) ; State before fastening tassel to cord\n        ))\n    :effect (and \n        (or (and (yarn ?item1) (knitted ?item1) (length ?item1 84) (not (inventory ?player ?item1))"
]