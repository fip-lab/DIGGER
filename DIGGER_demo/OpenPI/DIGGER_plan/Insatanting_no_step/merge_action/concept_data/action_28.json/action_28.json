{
    "cut": [
        "(:action cut_elastic\n    :parameters (?p - player ?elastic - elastic ?scissors - item ?loc - location)\n    :precondition (and (at ?p ?loc) (at ?elastic ?loc) (inventory ?p ?scissors))\n    :effect (and (cut ?elastic) (not (uncut ?elastic)) (shorter ?elastic) (not (longer ?elastic)))\n)\n\n"
    ],
    "slip": [
        "(:action slip_large_bead\n    :parameters (?p - player ?elastic - elastic ?large_bead - bead ?loc - location)\n    :precondition (and (at ?p ?loc) (at ?elastic ?loc) (inventory ?p ?large_bead))\n    :effect (and (on_strip ?large_bead ?elastic) (not (inventory ?p ?large_bead)))\n)\n\n",
        "(:action slip_small_bead\n    :parameters (?p - player ?elastic - elastic ?small_bead - bead ?loc - location)\n    :precondition (and (at ?p ?loc) (at ?elastic ?loc) (inventory ?p ?small_bead))\n    :effect (and (on_strip ?small_bead ?elastic) (not (inventory ?p ?small_bead)))\n)\n\n"
    ],
    "continue": [
        "(:action continue_pattern\n    :parameters (?p - player ?elastic - elastic ?small_bead - bead ?large_bead - bead ?loc - location)\n    :precondition (and (at ?p ?loc) (at ?elastic ?loc) (inventory ?p ?small_bead) (inventory ?p ?large_bead))\n    :effect (and (on_strip ?small_bead ?elastic) (on_strip ?large_bead ?elastic) (not (inventory ?p ?small_bead)) (not (inventory ?p ?large_bead)))\n)\n\n",
        "(:action finish_ring\n    :parameters (?p - player ?elastic - elastic ?small_bead - bead ?loc - location)\n    :precondition (and (at ?p ?loc) (on_strip ?small_bead ?elastic))\n    :effect (and (completed_ring ?elastic) (not (incomplete_ring ?elastic)))\n)\n```\n\nThese actions follow the steps and descriptions provided for making a bead ring, capturing the necessary preconditions and effects for each action."
    ]
}