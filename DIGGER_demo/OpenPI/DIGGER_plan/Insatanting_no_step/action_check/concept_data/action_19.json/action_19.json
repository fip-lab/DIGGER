[
    "```\n[\n  '(:action cut ; Cut an item using a tool\n    :parameters (?p - person ?item - object ?tool - tool)\n    :precondition (and (inventory ?p ?item) (inventory ?p ?tool) (not (cut ?item)))\n    :effect (cut ?item))',\n  \n  '(:action squeeze\n    :parameters (?p - person ?item - object ?target - object ?resource - resource)\n    :precondition (and\n      (inventory ?p ?item)                  ; The person must have the item in their inventory\n      (or                                   ; The action must correspond to a valid task\n        (and                                ; Task: Squeeze juice\n          (is_type ?item lemon)             ; The item is a lemon\n          (is_type ?target container)       ; The target is a container\n          (cut ?item)                       ; The lemon is already cut\n        )\n        (and                                ; Task: Rub the item on a target\n          (is_type ?item lemon)             ; The item is a lemon\n          (is_type ?target faucet)          ; The target is a faucet\n          (not (full ?item))                ; The item is not full (e.g., already squeezed)\n          (not (clean ?target))             ; The target is not clean\n        )\n        (and                                ; Task: Wash a target\n          (is_type ?target faucet)          ; The target is a faucet\n          (is_type ?resource water)         ; The resource is water\n          (not (clean ?target))             ; The target is not clean\n          (has_water ?resource)             ; The resource (water) is available\n        )\n      )\n    )\n    :effect (and\n      (or\n        (and                                ; Task: Squeeze juice\n          (is_type ?item lemon)             ; The item is a lemon\n          (is_type ?target container)       ; The target is a container\n          (has_juice ?target)               ; The container now contains juice\n          (not (full ?item))                ; The item is no longer full\n        )\n        (and                                ; Task: Rub the item on a target\n          (is_type ?item lemon)             ; The item is a lemon\n          (is_type ?target faucet)          ; The target is a faucet\n          (clean ?target)                   ; The target is now clean\n        )\n        (and                                ; Task: Wash a target\n          (is_type ?target faucet)          ; The target is a faucet\n          (is_type ?resource water)         ; The resource is water\n          (clean ?target)                   ; The target is now clean\n        )\n      )\n    )\n  )'\n]\n```"
]