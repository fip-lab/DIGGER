[
    "```lisp\n[\n  (:action assemble\n    :parameters (?p - agent ?item - object ?location - location ?device - device)\n    :precondition (and \n        (at ?p ?location) \n        (or \n            (and (at ?item ?location) (not (inventory ?p ?item)))\n            (and (inventory ?p ?item) (not (melted ?item)) (at ?device kitchen) (power ?device off))\n        )\n    )\n    :effect (and \n        (or \n            (and (inventory ?p ?item) (not (at ?item ?location)))\n        )\n    )\n  ),\n  (:action pour\n    :parameters (?actor - agent ?substance - material ?container - container)\n    :precondition (and (melted ?substance) (inventory ?actor ?substance) (at ?container kitchen))\n    :effect (and (in_container ?substance ?container) (not (melted ?substance)))\n  ),\n  (:action freeze\n    :parameters (?actor - agent ?substance - material ?container - container)\n    :precondition (and (in_container ?substance ?container) (at ?container freezer))\n    :effect (and (frozen ?substance) (not (in_container ?substance ?container)))\n  ),\n  (:action freeze\n    :parameters (?p - agent ?item - object ?location - location)\n    :precondition (and (in_mold ?item) (at ?location kitchen))\n    :effect (and (frozen ?item) (not (in_mold ?item)))\n  ),\n  (:action pop\n    :parameters (?p - agent ?item - object ?container - container)\n    :precondition (and (contained_in ?item ?container) (prepared ?item) (at ?container ?location))\n    :effect (and (out_of_container ?item) (not (prepared ?item)))\n  )\n]\n```"
]