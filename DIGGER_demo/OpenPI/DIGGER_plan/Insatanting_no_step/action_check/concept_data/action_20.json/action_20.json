[
    "[\n  '(:action crumple\\n    :parameters (?agent - person ?item - object)\\n    :precondition (and (at ?agent ?item) (state ?item flat))\\n    :effect (and (state ?item crumpled) (not (state ?item flat))))',\n  \n  '(:action thread\\n    :parameters (?p - person ?item - object ?medium - object)\\n    :precondition (and (at ?p ?item) (at ?p ?medium) (state ?item crumpled))\\n    :effect (and (location ?item threaded_on_medium) (not (location ?item previous_location))))',\n    \n  '(:action twist\\n    :parameters (?p - person ?obj - object ?tool - tool)\\n    :precondition (and (at ?p ?obj) (at ?tool ?p) (shape ?obj ?initial_shape))\\n    :effect (and (shape ?obj twisted) (not (shape ?obj ?initial_shape))))',\n    \n  '(:action complete\\n    :parameters (?p - person ?task - object)\\n    :precondition (and (status ?task in_progress))\\n    :effect (and (status ?task completed) (not (status ?task in_progress))))',\n    \n  '(:action untwist\\n    :parameters (?p - person ?item - object ?tool - tool)\\n    :precondition (and (at ?p ?item) (at ?tool ?p) (shape ?item initial_shape))\\n    :effect (and (shape ?item new_shape) (use ?item for_new_purpose) (not (shape ?item initial_shape))))',\n    \n  '(:action adjust\\n    :parameters (?entity - object ?item - object ?state_from - state ?state_to - state)\\n    :precondition (and (at ?entity ?item) (state ?item ?state_from))\\n    :effect (and (state ?item ?state_to) (not (state ?item ?state_from))))',\n    \n  '(:action adjust_paper\\n    :parameters (?p - person ?hanger - hanger ?paper - paper)\\n    :precondition (and (at ?p ?hanger) (state ?paper threaded_on_hanger))\\n    :effect (and (state ?paper scrunched) (not (state ?paper threaded_on_hanger))))',\n    \n  '(:action adjust\\n    :parameters (?p - person ?hanger - hanger ?paper - paper ?state_from - state ?state_to - state)\\n    :precondition (and (at ?p ?hanger) (state ?paper ?state_from))\\n    :effect (and (state ?paper ?state_to) (not (state ?paper ?state_from))))'\n]"
]