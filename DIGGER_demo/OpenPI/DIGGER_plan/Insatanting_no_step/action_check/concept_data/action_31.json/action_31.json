[
    "```lisp\n(:action catch ; Catch an entity and update its status\n    :parameters (?p - player ?e - entity ?loc - location ?item - object)\n    :precondition (and \n        (at ?p ?loc)\n        (at ?e ?loc)\n        (not (inventory ?p ?e))\n    )\n    :effect (and\n        (inventory ?p ?e)\n        (not (at ?e ?loc))\n    )\n)\n\n(:action train ; Train an entity and update its status\n    :parameters (?trainer - agent ?entity - entity)\n    :precondition (and \n        (inventory ?trainer ?entity) \n        (untrained ?entity)\n    )\n    :effect (and \n        (trained ?entity)\n    )\n)\n\n(:action go ; Move an entity from one location to another\n    :parameters (?entity - entity ?from - location ?to - location)\n    :precondition (and \n        (at ?entity ?from) \n        (connected ?from ?to)\n    )\n    :effect (and \n        (at ?entity ?to) \n        (not (at ?entity ?from))\n    )\n)\n\n(:action copy ; Copy a resource and update inventory status\n    :parameters (?actor - agent ?resource - object ?location - location)\n    :precondition (and \n        (at ?actor ?location) \n        (not (has ?actor ?resource))\n    )\n    :effect (and \n        (has ?actor ?resource)\n    )\n)\n\n(:action evolve ; Evolve an entity and update state\n    :parameters (?entity - entity ?evolved_form - entity)\n    :precondition (and \n        (evolved ?entity) \n        (not (inventory ?evolved_form))\n    )\n    :effect (and \n        (not (inventory ?entity))\n    )\n)\n```"
]