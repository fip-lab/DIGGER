{
    "clean": [
        "(:action dust_room\n  :parameters (?rug - rug ?p - player ?room - location)\n  :precondition (and (at ?rug ?room) (at ?p ?room))\n  :effect (dust_free ?room)\n)\n```\n\n### Step 3: empty_trash basket1 trash_bag1\n```pddl\n",
        "(:action empty_trash\n  :parameters (?basket - basket ?trash_bag - trash_bag ?p - player)\n  :precondition (and (at ?basket around_house) (at ?trash_bag around_house) (at ?p around_house) (full ?basket))\n  :effect (and (not (full ?basket)) (full ?trash_bag) (not (at ?basket around_house)) (at ?basket ?trash_bag))\n)\n```\n\n### Step 4: clean_surface tv cleaner1\n```pddl\n",
        "(:action clean_surface\n  :parameters (?surface - tv ?cleaner - cleaner ?p - player)\n  :precondition (and (at ?surface around_house) (at ?cleaner around_house) (at ?p around_house))\n  :effect (and (clean ?surface) (used ?cleaner))\n)\n```\n\n### Step 5: pickup_throw_rugs rug1\n```pddl\n",
        "(:action clean_room\n  :parameters (?npc - npc ?room - basement ?p - player)\n  :precondition (and (at ?npc ?room) (at ?p ?room))\n  :effect (clean ?room)\n)\n```\n\nThese actions should capture the necessary steps and conditions for efficiently cleaning a home based on the provided descriptions and entity states."
    ],
    "pickup": [
        "(:action pickup_items\n  :parameters (?item - item ?basket - basket ?p - player)\n  :precondition (and (at ?item around_house) (at ?p around_house))\n  :effect (and (inventory ?p ?item) (not (at ?item around_house)) (at ?item ?basket))\n)\n```\n\n### Step 2: get_dust_room rug1\n```pddl\n",
        "(:action pickup_throw_rugs\n  :parameters (?rug - rug ?p - player)\n  :precondition (and (at ?rug around_house) (at ?p around_house))\n  :effect (and (inventory ?p ?rug) (not (at ?rug around_house)))\n)\n```\n\n### Step 6: clean_room npc basement\n```pddl\n"
    ]
}