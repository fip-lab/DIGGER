[
    "(:action mix ; Mix a set of items to create a new state\n  :parameters (?actor - agent ?entity - item ?location - place)\n  :precondition (and (at ?actor ?location) (at ?entity ?location) (not (combined ?entity)))\n  :effect (and (combined ?entity) (not (separate ?entity))",
    "(:action pour\n  ; Pour a substance into a container\n  :parameters (?agent - agent ?substance - substance ?container - container ?location - location)\n  :precondition (and (at ?agent ?location) (at ?substance ?location) (at ?container ?location) (prepared ?substance) (empty ?container))\n  :effect (and (in_container ?substance ?container) (not (empty ?container))",
    "(:action grind ;  Perform a grinding action on a resource and update its state\n:parameters (?entity - player ?resource - object ?tool - tool ?location - place)\n:precondition (and (at ?entity ?location) (at ?resource ?location) (at ?tool ?location) (not (processed ?resource)))\n:effect (and (processed ?resource) (dirty ?tool))",
    "(:action process_item ; Generalized action to process an item and update its state\n  :parameters (?agent - agent ?item - object ?tool - object ?loc - location ?state1 - state ?state2 - state)\n  :precondition (and (at ?agent ?loc) (at ?item ?loc) (at ?tool ?loc) (?state1 ?item) (not (?state2 ?item)))\n  :effect (and (?state2 ?item) (not (?state1 ?item))",
    "(:action mix_ingredients\n     :parameters (?player - agent ?mixture - object ?loc - location)\n     :precondition (process_item ?player ?mixture ?tool ?loc (not mixed) mixed)\n     :effect (process_item ?player ?mixture ?tool ?loc (not mixed) mixed)\n   )",
    "(:action pour_into_container\n     :parameters (?player - agent ?mixture - object ?container - object ?loc - location)\n     :precondition (process_item ?player ?mixture ?container ?loc (not full) full)\n     :effect (process_item ?player ?mixture ?container ?loc (not full) full)\n   )",
    "(:action grind_ingredients\n     :parameters (?player - agent ?mixture - object ?mortar_pestle - object ?loc - location)\n     :precondition (process_item ?player ?mixture ?mortar_pestle ?loc (not ground) ground)\n     :effect (process_item ?player ?mixture ?mortar_pestle ?loc (not ground) ground)\n   )",
    "(:action gotolocation\n     :parameters (?agent - agent ?container - object ?loc1 - location ?loc2 - location)\n     :precondition (process_item ?agent ?container ?tool ?loc1 (at ?loc1) (at ?loc2))\n     :effect (process_item ?agent ?container ?tool ?loc1 (at ?loc1) (at ?loc2))"
]