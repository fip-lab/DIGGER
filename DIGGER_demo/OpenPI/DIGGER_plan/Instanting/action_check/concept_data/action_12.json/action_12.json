[
    "```lisp\n[\n  '(:action obtain ; Obtain a resource or replace a component\n    :parameters (?agent - agent ?resource - entity ?location - place)\n    :precondition (and (at ?agent ?location) \n                       (or (available ?resource) \n                           (and (requires_replacement ?resource) (condition_met ?resource))))\n    :effect (and (or (inventory ?agent ?resource) \n                     (replaced ?resource)))\n  )',\n\n  '(:action pour ; Perform an action involving pouring and updating the state of objects\n    :parameters (?agent - agent ?item1 - object ?item2 - object ?location - place)\n    :precondition (and (at ?agent ?location) (inventory ?agent ?item1) (at ?item2 ?location))\n    :effect (and (not (inventory ?agent ?item1)))\n  )',\n\n  '(:action clean ; Perform an action involving cleaning and updating the state of objects\n    :parameters (?agent - agent ?item1 - object ?item2 - object ?location - place)\n    :precondition (and (at ?agent ?location) (inventory ?agent ?item1) (on ?item2 ?location))\n    :effect (and (not (on ?item2 ?location)))\n  )',\n\n  '(:action dissolve ; Dissolve a substance from an object\n    :parameters (?agent - agent ?object - object ?substance - dissolvent)\n    :precondition (and (at ?agent ?object) (on ?substance ?object))\n    :effect (and (dissolved ?object) (not (on ?substance ?object)))\n  )'\n]\n```"
]