[
    "Based on the task \"Get Wailord in Pok\u00e9mon Emerald,\" here are the corresponding PDDL actions for each step:\n\n### Task: Get Wailord in Pok\u00e9mon Emerald\n\n#### Steps:\n1. evolution_of_wailord npc\n2. train_wailmer npc\n3. evolve npc\n4. copy-rare-candies wailmer\n5. evolve wailmer\n\n#### Descriptions:\n- This is the pre-evolution of Wailord.\n- This Wailmer can be pretty annoying to train, so be patient.\n- Train it until it evolves.\n- Go to battle frontier and copy some rare candies.\n- Give the rare candies to a Wailmer and evolve it into a Wailord using them.\n\n#### Entity State:\n- {'wailmer': {'wailmer': [{'attribute': 'action', 'before': 'unused', 'after': 'used'}, {'attribute': 'knowledge', 'before': 'untrained', 'after': 'trained'}, {'attribute': 'going', 'before': 'still', 'after': 'going'}, {'attribute': 'knowledge', 'before': 'untrained', 'after': 'trained'}, {'attribute': 'change', 'before': 'unevolved | still wailmer', 'after': 'evolved | evolving'}, {'attribute': 'location', 'before': 'unattained', 'after': 'now attained'}, {'attribute': 'items', 'before': 'uncopied', 'after': 'copied'}, {'attribute': 'full', 'before': 'hungry', 'after': 'full'}, {'attribute': 'change', 'before': 'unevolved', 'after': 'evolved'}, {'attribute': 'action', 'before': 'without rare candies', 'after': 'now holder of rare candy'}]}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}]}}}\n\n### PDDL Actions:\n\n```lisp\n(:action evolution_of_wailord\n    :parameters (?npc - npc ?wailmer - wailmer)\n    :precondition (and (npc ?npc) (pre_evolution ?wailmer))\n    :effect (and (evolution_of_wailord ?wailmer) (not (pre_evolution ?wailmer)))\n)\n\n(:action train_wailmer\n    :parameters (?npc - npc ?wailmer - wailmer)\n    :precondition (and (npc ?npc) (untrained ?wailmer))\n    :effect (and (trained ?wailmer) (not (untrained ?wailmer)))\n)\n\n(:action evolve\n    :parameters (?npc - npc ?wailmer - wailmer)\n    :precondition (and (npc ?npc) (trained ?wailmer) (unevolved ?wailmer))\n    :effect (and (evolved ?wailmer) (not (unevolved ?wailmer)))\n)\n\n(:action copy_rare_candies\n    :parameters (?npc - npc ?wailmer - wailmer ?candies - rare_candies)\n    :precondition (and (npc ?npc) (at_battle_frontier ?npc) (not (copied ?candies)))\n    :effect (and (copied ?candies) (has_candies ?wailmer ?candies))\n)\n\n(:action evolve_wailmer\n    :parameters (?npc - npc ?wailmer - wailmer ?candies - rare_candies)\n    :precondition (and (npc ?npc) (has_candies ?wailmer ?candies) (unevolved ?wailmer))\n    :effect (and (evolved ?wailmer) (not (unevolved ?wailmer)) (not (has_candies ?wailmer ?candies)))\n)\n```\n\nThese actions reflect the steps and descriptions provided in the task, ensuring that the necessary conditions and resulting changes are accurately captured in the PDDL format."
]