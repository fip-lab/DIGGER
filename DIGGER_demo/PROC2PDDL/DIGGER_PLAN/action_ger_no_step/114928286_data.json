[
    "Certainly! To generate PDDL actions, I'll need the specific steps, descriptions, and entity states for the task \"get-materials\". Since these details are missing from your request, I'll create an illustrative example based on a hypothetical scenario where the task is to gather materials for a construction project. \n\nLet's assume the following details:\n\nTask: get-materials\nFile Name: gather_materials.pddl\nSteps:\nStep 1: Collect wood from the storage.\nStep 2: Gather nails from the toolbox.\nStep 3: Obtain paint from the shed.\nStep 4: Retrieve tools from the workshop.\n\nDescriptions:\n- Wood is stored in the storage area.\n- Nails are kept in the toolbox.\n- Paint is located in the shed.\n- Tools are available in the workshop.\n\nEntity State:\n- Wood is in the storage.\n- Nails are in the toolbox.\n- Paint is in the shed.\n- Tools are in the workshop.\n- Agent is in the main area.\n\nBased on the provided information, here are the PDDL actions:\n\n```pddl\n(define (domain gather_materials)\n  (:requirements :strips :typing)\n  (:types material location agent)\n  (:predicates\n    (at ?m - material ?l - location)\n    (in ?a - agent ?l - location)\n    (collected ?m - material)\n  )\n\n  ;; Action 1: Collect wood from the storage\n  (:action collect_wood\n    :parameters (?a - agent ?w - material ?s - location)\n    :precondition (and\n      (at ?w storage)\n      (in ?a main_area)\n    )\n    :effect (and\n      (collected ?w)\n      (not (at ?w storage))\n    )\n  )\n\n  ;; Action 2: Gather nails from the toolbox\n  (:action gather_nails\n    :parameters (?a - agent ?n - material ?t - location)\n    :precondition (and\n      (at ?n toolbox)\n      (in ?a main_area)\n    )\n    :effect (and\n      (collected ?n)\n      (not (at ?n toolbox))\n    )\n  )\n\n  ;; Action 3: Obtain paint from the shed\n  (:action obtain_paint\n    :parameters (?a - agent ?p - material ?sh - location)\n    :precondition (and\n      (at ?p shed)\n      (in ?a main_area)\n    )\n    :effect (and\n      (collected ?p)\n      (not (at ?p shed))\n    )\n  )\n\n  ;; Action 4: Retrieve tools from the workshop\n  (:action retrieve_tools\n    :parameters (?a - agent ?t - material ?w - location)\n    :precondition (and\n      (at ?t workshop)\n      (in ?a main_area)\n    )\n    :effect (and\n      (collected ?t)\n      (not (at ?t workshop))\n    )\n  )\n)\n```\n\nThis PDDL domain definition includes actions for collecting wood, gathering nails, obtaining paint, and retrieving tools, based on the hypothetical task and steps provided. Each action includes the necessary parameters, preconditions, and effects to reflect the described entity states and steps.",
    "Based on the task \"throw-hotdogs,\" the steps, descriptions, and entity states provided, here are the PDDL actions:\n\nTask: throw-hotdogs\n\nSteps:\n1. Select a food item to throw.\n2. Lay down masking tape in parallel strips across the floor.\n\nDescriptions:\n- Select a food item to throw. There are a couple of qualifications. First, it must be long, thin, hard, and straight, like a frozen hot dog, for example. Second, it must be a reasonably stiff item. Third, it should be somewhere between 15 and 20 cm (6-8 inches) long; the experiment can be performed otherwise, but read on, and you will see why this size is optimal. There are lots of other items that fit these criteria including Otter Pops, celery, and churros. (If you simply can't come to grips with throwing perfectly good food, see the Tips section for some additional ideas.)\n- Lay down masking tape in parallel strips across the floor as far apart as your projectile is long. The strips should be perpendicular to the direction you will be throwing. If your item is 15-45 cm (6-18 inches) long, lay down about 6-10 strips; lay down fewer if longer and more if shorter.\n\nEntity State:\n- masking tape: {length: rolled, location: on roll}\n- player: {knowledge: unselected, location: away from wall}\n\nPDDL Actions:\n\n```lisp\n(:action select-food-item\n    :parameters (?f - food ?p - player)\n    :precondition (and (long ?f) (thin ?f) (hard ?f) (straight ?f) (stiff ?f) (between-15-and-20-cm ?f) (unselected ?p))\n    :effect (and (selected ?f) (selected ?p) (not (unselected ?p)))\n)\n\n(:action lay-down-masking-tape\n    :parameters (?t - tape ?p - player)\n    :precondition (and (rolled ?t) (onRoll ?t) (selected ?p))\n    :effect (and (unrolled ?t) (inPieces ?t) (not (rolled ?t)) (not (onRoll ?t)))\n)\n```\n\nExplanation:\n\n1. **select-food-item**:\n   - **Parameters**: ?f (food item), ?p (player)\n   - **Preconditions**: The food item must be long, thin, hard, straight, stiff, and between 15 and 20 cm. The player must be unselected.\n   - **Effects**: The food item and player are selected, and the player is no longer unselected.\n\n2. **lay-down-masking-tape**:\n   - **Parameters**: ?t (tape), ?p (player)\n   - **Preconditions**: The tape must be rolled and on the roll. The player must be selected.\n   - **Effects**: The tape is unrolled and in pieces, and it is no longer rolled or on the roll.\n\nThese actions capture the essential steps and conditions for selecting a food item and preparing the floor with masking tape for the task of throwing hotdogs."
]