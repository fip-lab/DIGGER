[
    "To generate PDDL actions for the task \"build_a_shelter,\" we will create actions based on the descriptions and entity states provided. The actions will reflect the steps required to build a shelter using branches and sticks.\n\n### PDDL Actions for \"build_a_shelter\":\n\n1. **Action: collect_branches**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (not (collected ?b))\n   - **Effects**: (collected ?b)\n\n2. **Action: bundle_branches**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (collected ?b)\n   - **Effects**: (bundled ?b)\n\n3. **Action: form_structure**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (bundled ?b)\n   - **Effects**: (in_formation ?b)\n\n4. **Action: stack_branches**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (in_formation ?b)\n   - **Effects**: (stacked ?b)\n\n5. **Action: fortify_structure**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (stacked ?b)\n   - **Effects**: (fortified ?b)\n\n6. **Action: tie_with_bark**\n   - **Parameters**: (?b - branch)\n   - **Preconditions**: (fortified ?b)\n   - **Effects**: (tied_with_bark ?b)\n\n### Explanation:\n\n- **collect_branches**: This action represents gathering branches, transforming their availability from \"all over the place\" to \"collected.\"\n  \n- **bundle_branches**: After collecting, branches are bundled together, changing their organization from \"scattered\" to \"bundled.\"\n\n- **form_structure**: Bundled branches are then arranged to form the basic structure of the shelter, changing their location from \"bunched up\" to \"in formation.\"\n\n- **stack_branches**: The branches in formation are stacked to provide stability, altering their organization from \"bundled\" to \"stacked.\"\n\n- **fortify_structure**: The stacked branches are fortified, changing their composition from \"stand-alone\" to \"fortified.\"\n\n- **tie_with_bark**: Finally, the fortified branches are tied with bark, enhancing their tightness from \"untied\" to \"tied with bark.\"\n\nThese actions collectively represent the process of building a shelter using the provided materials and steps.",
    "Based on the provided task and descriptions, let's generate the PDDL actions for the task \"collect_water\". Given that there is only one step described, we will create one action for this task. \n\nTask: collect_water\n\nSteps:\n1. Search for a source of fresh water.\n\nDescriptions:\n- Search for a source of fresh water.\n\nEntity State:\n-{'water': {'boiling pot': [{'attribute': 'temperature', 'before': 'cold', 'after': 'hot'}, {'attribute': 'fullness', 'before': 'empty', 'after': 'full'}, {'attribute': 'location', 'before': 'in pipes', 'after': 'out of faucet'}], 'concept_knowledge': ['You are likely to find [[a fish]] in [[water]].', '[[river]] is related to [[water]]', '[[rain]] is [[water]]', 'You can use [[water]] to [[drink]]', '[[Water]] is [[liquid]]']}, 'npc': {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}}\n\nPDDL Actions:\n\n```pddl\n;; Action 1: Search for a source of fresh water\n(:action search_for_water_source\n  :parameters (?agent - person ?location - place)\n  :precondition (and\n    (at ?agent ?location)\n    (not (found_water ?agent))\n  )\n  :effect (and\n    (found_water ?agent)\n  )\n)\n```\n\nExplanation:\n- **Action Name:** `search_for_water_source`\n- **Parameters:** `?agent` (the person searching for water), `?location` (the place where the search is conducted)\n- **Preconditions:** The agent must be at the location, and the agent has not yet found water.\n- **Effects:** The agent will have found water.\n\nSince the task and description provided only mention searching for a source of fresh water, this single action captures the necessary steps and conditions for completing the task.",
    "Sure, based on the given task and descriptions, here are the PDDL actions for the task \"start_a_fire\":\n\n### Task: start_a_fire\n\n### Steps:\n\n1. Find small, dry material to use as tinder.\n2. Gather small twigs and branches to use for kindling.\n3. Search for a dry, flat area between 2 trees with splits in their trunks.\n4. Start the fire using the gathered tinder and kindling.\n\n### Descriptions:\n- Find small, dry material to use as tinder. Look for dry grass, leaves, tree bark, pine needles, or any other small flammable materials you can find in the area. Tinder needs to be material that is easy to light and will produce a large flame so you can start your fire.\n- Use dry sticks, branches, or tree bark to serve as your kindling.\n- Avoid using too much energy. It may be difficult for you to find adequate food and water if you're lost in the woods. Try not to sweat or use too much energy by doing things like running around and screaming for help if you're by yourself. Conserve as much energy as you can for doing things like building shelter, fire, and searching for water.\n- Search for a dry, flat area between 2 trees with splits in their trunks. Look around the area to find a relatively flat area with a tree that has a trunk that splits about 3\u20135 feet (0.91\u20131.52 m) off of the ground. If possible, try to find 2 trees that have a split in their trunks about 3\u20135 feet (0.91\u20131.52 m) off of the ground and are about 10 feet (3.0 m) apart from each other.\n- Gather small twigs and branches to use for kindling. Kindling needs to be material that will catch easily when you light your tinder.\n\n### PDDL Actions:\n\n```lisp\n;; Action 1: Find Tinder\n(:action find_tinder\n    :parameters (?t - tinder)\n    :precondition (not (collected ?t))\n    :effect (collected ?t)\n)\n\n;; Action 2: Gather Kindling\n(:action gather_kindling\n    :parameters (?k - kindling)\n    :precondition (not (collected ?k))\n    :effect (collected ?k)\n)\n\n;; Action 3: Search for Area\n(:action search_area\n    :parameters (?a - area)\n    :precondition (not (selected ?a))\n    :effect (selected ?a)\n)\n\n;; Action 4: Start Fire\n(:action start_fire\n    :parameters (?t - tinder ?k - kindling ?a - area)\n    :precondition (and (collected ?t) (collected ?k) (selected ?a))\n    :effect (fire_started ?a)\n)\n```\n\n### Explanation of PDDL Actions:\n\n1. **find_tinder**:\n   - **Parameters**: ?t - tinder\n   - **Preconditions**: The tinder must not already be collected.\n   - **Effects**: The tinder is collected.\n\n2. **gather_kindling**:\n   - **Parameters**: ?k - kindling\n   - **Preconditions**: The kindling must not already be collected.\n   - **Effects**: The kindling is collected.\n\n3. **search_area**:\n   - **Parameters**: ?a - area\n   - **Preconditions**: The area must not already be selected.\n   - **Effects**: The area is selected.\n\n4. **start_fire**:\n   - **Parameters**: ?t - tinder, ?k - kindling, ?a - area\n   - **Preconditions**: The tinder and kindling must be collected, and the area must be selected.\n   - **Effects**: The fire is started in the selected area.\n\nThese actions follow the structure and logic of the example provided and are tailored to the task of starting a fire using the given descriptions and entity states."
]