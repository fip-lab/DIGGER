[
    "Sure, let's define the PDDL actions for the task \"clean_water\" based on the provided steps and descriptions.\n\n### Task: clean_water\n\n### Steps:\n1. Find water source\n2. Collect water\n3. Boil water\n4. Filter water\n\n### Descriptions:\n- Do not drink salt water from the ocean because it will dehydrate you.\n- Hunt for fish, insects, and small animals for food. The protein and nutrients from meat and fish will give you energy. Mollusks, clams, oysters, crabs, muscles, and fish are all things that you may be able to find in the shallow waters surrounding or on an island.\n- Check for water at the base of leaves or cacti, inside of caves, hollowed trees, or undercut banks.\n\n### Entity State:\n- `water`: {'boiling pot': [{'attribute': 'temperature', 'before': 'cold', 'after': 'hot'}, {'attribute': 'fullness', 'before': 'emptier', 'after': 'fuller'}, {'attribute': 'location', 'before': 'in pipes', 'after': 'out of faucet'}], 'concept_knowledge': ['You are likely to find [[a fish]] in [[water]].', '[[river]] is related to [[water]]', '[[rain]] is [[water]]', 'You can use [[water]] to [[drink]]', '[[Water]] is [[liquid]]']}\n- `rock`: {'stone': [{'attribute': 'choice', 'before': 'unchosen | unselected', 'after': 'selected'}, {'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[rock]] is a type of [[music]]', '[[stone]] is related to [[rock]]', 'You are likely to find [[a rock]] in [[a mountain]]', '[[a rock]] can be [[heavy]]']}\n- `river`: {'boiling pot': [{'attribute': 'temperature', 'before': 'cold', 'after': 'hot'}, {'attribute': 'fullness', 'before': 'emptier', 'after': 'fuller'}, {'attribute': 'location', 'before': 'in pipes', 'after': 'out of faucet'}], 'concept_knowledge': ['[[river]] is related to [[water]]', 'You are likely to find [[water]] in [[river]].', '[[a river]] is for [[swimming]]']}\n- `person`: {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': ['[[person]] is related to [[human]]', '[[A person]] can [[cross a street]]', '[[a person]] wants [[a headache]]', '[[A slave]] is [[a person]]', \"[[a person]] doesn't want to [[be diseased]]\", '[[a person]] is part of [[society]]']}\n- `npc`: {'helmet': [{'attribute': 'decoration', 'before': 'bare | plain', 'after': 'camouflaged'}, {'attribute': 'visibility', 'before': 'visible', 'after': 'invisible'}], 'concept_knowledge': []}\n- `wood`: {'bare wood': [{'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'smooth', 'after': 'tacky'}, {'attribute': 'location', 'before': 'absent', 'after': 'present'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'color', 'before': 'brown', 'after': 'white'}, {'attribute': 'weight', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'smooth', 'after': 'sticky'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}], 'concept_knowledge': ['[[wood]] is related to [[tree]]', 'You can use [[wood]] to [[fence in a property]]', '[[Wood]] can [[burn]]', '[[wood]] is [[a material]]', '[[Wood]] can be [[carved]]', 'You are likely to find [[wood]] in [[a tree]]']}\n\n### PDDL Actions:\n\n```lisp\n;; Action 1: Find water source\n(:action find_water_source\n    :parameters (?p - person ?w - water)\n    :precondition (and\n                    (at ?p ?location)\n                    (or\n                      (at ?w river)\n                      (at ?w base_of_leaves)\n                      (at ?w cave)\n                      (at ?w hollowed_tree)\n                      (at ?w undercut_bank)))\n    :effect (found ?p ?w)\n)\n\n;; Action 2: Collect water\n(:action collect_water\n    :parameters (?p - person ?w - water ?c - container)\n    :precondition (and\n                    (found ?p ?w)\n                    (empty ?c))\n    :effect (and\n              (full ?c)\n              (not (empty ?c)))\n)\n\n;; Action 3: Boil water\n(:action boil_water\n    :parameters (?p - person ?w - water ?pot - boiling_pot)\n    :precondition (and\n                    (full ?pot)\n                    (cold ?w))\n    :effect (and\n              (hot ?w)\n              (not (cold ?w)))\n)\n\n;; Action 4: Filter water\n(:action filter_water\n    :parameters (?p - person ?w - water ?filter - filter)\n    :precondition (and\n                    (hot ?w)\n                    (has_filter ?p ?filter))\n    :effect (and\n              (filtered ?w)\n              (clean ?w))\n)\n```\n\nThese actions take into account the necessary steps to clean water, including finding a water source, collecting water, boiling it, and filtering it. The preconditions and effects are defined based on the entity states provided.",
    "Sure, let's generate PDDL actions for the task \"catch_cook_fish\" based on the provided steps and descriptions.\n\nTask: catch_cook_fish\n\nSteps:\n- Step 1: Heat water to above 185\u00b0 F (85\u00b0 C) for three minutes to kill pathogens.\n- Step 2: Hunt for fish, insects, and small animals for food.\n- Step 3: Prepare the fish by cleaning and gutting it.\n- Step 4: Cook the fish over a fire.\n\nDescriptions:\n- Heating the water above 185\u00b0 F (85\u00b0 C) for three minutes will kill all pathogens in your water.\n- Hunt for fish, insects, and small animals for food. The protein and nutrients from meat and fish will give you energy. Mollusks, clams, oysters, crabs, muscles, and fish are all things that you may be able to find in the shallow waters surrounding or on an island.\n\nEntity States:\n- Before: water (not_heated), fish (not_caught), fish (not_cleaned), fish (not_cooked), fire (not_lit)\n- After: water (heated), fish (caught), fish (cleaned), fish (cooked), fire (lit)\n\nPDDL Actions:\n\n```lisp\n;; Action 1: Heat water\n(:action heat_water\n    :parameters (?water - resource ?fire - resource)\n    :precondition (and\n      (not (heated ?water))\n      (lit ?fire)\n    )\n    :effect (and\n      (heated ?water)\n    )\n)\n\n;; Action 2: Hunt for fish\n(:action hunt_fish\n    :parameters (?person - agent ?location - place)\n    :precondition (and\n      (at ?person ?location)\n      (not (caught ?fish))\n    )\n    :effect (and\n      (caught ?fish)\n    )\n)\n\n;; Action 3: Clean fish\n(:action clean_fish\n    :parameters (?fish - food ?water - resource)\n    :precondition (and\n      (caught ?fish)\n      (heated ?water)\n      (not (cleaned ?fish))\n    )\n    :effect (and\n      (cleaned ?fish)\n    )\n)\n\n;; Action 4: Cook fish\n(:action cook_fish\n    :parameters (?fish - food ?fire - resource)\n    :precondition (and\n      (cleaned ?fish)\n      (lit ?fire)\n      (not (cooked ?fish))\n    )\n    :effect (and\n      (cooked ?fish)\n    )\n)\n```\n\nExplanation:\n1. **heat_water**: This action heats the water using fire. Preconditions check that the water is not already heated and that the fire is lit. The effect is that the water becomes heated.\n2. **hunt_fish**: This action involves hunting for fish. Preconditions check that the person is at the location and that the fish is not already caught. The effect is that the fish becomes caught.\n3. **clean_fish**: This action cleans the fish using heated water. Preconditions check that the fish is caught, the water is heated, and the fish is not already cleaned. The effect is that the fish becomes cleaned.\n4. **cook_fish**: This action cooks the cleaned fish over a fire. Preconditions check that the fish is cleaned, the fire is lit, and the fish is not already cooked. The effect is that the fish becomes cooked.",
    "Sure, let's generate the PDDL actions for the task \"start_fire\" based on the provided descriptions and entity states.\n\nTask: start_fire\n\nSteps:\n1. Gather dry wood.\n2. Gather stones.\n3. Arrange wood and stones to make a fire pit.\n4. Use a method to ignite the wood.\n\nDescriptions:\n- Hunt for fish, insects, and small animals for food. The protein and nutrients from meat and fish will give you energy. Mollusks, clams, oysters, crabs, muscles, and fish are all things that you may be able to find in the shallow waters surrounding or on an island.\n\nEntity State:\n- {'wood': {'bare wood': [{'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'smooth', 'after': 'tacky'}, {'attribute': 'location', 'before': 'absent', 'after': 'present'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'color', 'before': 'brown', 'after': 'white'}, {'attribute': 'weight', 'before': 'lighter', 'after': 'heavier'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}, {'attribute': 'texture', 'before': 'smooth', 'after': 'sticky'}, {'attribute': 'moisture', 'before': 'dry', 'after': 'wet'}], 'concept_knowledge': ['[[wood]] is related to [[tree]]', 'You can use [[wood]] to [[fence in a property]]', '[[Wood]] can [[burn]]', '[[wood]] is [[a material]]', '[[Wood]] can be [[carved]]', 'You are likely to find [[wood]] in [[a tree]]']}, 'person': {'person': [{'attribute': 'volume', 'before': 'silent', 'after': 'talking'}, {'attribute': 'stability', 'before': 'unsupported', 'after': 'supported'}], 'concept_knowledge': ['[[person]] is related to [[human]]', '[[A person]] can [[cross a street]]', '[[a person]] wants [[a headache]]', '[[A slave]] is [[a person]]', \"[[a person]] doesn't want to [[be diseased]]\", '[[a person]] is part of [[society]]']}, 'rock': {'stone': [{'attribute': 'choice', 'before': 'unchosen | unselected', 'after': 'selected'}, {'attribute': 'knowledge', 'before': 'unselected', 'after': 'selected'}], 'concept_knowledge': ['[[rock]] is a type of [[music]]', '[[stone]] is related to [[rock]]', 'You are likely to find [[a rock]] in [[a mountain]]', '[[a rock]] can be [[heavy]]']}}\n\nPDDL Actions:\n\n```lisp\n(:action gather-dry-wood\n    :parameters (?p - person ?w - wood)\n    :precondition (and\n                    (not (wood_location ?w present))\n                    (wood_moisture ?w dry)\n                   )\n    :effect (wood_location ?w present)\n)\n\n(:action gather-stones\n    :parameters (?p - person ?s - stone)\n    :precondition (not (stone_location ?s present))\n    :effect (stone_location ?s present)\n)\n\n(:action arrange-wood-stones\n    :parameters (?p - person ?w - wood ?s - stone)\n    :precondition (and\n                    (wood_location ?w present)\n                    (stone_location ?s present)\n                   )\n    :effect (fire_pit_arranged ?p)\n)\n\n(:action ignite-wood\n    :parameters (?p - person ?w - wood)\n    :precondition (and\n                    (wood_location ?w present)\n                    (fire_pit_arranged ?p)\n                    (wood_moisture ?w dry)\n                   )\n    :effect (fire_started ?p)\n)\n```\n\nThese actions correspond to the steps needed to start a fire, ensuring that the preconditions and effects match the described entity states and the logical flow of the task.",
    "To generate PDDL actions for the task \"escape_island,\" we'll focus on the relevant steps and descriptions provided. The descriptions and entity states suggest actions related to rationing supplies and hunting for food. Here's a breakdown of the PDDL actions:\n\n### PDDL Actions\n\n#### Action 1: Ration_Supplies\nThis action involves rationing the available food and water supplies to ensure sustainability.\n\n```pddl\n(:action ration_supplies\n    :parameters (?p - person ?s - supplies)\n    :precondition (and\n                    (has_supplies ?p ?s)\n                    (not (rationed ?s)))\n    :effect (and\n              (rationed ?s)\n              (increased_duration ?s))\n)\n```\n\n#### Action 2: Hunt_For_Food\nThis action is about hunting for food, such as fish or small animals, which are available on or around the island.\n\n```pddl\n(:action hunt_for_food\n    :parameters (?p - person ?h - habitat)\n    :precondition (and\n                    (at ?p ?h)\n                    (habitat_has_food ?h)\n                    (not (has_food ?p)))\n    :effect (and\n              (has_food ?p)\n              (decreased_food_in_habitat ?h))\n)\n```\n\n### Explanation of Actions\n\n- **Ration_Supplies**: This action ensures that the supplies are rationed. Preconditions include having supplies and the supplies not being rationed already. The effect is that the supplies are rationed, and their duration is increased.\n\n- **Hunt_For_Food**: This action allows a person to hunt for food in a habitat that has food. The precondition checks that the person is at a habitat with food, and they do not currently have food. The effect is that the person gains food, and the food availability in the habitat decreases.\n\nThese actions are designed to reflect the essential survival tactics needed to escape from an island, focusing on managing resources and acquiring food."
]