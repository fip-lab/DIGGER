[
    "```lisp\n[\n  (:action make\n    ; Create or construct a resource by utilizing available materials or components\n    :parameters (?agent - agent ?location - location ?resource - object ?component - object)\n    :precondition (and (at ?agent ?location) (has_materials ?agent) (not (created ?resource ?component)))\n    :effect (created ?resource ?component)\n  ),\n  \n  (:action drink\n    ; General action for satisfying thirst and hunger by consuming resources\n    :parameters (?agent - agent ?item - object)\n    :precondition (and \n      (available ?agent) \n      (or (and (thirsty ?agent) (water ?item) (has_no_container ?agent))\n          (and (npc_hungry ?agent) (edible_fruit ?item) (identified_fruit ?item)))\n    )\n    :effect (and \n      (or \n        (and (not (thirsty ?agent))\n      )\n    )\n  ),\n  \n  (:action place\n    ; Place a resource and update its status\n    :parameters (?agent - agent ?item - object ?location - location)\n    :precondition (and (at ?agent ?location) (not (placed ?item)) (setup ?item))\n    :effect (placed ?item)\n  ),\n  \n  (:action place_branch\n    :parameters (?agent - agent ?location - location ?branch_piece - object)\n    :precondition (and (at ?agent ?location) (not (placed ?branch_piece)))\n    :effect (placed ?branch_piece)\n  ),\n  \n  (:action place_snare\n    :parameters (?agent - agent ?snare - object ?location - location)\n    :precondition (and (at ?agent ?location) (snare_setup ?snare) (not (snare_placed ?snare)))\n    :effect (snare_placed ?snare)\n  ),\n  \n  (:action get\n    ; Get a resource and update the entity's state\n    :parameters (?agent - agent ?item - object)\n    :precondition (and\n      (npc_needs ?agent ?item)\n      (available ?item)\n      (not (npc_has ?agent ?item))\n    )\n    :effect (and\n      (npc_has ?agent ?item)\n      (not (npc_needs ?agent ?item))\n    )\n  ),\n  \n  (:action check\n    ; Check a resource and update task status\n    :parameters (?agent - agent ?task - task)\n    :precondition (and (available ?agent) (not (checked ?agent ?task)))\n    :effect (checked ?agent ?task)\n  ),\n  \n  (:action setup\n    ; Setup a resource and mark it as ready\n    :parameters (?agent - agent ?resource - object)\n    :precondition (materials_gathered ?resource)\n    :effect (setup ?agent ?resource)\n  )\n]\n```"
]