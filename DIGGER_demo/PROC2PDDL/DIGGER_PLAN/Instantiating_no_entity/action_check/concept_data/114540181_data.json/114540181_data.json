[
    "[\n  \"(:action get ; Get a resource and update entity's status\\n:parameters (?actor - entity ?resource - object ?location - place)\\n:precondition (and\\n                (at ?actor ?location)\\n                (recognizes ?actor ?resource ?location))\\n:effect (and\\n          (has ?actor ?resource)\\n          (not (needs ?actor ?resource))))\",\n  \"(:action make\\n    :parameters (?npc - entity ?resource - object ?location - place)\\n    :precondition (and \\n        (has ?npc ?resource)\\n        (at ?npc ?location)\\n        (suitable_conditions ?location ?resource))\\n    :effect (and \\n        (created ?location ?resource)\\n        (not (deficient ?npc))))\",\n  \"(:action drink ; Drink a liquid and update the state of the person\\n  :parameters (?npc - entity ?liquid - liquid)\\n  :precondition (and (thirsty ?npc) (has ?npc ?liquid) (safe_to_drink ?liquid))\\n  :effect (and (not (thirsty ?npc))))\",\n  \"(:action collect ; Collect resources and update their status\\n    :parameters (?collector - entity ?source1 - resource ?source2 - resource ?container - container)\\n    :precondition (and (available ?collector) (provides ?source1) (provides ?source2) (empty ?container))\\n    :effect (and (possess ?collector ?container) (filled_with ?container ?source1) (filled_with ?container ?source2) (not (empty ?container))))\",\n  \"(:action boil_resource\\n    :parameters (?npc - entity ?resource - object ?condition - condition)\\n    :precondition (and (has ?npc ?resource) (can_process ?npc) (ready ?condition))\\n    :effect (and (processed ?resource) (not (raw ?resource))))\"\n]"
]