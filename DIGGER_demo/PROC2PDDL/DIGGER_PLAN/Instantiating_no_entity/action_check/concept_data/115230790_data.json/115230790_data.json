[
    "```pddl\n[\n  '(:action move ; Move an entity from one location to another, ensuring safety and updating location status\n    :parameters (?entity - object ?from - location ?to - location ?container - container)\n    :precondition (and\n                   (at_location ?entity ?from)\n                   (safe ?to))\n    :effect (and\n             (at_location ?entity ?to)\n             (in_container ?entity ?container)))',\n             \n  '(:action check ; Check a resource and update task status\n    :parameters (?entity - object ?item - object)\n    :precondition (and\n                    (available ?entity)\n                    (or \n                        (and (at_home ?entity ?item)\n                             (not (informed ?entity)))\n                        (and (stocked ?item)\n                             (informed ?entity))\n                        (and (has_bunker ?entity ?item)\n                             (prepared ?item))\n                        (and (has_weapon ?entity ?item)\n                             (has_ammunition ?entity))\n                        (and (available ?entity)\n                             (not (checked ?entity ?item)))))\n    :effect (and\n             (or (informed ?entity)\n                 (checked ?item))))',\n                 \n  '(:action wait ; Wait for a condition to be met or for a period of time\n    :parameters (?npc - person ?location - location ?condition - condition)\n    :precondition (and (or (early_reports ?npc) (in_bunker ?npc ?location)) \n                       (not (met ?condition)))\n    :effect (and (or (unified_reports ?npc) (isolated ?npc))))',\n    \n  '(:action buy ; Purchase an item and update the possessor\\'s inventory\n    :parameters (?npc - person ?item - object)\n    :precondition (and \n                   (needs ?npc ?item)\n                   (available ?item))\n    :effect (has ?npc ?item))',\n    \n  '(:action outfit ; Outfit an entity with a resource and update its state\n    :parameters (?entity - object ?resource - resource ?npc - person)\n    :precondition (and \n                    (in_location ?npc ?entity)\n                    (has_resource ?npc ?resource)\n                    (not (outfitted ?entity ?resource)))\n    :effect (and\n              (outfitted ?entity ?resource)\n              (prepared ?entity)))'\n]\n```"
]