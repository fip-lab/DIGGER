[
    "```pddl\n[\n(:action make\n    :parameters (?npc - agent ?item - object ?material - material ?location - location)\n    :precondition (and\n                    (has_material ?npc ?material)\n                    (available ?npc)\n                    (at ?npc ?location)\n                    (suitable_location ?location)\n                    (not (constructed ?npc ?item))\n                  )\n    :effect (and\n              (constructed ?npc ?item)\n              (not (has_material ?npc ?material))\n            )\n),\n\n(:action collect\n  :parameters (?actor - agent ?resource - object ?container - object)\n  :precondition (and\n                  (in_location ?actor ?resource_location)\n                  (empty ?container)\n                )\n  :effect (and\n            (collected ?actor ?resource ?container)\n            (not (empty ?container))\n          )\n),\n\n(:action boil_water\n    :parameters (?npc - agent ?stream - stream ?fabric - fabric)\n    :precondition (and\n                    (collected_water ?npc)\n                    (fire_started ?jungle)\n                    (filtered ?npc ?fabric)\n                  )\n    :effect (safe_to_drink ?npc)\n),\n\n(:action boil\n    :parameters (?entity - agent ?resource - resource ?tool - tool ?location - location)\n    :precondition (and\n                    (collected ?entity ?resource)\n                    (fire_started ?location)\n                    (filtered ?entity ?tool)\n                  )\n    :effect (safe_to_use ?entity ?resource)\n),\n\n(:action get\n    :parameters (?actor - agent ?resource - object ?location - place)\n    :precondition (and \n        (at ?actor ?location)\n        (or \n            (and (has_tool ?actor ?resource) (location ?location riverside))\n            (not (achieved ?actor ?resource))\n        )\n    )\n    :effect (and \n        (achieved ?actor ?resource)\n        (or \n            (lost ?actor)\n            (has_fish ?actor)\n            (resource_obtained ?actor)\n        )\n    )\n),\n\n(:action cover_shelter\n       :parameters (?n - agent ?c - camp ?s - shelter)\n       :precondition (and\n                       (at ?n ?c)\n                       (shelter_built ?c)\n                       (not (shelter_covered ?s))\n                     )\n       :effect (shelter_covered ?s)\n),\n\n(:action cover\n    :parameters (?actor - agent ?location - place ?resource - item)\n    :precondition (and\n                    (at ?actor ?location)\n                    (prepared ?location)\n                    (not (covered ?resource))\n                  )\n    :effect (covered ?resource)\n)\n]\n```"
]