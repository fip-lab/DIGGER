{
    "poke": [
        "(:action poke-coconut\n    :parameters (?npc - person ?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and\n                    (drained ?c)\n                    (not (hole_poked ?c))\n                  )\n    :effect (hole_poked ?c)\n)\n\n;; Wrap the coconut in a towel\n",
        "(:action poke_coconut\n    :parameters (?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and (drained ?c) (available ?s) (available ?m))\n    :effect (and (hole_in_eye ?c) (not (intact ?c)))\n)\n\n"
    ],
    "drain": [
        "(:action drain-coconut\n    :parameters (?npc - person ?c - coconut ?r - rack)\n    :precondition (and\n                    (at ?c ?r)\n                    (not (drained ?c))\n                  )\n    :effect (drained ?c)\n)\n\n;; Poke a hole in the coconut\n",
        "(:action drain_coconut\n    :parameters (?c - coconut ?g - glass)\n    :precondition (and (full ?c) (empty ?g) (upside_down ?c))\n    :effect (and (drained ?c) (full ?g) (not (full ?c)))\n)\n\n",
        "(:action remove-screwdriver\n    :parameters (?p - person ?s - screwdriver ?c - coconut)\n    :precondition (and\n                    (screwdriver_inserted ?s ?c)\n                    (coconut_eye_poked ?c)\n                   )\n    :effect (and\n              (not (screwdriver_inserted ?s ?c))\n              (coconut_eye_widened ?c)\n            )\n)\n```\n\n### Explanation:\n1. **position-screwdriver**: This action involves positioning the screwdriver on one of the coconut's eyes. The precondition checks that the screwdriver is not already positioned and that the coconut has eyes. The effect sets the screwdriver as positioned on the coconut.\n\n2. **bore-hole**: This action uses the mallet to bore a hole through the coconut's eye using the positioned screwdriver. The precondition requires the screwdriver to be positioned and the coconut eye not yet poked. The effect indicates the coconut eye is poked and the screwdriver is inserted.\n\n3. **remove-screwdriver**: This action involves wiggling out the screwdriver to widen the hole. The precondition checks that the screwdriver is inserted and the coconut eye is poked. The effect shows the screwdriver is removed, and the hole is widened.\n\nThese actions capture the sequence and logic described in the task and description."
    ],
    "break": [
        "(:action break_coconut\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (wrapped ?c ?t) (cooled ?c))\n    :effect (and (broken ?c) (not (whole ?c)))\n)\n```\n\n### Explanation:\n\n1. **drain_coconut**: This action involves turning the coconut upside down over a glass to drain its liquid. Preconditions include the coconut being full and the glass being empty. The effect is the coconut becomes drained, and the glass becomes full.\n\n2. **poke_coconut**: This action involves using a screwdriver and mallet to poke a hole in the coconut's \"eye.\" Preconditions are that the coconut is drained and the tools are available. The effect is creating a hole in the coconut.\n\n3. **wrap_coconut_in_towel**: This action involves wrapping the coconut in a towel to cool it down. Preconditions include having a hole in the coconut and an available towel. The effect is that the coconut is wrapped.\n\n4. **break_coconut**: This action involves breaking the coconut while it is wrapped in a towel. Preconditions include the coconut being wrapped and cooled. The effect is that the coconut becomes broken.",
        "(:action break_coconut_wrapped\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (hole_in_eye ?c) (wrapped ?c ?t))\n    :effect (and (broken ?c) (not (wrapped ?c ?t)))\n)\n```\n\nNote: The steps and actions have been slightly modified to ensure they are relevant and logically consistent with the task of removing fiber from coconut meat. The provided steps and descriptions have been used to generate the most appropriate PDDL actions.",
        "(:action break_wrapped_coconut\n    :parameters (?npc - agent ?coconut - object ?towel - object)\n    :precondition (and (at ?npc kitchen) (wrapped ?coconut ?towel))\n    :effect (and (meat_exposed ?coconut) (not (wrapped ?coconut ?towel)))\n)\n```\n\n### Descriptions:\n\n1. **break_coconut**:\n    - This action represents the NPC breaking the coconut, which is a necessary step to access the meat inside.\n    - Preconditions: The NPC and the coconut must be in the kitchen, and the coconut must be intact.\n    - Effects: The coconut is broken.\n\n2. **drain_coconut**:\n    - This action involves draining the coconut by turning it upside down over a glass and allowing the liquid to drain out.\n    - Preconditions: The NPC, coconut, rack, and glass must be in the kitchen, and the coconut must be broken.\n    - Effects: The coconut is drained, and the liquid is now in the glass.\n\n3. **poke_coconut**:\n    - This action involves poking a hole in the coconut using a screwdriver to facilitate draining.\n    - Preconditions: The NPC, coconut, and screwdriver must be in the kitchen, and the coconut must be intact.\n    - Effects: A hole is made in the coconut.\n\n4. **wrap_coconut**:\n    - This action involves wrapping the broken coconut in a towel to cool it down.\n    - Preconditions: The NPC, coconut, and towel must be in the kitchen, and the coconut must be broken.\n    - Effects: The coconut is wrapped in a towel.\n\n5. **break_wrapped_coconut**:\n    - This action represents the NPC breaking the wrapped coconut to expose the meat inside.\n    - Preconditions: The NPC and the wrapped coconut must be in the kitchen.\n    - Effects: The coconut meat is exposed, and the coconut is no longer wrapped.\n\nThese actions accurately capture the steps involved in freeing the meat from a coconut based on the provided descriptions.",
        "(:action break-coconut\n    :parameters (?npc - person ?c - coconut ?m - mallet ?t - towel)\n    :precondition (and\n                    (wrapped ?c)\n                    (not (broken ?c))\n                  )\n    :effect (broken ?c)\n)\n```\n\nThese actions should capture the steps and logic necessary to complete the task of hitting a coconut with a mallet."
    ],
    "wrap": [
        "(:action wrap_coconut\n    :parameters (?npc - agent ?coconut - object ?towel - object)\n    :precondition (and (at ?npc kitchen) (at ?coconut kitchen) (at ?towel kitchen) (broken ?coconut))\n    :effect (and (wrapped ?coconut ?towel))\n)\n\n",
        "(:action wrap_coconut_in_towel\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (hole_in_eye ?c) (available ?t))\n    :effect (and (wrapped ?c ?t) (not (unwrapped ?c)))\n)\n\n",
        "(:action wrap-coconut-towel\n    :parameters (?npc - person ?c - coconut ?t - towel)\n    :precondition (and\n                    (hole_poked ?c)\n                    (not (wrapped ?c))\n                  )\n    :effect (wrapped ?c)\n)\n\n;; Break the wrapped coconut with a mallet\n",
        "(:action position-screwdriver\n    :parameters (?p - person ?s - screwdriver ?c - coconut)\n    :precondition (and\n                    (not (screwdriver_positioned ?s ?c))\n                    (coconut_has_eyes ?c)\n                   )\n    :effect (screwdriver_positioned ?s ?c)\n)\n\n;; \u4f7f\u7528\u9524\u5b50\u5728\u6930\u5b50\u4e0a\u6253\u5b54\u7684\u52a8\u4f5c\n"
    ],
    "bore": [
        "(:action bore-hole\n    :parameters (?p - person ?s - screwdriver ?m - mallet ?c - coconut)\n    :precondition (and\n                    (screwdriver_positioned ?s ?c)\n                    (not (coconut_eye_poked ?c))\n                   )\n    :effect (and\n              (coconut_eye_poked ?c)\n              (screwdriver_inserted ?s ?c)\n            )\n)\n\n;; \u79fb\u9664\u87ba\u4e1d\u5200\u4ee5\u6269\u5927\u5b54\u7684\u52a8\u4f5c\n"
    ]
}