{
    "defend": [
        "(:action defend_against_shark\n    :parameters (?n - npc ?s - shark ?d - deep_sea ?sh - ship)\n    :precondition (and\n                    (at ?n ?d)\n                    (at ?s ?d)\n                    (aware-of ?n ?s))\n    :effect (and\n              (shark-retreated ?s)\n              (not (threatened ?n ?s))\n             )\n)\n\n;; Action 2: Attack shark\n",
        "(:action defend\n    :parameters (?n - npc ?s - shark ?sh - ship)\n    :precondition (and\n                    (eyes_on_shark ?n)\n                    (shark_location ?s targeted)\n                    (ship_status ?sh safe)\n                   )\n    :effect (and\n             (shark_location ?s deterred)\n             (eyes_on_shark ?n)\n             (ship_status ?sh defended)\n            )\n  )\n```\n\n### Explanation:\n\n1. **Action: `take_shot`**\n   - **Parameters:** `?n` represents the NPC, and `?s` represents the shark.\n   - **Preconditions:** The NPC does not have their eyes on the shark, and the shark's location is visible.\n   - **Effects:** The NPC now has their eyes on the shark, and the shark's location is targeted.\n\n2. **Action: `defend`**\n   - **Parameters:** `?n` represents the NPC, `?s` represents the shark, and `?sh` represents the ship.\n   - **Preconditions:** The NPC has their eyes on the shark, the shark's location is targeted, and the ship's status is safe.\n   - **Effects:** The shark's location is deterred, the NPC continues to have their eyes on the shark, and the ship's status is defended.\n\nThese actions are designed to capture the logic of keeping eyes on the shark and defending the ship by using the information about the shark's behavior and location."
    ],
    "attack": [
        "(:action attack_shark\n    :parameters (?n - npc ?s - shark ?d - deep_sea ?sh - ship)\n    :precondition (and\n                    (at ?n ?d)\n                    (at ?s ?d)\n                    (threatened ?n ?s))\n    :effect (and\n              (shark-retreated ?s)\n              (not (threatened ?n ?s))\n             )\n)\n\n;; Action 3: Board ship\n",
        "(:action attack_ship\n    :parameters (?npc - agent ?deep_sea - location ?ship - object)\n    :precondition (and\n                    (in_location ?npc ?deep_sea)\n                    (not (ship_defended ?ship))\n                   )\n    :effect (and\n             (ship_attacked ?ship)\n             (not (ship_defended ?ship))\n            )\n)\n```\n\n#### Action: defend\n```lisp\n"
    ],
    "board": [
        "(:action board_ship\n    :parameters (?n - npc ?sh - ship ?d - deep_sea)\n    :precondition (and\n                    (at ?n ?d)\n                    (shark-retreated ?s))\n    :effect (and\n              (at ?n ?sh)\n              (not (at ?n ?d))\n             )\n)\n```\n\n### Explanation:\n\n- **Defend against shark**: This action involves an NPC defending themselves against a shark in the deep sea. The NPC must be aware of the shark's presence to defend effectively. The effect is that the shark retreats, and the NPC is no longer threatened.\n\n- **Attack shark**: This action represents the NPC actively attacking the shark to make it retreat. Preconditions include the NPC being threatened by the shark. The effect is similar to the defense action, ensuring the shark retreats.\n\n- **Board ship**: This action is the ultimate goal, where the NPC boards the ship after ensuring that the shark has retreated. The precondition is that the NPC is in the deep sea, and the effect is that they are now on the ship.\n\nThese actions incorporate the task of boarding a ship while considering the threat posed by sharks, as described in the task and descriptions provided."
    ],
    "make": [
        "(:action make_horizontal_bar\n    :parameters (?npc - agent ?spear_gun - weapon)\n    :precondition (and\n                    (has_weapon ?npc ?spear_gun)\n                    (weapon_ready ?spear_gun)\n                   )\n    :effect (and\n             (weapon_position ?spear_gun horizontal)\n             (ready_to_attack ?npc)\n            )\n)\n```\n\n#### Action: attack_ship\n```lisp\n"
    ],
    "block": [
        "(:action block_path\n    :parameters (?npc - agent ?shark - object ?spear - weapon)\n    :precondition (and\n                    (has_weapon ?npc ?spear)\n                    (not (path_blocked ?shark))\n                   )\n    :effect (and\n             (path_blocked ?shark)\n             (threatened ?shark)\n            )\n)\n```\n\n#### Action: take_shot\n```lisp\n"
    ],
    "take": [
        "(:action take_shot\n    :parameters (?n - npc ?s - shark)\n    :precondition (and\n                    (not (eyes_on_shark ?n))\n                    (shark_location ?s visible)\n                   )\n    :effect (and\n             (eyes_on_shark ?n)\n             (shark_location ?s targeted)\n            )\n  )\n\n;; Defend the ship from the shark\n"
    ]
}