[
    "(:action cluster\n  :parameters (?entity1 - entity ?entity2 - entity)\n  :precondition (and \n                  (not (clustered ?entity1))\n                  (not (clustered ?entity2))\n                )\n  :effect (and \n            (clustered ?entity1)\n            (clustered ?entity2)\n          )",
    "(:action get ; Collect a resource and update its status\n  :parameters (?agent - entity ?resource - object)\n  :precondition (and\n                  (not (collected ?resource))\n                  (source_of ?resource)\n                )\n  :effect (collected ?resource)\n)",
    "(:action start\n    :parameters (?actor - entity ?resource - object ?location - place)\n    :precondition (and \n                    (available ?actor) \n                    (at ?actor ?location)\n                    (clustered ?resource)\n                    (not (started ?resource ?location))\n                  )\n    :effect (started ?resource ?location)\n)",
    "(:action break ; Break an object and update its status\n  :parameters (?entity - entity ?object - object)\n  :precondition (and (not (broken ?object)))\n  :effect (broken ?object)\n)",
    "(:action build\n    :parameters (?builder - agent ?location - place ?structure - structure_type ?resource - resource_type)\n    :precondition (and\n                    (not (built ?structure))\n                    (available ?builder)\n                    (available ?resource)\n                    (at ?builder ?location)\n                    (prepared ?resource ?structure)\n                  )\n    :effect (and\n             (built ?structure)\n             (not (available ?resource))",
    "(:action burn ; Burn a combustible resource\n :parameters (?agent - agent ?combustible - object ?context - context)\n :precondition (and\n                 (not (burned ?combustible))\n                 (fire_started ?context)\n                 (can_interact ?agent ?combustible)\n               )\n :effect (burned ?combustible)\n)"
]