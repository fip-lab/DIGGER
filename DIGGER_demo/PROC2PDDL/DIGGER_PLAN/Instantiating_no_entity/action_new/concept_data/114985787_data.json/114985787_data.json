[
    "(:action make\n  ; Create or construct a resource by utilizing available materials or components\n  :parameters (?npc - character ?location - location ?resource - object ?component - object)\n  :precondition (and (at ?npc ?location) (has_materials ?npc) (not (created ?resource ?component)))\n  :effect (created ?resource ?component)\n)",
    "(:action drink\n  ; General action for satisfying thirst and hunger by consuming resources\n  :parameters (?npc - character ?item - object)\n  \n  :precondition (and \n    (available ?npc) \n    (or (and (thirsty ?npc) (water ?item) (has_no_container ?npc))\n        (and (npc_hungry ?npc) (edible_fruit ?item) (identified_fruit ?item)))\n  )\n  \n  :effect (and \n    (or \n      (and (not (thirsty ?npc))",
    "(:action place ; Place a resource and update its status\n    :parameters (?agent - agent ?item - object ?location - location)\n    :precondition (and (at ?agent ?location) (not (placed ?item)) (setup ?item))\n    :effect (placed ?item)\n)",
    "(:action place_branch\n       :parameters (?npc - character ?wp - west_plain ?bp - branch_piece)\n       :precondition (and (at ?npc ?wp) (not (placed ?bp)))\n       :effect (placed ?bp)\n   )",
    "(:action place_snare\n       :parameters (?s - snare ?l - location)\n       :precondition (and\n                       (snare_setup ?s)\n                       (not (snare_placed ?s))\n                     )\n       :effect (snare_placed ?s)\n   )",
    "(:action place ; Place a resource and update its status\n    :parameters (?agent - agent ?item - object ?location - location)\n    :precondition (and (at ?agent ?location) (not (placed ?item)) (setup ?item))\n    :effect (placed ?item)\n)",
    "(:action get ; Get a resource and update the entity's state\n  :parameters (?npc - agent ?item - object)\n  :precondition (and\n    (npc_needs ?npc ?item)\n    (available ?item)\n    (not (npc_has ?npc ?item))\n  )\n  :effect (and\n    (npc_has ?npc ?item)\n    (not (npc_needs ?npc ?item))",
    "(:action check ; Check a resource and update task status\n    :parameters (?entity - object ?task - task)\n    :precondition (and (available ?entity) (not (checked ?entity ?task)))\n    :effect (checked ?entity ?task)\n)",
    "(:action setup ; Setup a resource and mark it as ready\n  :parameters (?entity - object ?resource - resource)\n  :precondition (materials_gathered ?resource)\n  :effect (setup ?entity ?resource)\n)"
]