[
    "(:action pick\n    :parameters (?item - object ?agent - agent ?location - location)\n    :precondition (and\n        (at ?agent ?location)\n        (located ?item ?location)\n        (not (held ?item))\n    )\n    :effect (and\n        (held ?item)\n        (not (located ?item ?location))",
    "(:action transport ; Transport an item and update location status\n    :parameters (?item - object ?agent - agent ?location_from - place ?location_to - place)\n    :precondition (and\n      (held ?item ?agent)\n      (at ?agent ?location_from)\n    )\n    :effect (and\n      (at ?item ?location_to)\n      (at ?agent ?location_to)\n      (not (at ?agent ?location_from))",
    "(:action place\n    :parameters (?agent - agent ?item - object ?location - location)\n    :precondition (and\n      (held ?item ?agent)\n      (at ?agent ?location)\n    )\n    :effect (and\n      (placed ?item ?location)\n      (not (held ?item ?agent))",
    "(:action choose ; Choose an item and update its chosen status\n    :parameters (?agent - entity ?item - object)\n    :precondition (and (available ?agent) (suitable ?item))\n    :effect (chosen ?agent ?item)\n)",
    "(:action lay\n    :parameters (?agent - agent ?item - item ?location - location)\n    :precondition (and (has ?agent ?item) (perpendicular ?item ?direction) (length_15_45_cm ?item))\n    :effect (and (laid ?item ?location) (parallel_strips ?item ?location))",
    "(:action locate \n    ; Locate an item and update its status in the location or possession context\n    :parameters (?agent - entity ?item - object ?location - location)\n    :precondition (and\n        (at ?item ?location)\n        (not (held ?item))\n        (available ?agent)\n    )\n    :effect (and\n        (located ?item ?location)\n        (held ?agent ?item) ; Assumes that once located, the agent might hold it\n    )\n)"
]