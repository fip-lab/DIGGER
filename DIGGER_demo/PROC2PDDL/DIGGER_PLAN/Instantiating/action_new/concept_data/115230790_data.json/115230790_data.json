[
    "(:action move ; Move an entity from one location to another and update its status\n  :parameters (?entity - agent ?from - location ?to - location)\n  :precondition (and (not (moved ?entity ?from ?to))\n                     (at ?entity ?from)) ; Ensure the entity is currently at the 'from' location\n  :effect (and (moved ?entity ?from ?to)\n               (not (at ?entity ?from))",
    "(:action check ; Check a resource and update task status\n  :parameters (?npc - npc ?item - object)\n  :precondition (and (available ?npc) (not (checked ?npc ?item)))\n  :effect (checked ?npc ?item)\n)",
    "(:action wait ; Wait for a condition to be met and update the status\n :parameters (?entity - entity ?context - context)\n :precondition (and (in_context ?entity ?context) (not (condition_met ?entity ?context)))\n :effect (condition_met ?entity ?context))",
    "(:action buy ; Purchase an item and update ownership status\n:parameters (?npc - agent ?item - object ?location - place)\n:precondition (and (in_location ?npc ?location) (not (owns ?npc ?item)))\n:effect (owns ?npc ?item))",
    "(:action outfit_bunker_with_energy_source\n  :parameters (?bunker - bunker ?npc - npc ?heat - heat)\n  :precondition (and (in_bunker ?npc ?bunker) (not (energy_source ?bunker ?heat)))\n  :effect (energy_source ?bunker ?heat)\n)",
    "(:action stay_in_isolation\n  :parameters (?npc - npc ?isolation_area - area)\n  :precondition (and (in_area ?npc ?isolation_area) (not (left_area ?npc ?isolation_area)))\n  :effect (in_isolation ?npc ?isolation_area)\n)",
    "(:action outfit\n  :parameters (?npc - entity ?place - location ?resource - resource)\n  :precondition (and (in_location ?npc ?place) (not (equipped ?place ?resource)))\n  :effect (equipped ?place ?resource)\n)"
]