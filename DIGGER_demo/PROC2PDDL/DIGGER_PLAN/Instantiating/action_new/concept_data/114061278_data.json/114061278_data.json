[
    "(:action poke ; Poke an entity and update its status\n  :parameters (?agent - agent ?entity - object ?tool1 - tool ?tool2 - tool)\n  :precondition (and \n                 (available ?agent)\n                 (not (poked ?entity))\n                 (or (and (coconut_drain ?entity)\n                          (tool1_location ?tool1 in_hand)\n                          (tool2_location ?tool2 in_hand))\n                     (and (at ?entity kitchen)\n                          (at ?agent kitchen)\n                          (at ?tool1 kitchen))))\n  :effect (and \n           (poked ?entity)\n           (or (hole_in_coconut ?entity)\n               (not (at ?tool1 kitchen))",
    "(:action drain\n  :parameters (?actor - agent ?source - object ?target - container)\n  :precondition (and\n                  (at ?actor kitchen)\n                  (or\n                    (and (coconut_location ?source upside_down) (glass_empty ?target))\n                    (and (broken ?source) (at ?target kitchen))\n                    (eye_poked ?source)\n                  )\n                  (not (checked ?actor ?source))\n                 )\n  :effect (and\n            (or\n              (glass_full ?target)\n              (drained ?source)\n              (screwdriver_removed ?source)\n            )",
    "(:action wrap\n    :parameters (?agent - person ?tool - object ?item - object ?state - state)\n    :precondition (and \n                    (in_hand ?tool)\n                    (valid_state ?item ?state)\n                    (not (wrapped ?item ?tool))\n                   )\n    :effect (and \n              (wrapped ?item ?tool)\n              (updated_state ?item new_state)\n              (not (valid_state ?item ?state))",
    "(:action break\n    :parameters (?agent - person ?item - object ?tool - object ?surface - object ?state - state)\n    :precondition (and \n                    (available ?agent)\n                    (at ?agent ?state)\n                    (at ?item ?state)\n                    (or\n                        (and (wrapped ?item ?tool) (cooled ?item))\n                        (and (intact ?item) (hard_surface ?surface))\n                        (and (poked ?item) (at ?tool ?state))\n                    ))\n    :effect (and \n              (broken ?item) \n              (not (intact ?item))",
    "(:action acquire-screwdriver\n  :parameters (?p - person ?s - screwdriver)\n  :precondition (and\n                  (not (in_hand ?s))\n                  (in_toolbox ?s)\n                 )\n  :effect (and\n            (in_hand ?s)\n            (not (in_toolbox ?s))",
    "(:action position-screwdriver-on-coconut\n  :parameters (?p - person ?s - screwdriver ?c - coconut)\n  :precondition (and\n                  (in_hand ?s)\n                  (not (positioned ?s ?c))\n                 )\n  :effect (and\n            (positioned ?s ?c)\n            (not (in_hand ?s))",
    "(:action acquire\n  :parameters (?p - person ?item - object ?location - location)\n  :precondition (and\n                  (not (in_hand ?item))\n                  (at ?item ?location)\n                 )\n  :effect (and\n            (in_hand ?item)\n            (not (at ?item ?location))"
]