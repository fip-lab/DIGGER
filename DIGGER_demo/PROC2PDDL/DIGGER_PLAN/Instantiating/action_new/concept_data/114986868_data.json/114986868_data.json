[
    "(:action make ;  Create or assemble an object to achieve a desired state\n    :parameters (?npc - person ?item - object ?material - material ?location - place)\n    :precondition (and \n                    (available ?npc)\n                    (in ?npc ?location)\n                    (not (created ?item))\n                    (has_material ?material)\n                  )\n    :effect (and \n              (created ?item)\n              (used_material ?material)\n              (not (has_material ?material))",
    "(:action collect ; Collect a resource and update its state\n    :parameters (?agent - entity ?resource - object ?location - place)\n    :precondition (and \n                    (present ?agent ?location)\n                    (not (collected ?agent ?resource))\n                    (suitable_for_collection ?resource ?location))\n    :effect (and\n              (collected ?agent ?resource)\n              (updated_state ?resource ?location))",
    "(:action get ; Perform an action to change the entity's state\n  :parameters (?npc - person ?item - object ?location - location ?tool - object)\n  \n  ;; Preconditions for various tasks\n  :precondition (or\n    ;; Preconditions for getting lost\n    (and (on_path ?npc ?location))\n    ;; Preconditions for catching fish\n    (and (location ?npc ?location) (knowledge ?npc fish_location) (usable_for_fishing ?tool))\n  )\n  \n  ;; Effects for various tasks\n  :effect (or\n    ;; Effects for getting lost\n    (not (on_path ?npc ?location))",
    "(:action cover\n  :parameters (?npc - npc ?task - task ?item - object)\n  :precondition (and\n                  (available ?npc)\n                  (not (task_completed ?npc ?task))\n                  (preconditions_met ?npc ?item ?task)\n                )\n  :effect (and\n            (task_completed ?npc ?task)\n            (state_changed ?npc ?item ?task)\n          )"
]