[
    "```pddl\n[\n  '(:action make ; Create or modify a state by interacting with an object\\n    :parameters (?npc - agent ?location - place ?target - object)\\n    :precondition (and (at ?npc ?location) (available ?target))\\n    :effect (and (modified ?target) (changed_state ?location)))',\n\n  '(:action consume ; Consume a resource and update entity status\\n    :parameters (?npc - agent ?item - consumable)\\n    :precondition (and\\n                    (available ?npc)\\n                    (not (consumed ?npc ?item))\\n                    (is_consumable ?item)\\n                    (safe_to_consume ?item)\\n                  )\\n    :effect (and\\n              (consumed ?npc ?item)\\n              (not (available ?item))))',\n\n  '(:action place ; Place an item and update the context state\\n  :parameters (?npc - agent ?location - place ?item - object)\\n  :precondition (and (at ?npc ?location) (present ?item) (not (placed ?item ?location)))\\n  :effect (and (placed ?item ?location) (updated ?location)))',\n\n  '(:action get ; Get a resource and update its status\\n  :parameters (?npc - agent ?item - object)\\n  :precondition (and\\n    (or\\n      (and (location ?npc ?source) (source_of ?source ?item))\\n      (visible ?npc)\\n    )\\n    (not (collected ?item))\\n  )\\n  :effect (and\\n    (has ?npc ?item)\\n    (not (location ?item ?source))))',\n\n  '(:action discard ; Discard an item and update its status\\n  :parameters (?actor - agent ?item - object)\\n  :precondition (and (wrapped ?item))\\n  :effect (discarded ?item))',\n\n  '(:action camouflage\\n    :parameters (?npc - agent ?item - object)\\n    :precondition (and\\n                    (visible ?npc)\\n                    (or (and\\n                          (not (camouflaged ?npc))\\n                          (not (identified ?item))\\n                        )\\n                        (and\\n                          (found ?npc ?item)\\n                          (not (identified ?item))\\n                        )\\n                    )\\n                  )\\n    :effect (and\\n              (or (and\\n                    (camouflaged ?npc)\\n                    (not (visible ?npc)))))',\n\n  '(:action search ; Search for a resource and update discovery status\\n    :parameters (?searcher - agent ?target - agent)\\n    :precondition (and\\n                    (trained ?searcher)\\n                    (not (found ?searcher ?target))\\n                  )\\n    :effect (found ?searcher ?target))'\n]\n```"
]