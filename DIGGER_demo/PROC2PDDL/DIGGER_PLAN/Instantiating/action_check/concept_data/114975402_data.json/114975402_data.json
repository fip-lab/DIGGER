[
    "```lisp\n(:action get_costume\n    :parameters (?npc - npc ?c - costume)\n    :precondition (not (has-costume ?npc ?c))\n    :effect (has-costume ?npc ?c)\n)\n\n(:action get\n    :parameters (?entity - entity ?item - item)\n    :precondition (and (available ?entity) (not (has ?entity ?item)))\n    :effect (has ?entity ?item)\n)\n\n(:action clean_clothing\n    :parameters (?c - clothing)\n    :precondition (clothing-dirty ?c)\n    :effect (not (clothing-dirty ?c))\n)\n\n(:action decorate_helmet\n    :parameters (?h - helmet)\n    :precondition (helmet-plain ?h)\n    :effect (not (helmet-plain ?h))\n)\n\n(:action decorate\n    :parameters (?npc - entity ?item - object)\n    :precondition (and \n        (decoratable ?item) \n        (possesses ?npc ?item) \n        (not (decorated ?item))\n    )\n    :effect (and \n        (not (plain ?item))\n        (decorated ?item)\n    )\n)\n\n(:action make\n    :parameters (?npc - entity ?item - object ?state1 - state ?state2 - state)\n    :precondition (and \n        (has ?npc ?item) \n        (?state1 ?item) \n        (not (?state2 ?item))\n    )\n    :effect (and \n        (not (?state1 ?item)) \n        (?state2 ?item)\n    )\n)\n\n(:action make_helmet_invisible\n    :parameters (?npc - npc ?h - helmet)\n    :precondition (and \n        (has ?npc ?h) \n        (helmet-visible ?h) \n        (not (helmet-invisible ?h))\n    )\n    :effect (and \n        (not (helmet-visible ?h)) \n        (helmet-invisible ?h)\n    )\n)\n\n(:action make_clothing_clean\n    :parameters (?npc - npc ?c - clothing)\n    :precondition (and \n        (has ?npc ?c) \n        (dirty ?c) \n        (not (clean ?c))\n    )\n    :effect (and \n        (not (dirty ?c)) \n        (clean ?c)\n    )\n)\n\n(:action make_helmet_camouflaged\n    :parameters (?npc - npc ?h - helmet)\n    :precondition (and \n        (has ?npc ?h) \n        (plain ?h) \n        (not (camouflaged ?h))\n    )\n    :effect (and \n        (not (plain ?h)) \n        (camouflaged ?h)\n    )\n)\n```"
]