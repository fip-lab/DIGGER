{
    "break": [
        "(:action break_password\n    :parameters (?npc - person ?malware - tool)\n    :precondition (and\n                    (helmet_decoration ?npc bare)\n                    (helmet_visibility ?npc visible)\n                    (pliers_location ?malware in_drawer)\n                    (pliers_openness ?malware open))\n    :effect (and\n             (helmet_decoration ?npc camouflaged)\n             (helmet_visibility ?npc invisible)\n             (pliers_location ?malware on_table)\n             (pliers_openness ?malware closed))\n)\n```\n\n#### Action 2: creating_back_door\n```lisp\n"
    ],
    "learn": [
        "(:action learn_search_techniques\n    :parameters (?npc - person)\n    :precondition (and\n                    (not (knows ?npc s_search)))\n    :effect (knows ?npc s_search)\n)\n```\n\n#### Action 2: Learn Unix System\n```lisp\n",
        "(:action learn_unix_system\n    :parameters (?npc - person)\n    :precondition (and\n                    (not (knows ?npc s_unix)))\n    :effect (knows ?npc s_unix)\n)\n```\n\n#### Action 3: Learn Malware Creation and Backdoor Techniques\n```lisp\n",
        "(:action learn_malware_creation\n    :parameters (?npc - person)\n    :precondition (and\n                    (not (knows ?npc malware_creating_back_door)))\n    :effect (knows ?npc malware_creating_back_door)\n)\n```\n\n#### Action 4: Learn Programming (Python)\n```lisp\n",
        "(:action learn_programming_python\n    :parameters (?npc - person)\n    :precondition (and\n                    (not (knows ?npc s_py)))\n    :effect (knows ?npc s_py)\n)\n```\n\n#### Action 5: Learn Ethics of Hacking\n```lisp\n",
        "(:action learn_hacking_ethics\n    :parameters (?npc - person)\n    :precondition (and\n                    (not (knows ?npc s_ethics)))\n    :effect (knows ?npc s_ethics)\n)\n```\n\n### Explanation:\n- Each action corresponds to a learning step for the NPC in the task \"hacking1_1\".\n- Preconditions ensure the NPC does not already possess the knowledge.\n- Effects update the NPC's knowledge state to reflect the learning of a new skill or concept.\n- The actions are designed to be modular and specific to the skills described in the task."
    ],
    "creating": [
        "(:action creating_back_door\n    :parameters (?door - object)\n    :precondition (and\n                    (fridge_door_electric_conductivity ?door off)\n                    (fridge_door_openness ?door open))\n    :effect (and\n             (fridge_door_electric_conductivity ?door on)\n             (fridge_door_openness ?door closed))\n)\n```\n\n#### Action 3: getting_superuser_privileges\n```lisp\n"
    ],
    "getting": [
        "(:action getting_superuser_privileges\n    :parameters (?co_conspirators - group)\n    :precondition (and\n                    (group_knowledge ?co_conspirators unenlisted)\n                    (group_forming ?co_conspirators unformed))\n    :effect (and\n             (group_knowledge ?co_conspirators enlisted)\n             (group_forming ?co_conspirators now_formed))\n)\n```\n\n#### Action 4: knowing_target\n```lisp\n"
    ],
    "knowing": [
        "(:action knowing_target\n    :parameters (?weapon - object)\n    :precondition (and\n                    (weapon_location ?weapon in_vehicle)\n                    (weapon_attention ?weapon carelessly_disguised))\n    :effect (and\n             (weapon_location ?weapon on_ground)\n             (weapon_attention ?weapon carefully_disguised))\n)\n```\n\nThese actions reflect the logical steps involved in the task \"hacking2_1\" and are based on the provided entity states. Each action includes parameters, preconditions, and effects that align with the attributes and changes specified in the entity states."
    ]
}