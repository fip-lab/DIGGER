{
    "defend": [
        "(:action defend_npc_from_shark\n    :parameters (?npc - npc ?ds - deep_sea ?s - ship)\n    :precondition (and\n                    (at ?npc ?s)\n                    (shark-present ?ds)\n                    (aware-of-shark ?npc)\n                  )\n    :effect (and\n              (defending ?npc ?s)\n              (not (shark-attacking ?npc))\n             )\n)\n```\n\n#### Action 2: attack_shark\n```lisp\n",
        "(:action defend\n    :parameters (?npc - agent ?deep_sea - location ?ship - boat)\n    :precondition (and\n                    (agent_location ?npc ?deep_sea)\n                    (boat_location ?ship in_open_water)\n                   )\n    :effect (and\n             (boat_location ?ship at_dock)\n             (boat_stability ?ship steadied)\n            )\n)\n\n;; Action 4: Block the path of a shark with a spear\n"
    ],
    "attack": [
        "(:action attack_shark\n    :parameters (?npc - npc ?ds - deep_sea ?s - ship)\n    :precondition (and\n                    (defending ?npc ?s)\n                    (shark-present ?ds)\n                  )\n    :effect (and\n              (shark-retreating ?ds)\n              (not (shark-attacking ?npc))\n             )\n)\n```\n\nThese actions consider the necessary conditions and effects based on the provided descriptions and entity states.",
        "(:action attack_ship\n    :parameters (?npc - agent ?deep_sea - location ?ship - boat)\n    :precondition (and\n                    (boat_location ?ship in_open_water)\n                    (agent_location ?npc ?deep_sea)\n                   )\n    :effect (and\n             (boat_location ?ship at_dock)\n             (boat_motion ?ship moving)\n            )\n)\n\n;; Action 3: Defend against an attack in the deep sea\n"
    ],
    "make": [
        "(:action make_horizontal_bar\n    :parameters (?npc - agent ?spear_gun - weapon)\n    :precondition (and\n                    (weapon_location ?spear_gun in_vehicle)\n                    (not (weapon_location ?spear_gun on_ground))\n                   )\n    :effect (and\n             (weapon_location ?spear_gun on_ground)\n             (not (weapon_location ?spear_gun in_vehicle))\n            )\n)\n\n;; Action 2: Attack ship in the deep sea\n"
    ],
    "block": [
        "(:action block_path\n    :parameters (?npc - agent ?shark - animal ?spear - weapon)\n    :precondition (and\n                    (weapon_location ?spear on_ground)\n                    (animal_location ?shark in_ocean)\n                    (not (animal_location ?shark near_npc))\n                   )\n    :effect (and\n             (animal_location ?shark near_npc)\n             (animal_deterred ?shark)\n            )\n)\n\n;; Action 5: Take a shot at the shark\n"
    ],
    "take": [
        "(:action take_shot\n    :parameters (?npc - agent ?shark - animal)\n    :precondition (and\n                    (animal_location ?shark near_npc)\n                    (agent_has_weapon ?npc spear_gun)\n                   )\n    :effect (and\n             (animal_location ?shark deterred)\n             (animal_condition ?shark injured)\n            )\n)\n```\n\n### Explanation:\n- **make_horizontal_bar**: This action involves the NPC using a spear gun to create a horizontal bar. The precondition checks if the spear gun is in the vehicle and not on the ground. The effect changes the spear gun's location to on the ground.\n- **attack_ship**: This action involves the NPC attacking a ship in the deep sea. The precondition checks if the ship is in open water and the NPC is in the deep sea. The effect moves the ship to the dock and sets it in motion.\n- **defend**: This action involves the NPC defending against an attack in the deep sea. The precondition checks if the NPC is in the deep sea and the ship is in open water. The effect moves the ship to the dock and steadies it.\n- **block_path**: This action involves the NPC blocking the path of a shark with a spear. The precondition checks if the spear is on the ground, the shark is in the ocean, and not near the NPC. The effect moves the shark near the NPC and deters it.\n- **take_shot**: This action involves the NPC taking a shot at the shark. The precondition checks if the shark is near the NPC and the NPC has a spear gun. The effect deters the shark and injures it.\n\nThese actions are designed to capture the logical steps and conditions required to achieve the task \"ultimate_win.\""
    ]
}