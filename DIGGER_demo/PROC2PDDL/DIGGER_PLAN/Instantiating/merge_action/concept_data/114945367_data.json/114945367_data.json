{
    "collect": [
        "(:action collect_sticks\n    :parameters (?s - stick)\n    :precondition (not (collected ?s))\n    :effect (collected ?s)\n)\n\n;; Action 2: Bundle sticks\n",
        "(:action bundle_sticks\n    :parameters (?s - stick)\n    :precondition (collected ?s)\n    :effect (bundled ?s)\n)\n\n;; Action 3: Place sticks in formation\n"
    ],
    "place": [
        "(:action place_sticks_in_formation\n    :parameters (?s - stick)\n    :precondition (bundled ?s)\n    :effect (in_formation ?s)\n)\n\n;; Action 4: Build shelter\n"
    ],
    "build": [
        "(:action build_shelter\n    :parameters (?npc - npc ?camp - camp ?s - stick)\n    :precondition (and\n                    (in_formation ?s)\n                    (not (shelter_built ?camp))\n                  )\n    :effect (shelter_built ?camp)\n)\n```\n\nExplanation:\n- **collect_sticks**: This action collects sticks that are scattered all over the place.\n- **bundle_sticks**: This action bundles the collected sticks together.\n- **place_sticks_in_formation**: This action places the bundled sticks in a formation suitable for building a shelter.\n- **build_shelter**: This action uses the sticks in formation to build the shelter at the camp with the help of the NPC.\n\nThese actions capture the intent and logic of the task and steps provided, ensuring that the shelter is built as described.",
        "(:action build_teepee_structure\n    :parameters (?npc - npc ?camp - camp ?t - teepee_structure)\n    :precondition (and (has_tinder ?npc) (has_kindling ?npc) (not (built_teepee ?t)))\n    :effect (built_teepee ?t)\n)\n```\n- **Parameters**: `?npc` - the non-player character, `?camp` - the camp location, `?t` - the teepee structure.\n- **Preconditions**: The NPC has both tinder and kindling, and the teepee structure is not yet built.\n- **Effects**: The teepee structure is built.\n\n#### Action 5: start_fire\n```lisp\n",
        "(:action cook\n    :parameters (?npc - npc ?camp - camp ?t - teepee_structure ?c - campfire)\n    :precondition (fire_started ?c)\n    :effect (cooked_meal ?npc)\n)\n```\n- **Parameters**: `?npc` - the non-player character, `?camp` - the camp location, `?t` - the teepee structure, `?c` - the campfire.\n- **Preconditions**: The campfire is started.\n- **Effects**: A meal is cooked for the NPC.\n\n### Notes\n- The action \"build_shelter\" was modified to \"build_teepee_structure\" to align with the context of starting a fire and using the teepee structure as part of the fire-making process.\n- The actions are designed to follow the logical sequence of events necessary to start a fire in a survival scenario, including searching for an area, gathering materials, building a structure, and starting the fire."
    ],
    "gather": [
        "(:action get_water\n    :parameters (?npc - agent ?water - resource)\n    :precondition (and\n      (available ?water)\n      (not (collected ?water))\n    )\n    :effect (and\n      (collected ?water)\n      (has ?npc ?water)\n    )\n)\n```\n\n### Explanation:\n\n- **Action Name**: `get_water`\n  - This name reflects the task of collecting water.\n\n- **Parameters**: \n  - `?npc` is the non-player character (agent) involved in the action.\n  - `?water` is the resource being collected.\n\n- **Preconditions**:\n  - `(available ?water)`: The water must be available for collection.\n  - `(not (collected ?water))`: The water should not have been collected already.\n\n- **Effects**:\n  - `(collected ?water)`: The water is now collected.\n  - `(has ?npc ?water)`: The NPC now possesses the water.\n\nThis action assumes that the water is available and ready to be collected, as implied by the task description and entity states. Adjustments can be made based on additional context or requirements.",
        "(:action gather_tinder\n    :parameters (?npc - npc ?a - area)\n    :precondition (and (selected_area ?a) (not (has_tinder ?npc)))\n    :effect (has_tinder ?npc)\n)\n```\n- **Parameters**: `?npc` - the non-player character gathering tinder, `?a` - the area with potential tinder.\n- **Preconditions**: The area is selected, and the NPC does not have tinder.\n- **Effects**: The NPC has tinder.\n\n#### Action 3: gather_kindling\n```lisp\n",
        "(:action gather_kindling\n    :parameters (?npc - npc ?a - area)\n    :precondition (and (selected_area ?a) (not (has_kindling ?npc)))\n    :effect (has_kindling ?npc)\n)\n```\n- **Parameters**: `?npc` - the non-player character gathering kindling, `?a` - the area with potential kindling.\n- **Preconditions**: The area is selected, and the NPC does not have kindling.\n- **Effects**: The NPC has kindling.\n\n#### Action 4: build_teepee_structure\n```lisp\n"
    ],
    "search": [
        "(:action search_area\n    :parameters (?a - area)\n    :precondition (not (selected_area ?a))\n    :effect (selected_area ?a)\n)\n```\n- **Parameters**: `?a` - the area to be searched.\n- **Preconditions**: The area is not already selected.\n- **Effects**: The area becomes selected.\n\n#### Action 2: gather_tinder\n```lisp\n"
    ],
    "start": [
        "(:action start_fire\n    :parameters (?npc - npc ?camp - camp ?t - teepee_structure ?c - campfire)\n    :precondition (and (built_teepee ?t) (has_tinder ?npc) (has_kindling ?npc) (not (fire_started ?c)))\n    :effect (fire_started ?c)\n)\n```\n- **Parameters**: `?npc` - the non-player character, `?camp` - the camp location, `?t` - the teepee structure, `?c` - the campfire.\n- **Preconditions**: The teepee structure is built, the NPC has tinder and kindling, and the campfire is not started.\n- **Effects**: The campfire is started.\n\n#### Action 6: cook\n```lisp\n"
    ]
}