[
    "Here are the PDDL actions for the task \"fill_the_glass\":\n\n### PDDL Actions:\n\n```pddl\n(:action drain-coconut\n    :parameters (?coconut - coconut ?glass - container)\n    :precondition (and (at ?coconut kitchen) (at ?glass kitchen))\n    :effect (and\n      (in coconut-water ?glass)\n      (not (in coconut-water ?coconut))\n      (drained ?coconut)\n    )\n  )\n\n(:action poke-coconut\n    :parameters (?coconut - coconut ?screwdriver - tool ?mallet - tool)\n    :precondition (and (at ?coconut kitchen) (at ?screwdriver kitchen) (at ?mallet kitchen) (not (poked ?coconut)))\n    :effect (and\n      (poked ?coconut)\n      (not (not (poked ?coconut)))\n    )\n  )\n```\n\n### Descriptions and Entity States:\n\n- **drain-coconut**: This action drains the coconut water into a glass.\n  - **Preconditions**: The coconut and the glass must be in the kitchen.\n  - **Effects**: The coconut water is transferred to the glass, and the coconut is marked as drained.\n\n- **poke-coconut**: This action creates a hole in the coconut using a screwdriver and a mallet.\n  - **Preconditions**: The coconut, screwdriver, and mallet must be in the kitchen, and the coconut must not already be poked.\n  - **Effects**: The coconut is marked as poked.\n\nThese actions accurately represent the steps and descriptions provided for filling a glass with coconut water.",
    "Here are the PDDL actions based on the provided task and steps:\n\n```pddl\n(:action drain_coconut\n    :parameters (?c - coconut ?g - glass)\n    :precondition (and (filled_with_liquid ?c) (empty ?g))\n    :effect (and (not (filled_with_liquid ?c)) (filled_with_liquid ?g))\n)\n\n(:action poke_coconut\n    :parameters (?c - coconut ?s - screwdriver)\n    :precondition (and (intact ?c) (has_eyes ?c) (sharp ?s))\n    :effect (and (hole_in_eye ?c) (not (intact ?c)))\n)\n\n(:action peel_coconut\n    :parameters (?c - coconut ?p - peeler)\n    :precondition (and (hole_in_eye ?c) (sharp ?p))\n    :effect (and (peeled ?c) (not (hole_in_eye ?c)))\n)\n\n(:action break_coconut_with_towel\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (peeled ?c) (wrapped_in_towel ?c ?t))\n    :effect (and (broken ?c) (not (wrapped_in_towel ?c ?t)))\n)\n\n(:action break_coconut_on_surface\n    :parameters (?c - coconut ?s - surface)\n    :precondition (and (peeled ?c) (solid ?s))\n    :effect (and (broken ?c))\n)\n```\n\n### Explanation:\n\n1. **drain_coconut**: This action involves draining the coconut's liquid into a glass. The precondition checks if the coconut is filled with liquid and the glass is empty. The effect is that the coconut is no longer filled with liquid, and the glass is now filled.\n\n2. **poke_coconut**: This action involves poking a hole in the coconut's eye using a screwdriver. The precondition checks if the coconut is intact and has eyes, and the screwdriver is sharp. The effect is that the coconut now has a hole in its eye.\n\n3. **peel_coconut**: This action involves peeling the coconut using a peeler. The precondition checks if the coconut has a hole in its eye and the peeler is sharp. The effect is that the coconut is peeled.\n\n4. **break_coconut_with_towel**: This action involves breaking the coconut while it is wrapped in a towel. The precondition checks if the coconut is peeled and wrapped in a towel. The effect is that the coconut is broken and no longer wrapped in the towel.\n\n5. **break_coconut_on_surface**: This action involves breaking the coconut by striking it against a solid surface. The precondition checks if the coconut is peeled and the surface is solid. The effect is that the coconut is broken.",
    "Certainly! Based on the task \"free_the_meat_from_coconut\" and the given steps and descriptions, here are the PDDL actions:\n\n### Task: free_the_meat_from_coconut\n\n#### Step 1: Break Coconut\nDescription: Alternatively, strike the coconut against a concrete surface. If you don\u2019t have a hammer or mallet, you can use a solid surface like a porch or possibly a concrete countertop. Try to strike the coconut\u2019s equator against the corner of this surface, using it as a makeshift wedge. Repeatedly strike the coconut all around its equator until the coconut breaks apart.\n\n(:action break_coconut\n    :parameters (?npc - agent ?coconut - object ?surface - surface)\n    :precondition (and (at ?coconut kitchen) (at ?surface kitchen) (has-tool ?npc hammer))\n    :effect (and (broken ?coconut) (not (at ?coconut kitchen)))\n)\n\n#### Step 2: Drain Coconut\nDescription: Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n\n(:action drain_coconut\n    :parameters (?npc - agent ?coconut - object ?rack - container)\n    :precondition (and (broken ?coconut) (at ?rack kitchen))\n    :effect (and (drained ?coconut) (at ?coconut ?rack))\n)\n\n#### Step 3: Poke Coconut\nDescription: Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n\n(:action poke_coconut\n    :parameters (?npc - agent ?coconut - object ?screwdriver - tool)\n    :precondition (and (at ?coconut kitchen) (has-tool ?npc ?screwdriver))\n    :effect (and (hole ?coconut) (not (at ?coconut kitchen)))\n)\n\n#### Step 4: Break Coconut Wrapped in Towel\nDescription: Remove the coconut and wrap it in a towel to cool. Use oven mitts to retrieve the coconut from the oven or microwave, and allow it to cool for about 5 minutes while wrapped in a towel. Doing this ensures you don\u2019t have hot coconut bits flying everywhere when you go to smash it in the next step.\n\n(:action break_coconut_wrapped\n    :parameters (?npc - agent ?coconut - object ?towel - object)\n    :precondition (and (hole ?coconut) (at ?towel kitchen))\n    :effect (and (wrapped ?coconut ?towel) (not (at ?coconut kitchen)))\n)\n\n### Additional Actions\n\n#### Action: Free Meat from Coconut\nDescription: After breaking and draining the coconut, free the meat from the shell.\n\n(:action free_meat\n    :parameters (?npc - agent ?coconut - object ?meat - object)\n    :precondition (and (wrapped ?coconut ?towel) (drained ?coconut))\n    :effect (and (freed ?meat ?coconut) (not (wrapped ?coconut ?towel)))\n)\n\nThese actions should cover the steps provided for the task \"free_the_meat_from_coconut.\" Each action is designed to capture the intent and logic of the corresponding step, while ensuring the conditions and effects are appropriately defined.",
    "Sure, I'll generate the PDDL actions for the given task \"wrap_the_coconut_in_towel\" based on the provided steps and descriptions.\n\nTask: wrap_the_coconut_in_towel\n\nSteps:\n- drain npc rack\n- poke coconut screwdriver\n- break coconut_wrapped towel\n\nDescriptions:\n- Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n- Remove the coconut and wrap it in a towel to cool. Use oven mitts to retrieve the coconut from the oven or microwave, and allow it to cool for about 5 minutes while wrapped in a towel. Doing this ensures you don\u2019t have hot coconut bits flying everywhere when you go to smash it in the next step.\n\nPDDL Actions:\n\n```pddl\n(:action drain_coconut\n    :parameters (?c - coconut ?g - glass ?r - rack)\n    :precondition (and (full_of_liquid ?c) (on_rack ?c ?r) (empty ?g))\n    :effect (and (drained ?c) (not (full_of_liquid ?c)) (full ?g))\n)\n\n(:action poke_coconut\n    :parameters (?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and (drained ?c) (has_tool ?s) (has_tool ?m))\n    :effect (and (hole_in ?c) (not (intact ?c)))\n)\n\n(:action wrap_coconut_in_towel\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (hole_in ?c) (cooling ?c) (clean ?t))\n    :effect (and (wrapped ?c ?t) (not (cooling ?c)))\n)\n\n(:action break_coconut\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (wrapped ?c ?t) (not (intact ?c)))\n    :effect (and (broken ?c) (not (wrapped ?c ?t)))\n)\n```\n\nExplanation:\n- **drain_coconut**: This action drains the coconut by turning it upside down over a glass. The preconditions ensure the coconut is full of liquid, it is on the rack, and the glass is empty. The effect is that the coconut is drained, and the glass is now full.\n- **poke_coconut**: This action pokes a hole in the coconut using a screwdriver and a mallet. The preconditions ensure the coconut is drained and the tools are available. The effect is that the coconut now has a hole in it.\n- **wrap_coconut_in_towel**: This action wraps the coconut in a towel to cool it down. The preconditions ensure the coconut has a hole and is cooling, and the towel is clean. The effect is that the coconut is wrapped in the towel and is no longer cooling.\n- **break_coconut**: This action breaks the coconut while it is wrapped in a towel. The preconditions ensure the coconut is wrapped and not intact. The effect is that the coconut is broken and no longer wrapped in the towel.\n\nThese actions capture the logic and intent of each step in the given task.",
    "Based on the provided task and steps, here are the PDDL actions:\n\nTask: poke_eyes\n\nDescriptions:\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n\nSteps:\n- poke coconut screwdriver\n\nEntity States:\n- Assume that the initial state includes the presence of a coconut, a screwdriver, and a mallet.\n\nPDDL Actions:\n```lisp\n;; Action to position the screwdriver on the eye of the coconut\n(:action position-screwdriver\n    :parameters (?p - person ?c - coconut ?s - screwdriver)\n    :precondition (and\n                    (coconut ?c)\n                    (screwdriver ?s)\n                    (not (screwdriver_positioned ?s ?c))\n                   )\n    :effect (screwdriver_positioned ?s ?c)\n)\n\n;; Action to use the mallet to bore a hole in the coconut\n(:action bore-hole\n    :parameters (?p - person ?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and\n                    (screwdriver_positioned ?s ?c)\n                    (mallet ?m)\n                    (not (hole_bored ?c))\n                   )\n    :effect (hole_bored ?c)\n)\n\n;; Action to remove the screwdriver from the coconut\n(:action remove-screwdriver\n    :parameters (?p - person ?c - coconut ?s - screwdriver)\n    :precondition (and\n                    (hole_bored ?c)\n                    (screwdriver_positioned ?s ?c)\n                   )\n    :effect (and\n              (not (screwdriver_positioned ?s ?c))\n              (hole_widened ?c)\n            )\n)\n```\n\nExplanation:\n1. **position-screwdriver**: This action positions the screwdriver on one of the \"eyes\" of the coconut.\n2. **bore-hole**: This action uses the mallet to bore a hole in the coconut through the positioned screwdriver.\n3. **remove-screwdriver**: This action removes the screwdriver from the coconut, widening the hole in the process.\n\nThese actions follow the structure and format of PDDL and capture the intent and logic of the steps described in the task.",
    "Here are the PDDL actions based on the given task and steps:\n\n### Task: hit_coconut_with_mallet\n\n#### Steps and Corresponding PDDL Actions:\n\n**Step 1: drain npc rack**\n\n```lisp\n(:action drain-coconut\n    :parameters (?c - coconut ?g - glass)\n    :precondition (and\n                    (coconut_location ?c upside_down)\n                    (glass_empty ?g)\n                    (not (coconut_drained ?c))\n                   )\n    :effect (and\n              (coconut_drained ?c)\n              (glass_filled ?g)\n            )\n)\n```\n\n**Step 2: poke coconut screwdriver**\n\n```lisp\n(:action poke-coconut\n    :parameters (?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and\n                    (coconut_drained ?c)\n                    (screwdriver_location ?s in_hand)\n                    (mallet_location ?m in_hand)\n                    (not (coconut_poked ?c))\n                   )\n    :effect (and\n              (coconut_poked ?c)\n              (hole_in_coconut ?c)\n            )\n)\n```\n\n**Step 3: break coconut_wrapped towel**\n\n```lisp\n(:action break-coconut\n    :parameters (?c - coconut ?t - towel ?m - mallet)\n    :precondition (and\n                    (coconut_poked ?c)\n                    (coconut_wrapped_in_towel ?c)\n                    (mallet_location ?m in_hand)\n                    (not (coconut_broken ?c))\n                   )\n    :effect (and\n              (coconut_broken ?c)\n              (coconut_open ?c)\n            )\n)\n```\n\n### Descriptions:\n\n- The actions reflect the necessary steps to prepare and break open a coconut using the appropriate tools and conditions as described. Each action ensures that preconditions are met before proceeding to the next step, effectively simulating the task of hitting a coconut with a mallet."
]