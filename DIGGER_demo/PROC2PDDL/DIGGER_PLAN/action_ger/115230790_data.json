[
    "Here are the PDDL actions based on the given task and steps:\n\n### Task: listen_to_astronomers_predictions_and_move\n\n#### PDDL Actions:\n\n```lisp\n;; Action 1: Move Away from Coastal Areas\n(:action move_away\n    :parameters (?npc - person ?from - location ?to - location)\n    :precondition (and\n                    (at ?npc ?from)\n                    (coastal ?from)\n                    (safe ?to))\n    :effect (and\n              (at ?npc ?to)\n              (not (at ?npc ?from))\n              (safe_from_tsunamis ?npc))\n)\n\n;; Action 2: Listen to Astronomers\n(:action listen_to_astronomers\n    :parameters (?npc - person ?location - place)\n    :precondition (and\n                    (at ?npc ?location)\n                    (has_communication_device ?npc))\n    :effect (and\n              (aware_of_predictions ?npc)\n              (prepared_for_impact ?npc))\n)\n```\n\n### Explanation:\n\n1. **Move Away from Coastal Areas**:\n   - **Action Name**: `move_away`\n   - **Parameters**: `?npc` (the person), `?from` (the current location), `?to` (the new location)\n   - **Preconditions**: The person is at a coastal location and the destination is safe.\n   - **Effects**: The person moves to a new location and is now safe from tsunamis.\n\n2. **Listen to Astronomers**:\n   - **Action Name**: `listen_to_astronomers`\n   - **Parameters**: `?npc` (the person), `?location` (the location where the person listens)\n   - **Preconditions**: The person is at a location with a communication device.\n   - **Effects**: The person becomes aware of astronomers' predictions and is prepared for any potential impact.",
    "Based on the provided task and steps, here are the PDDL actions that capture the intent and logic of each step:\n\n```lisp\n(define (domain final)\n\n  ;; Action 1: Check supplies\n  (:action check_supplies\n    :parameters (?food - food ?npc - person)\n    :precondition (and\n                    (has_food ?npc))\n    :effect (checked_supplies ?npc ?food)\n  )\n\n  ;; Action 2: Wait for unified reports\n  (:action wait_for_reports\n    :parameters (?npc - person)\n    :precondition (and\n                    (early_reports ?npc))\n    :effect (and\n              (unified_reports ?npc)\n              (not (early_reports ?npc)))\n  )\n\n  ;; Action 3: Outfit bunker with energy source\n  (:action outfit_bunker_with_energy_source\n    :parameters (?bunker - bunker ?npc - person ?energy_source - energy)\n    :precondition (and\n                    (in_bunker ?npc ?bunker)\n                    (has_energy_source ?npc ?energy_source))\n    :effect (and\n              (bunker_outfitted_with_energy ?bunker ?energy_source)\n              (not (has_energy_source ?npc ?energy_source)))\n  )\n\n  ;; Action 4: Stay in isolation\n  (:action stay_in_isolation\n    :parameters (?bunker - bunker ?npc - person)\n    :precondition (in_bunker ?npc ?bunker)\n    :effect (in_isolation ?npc ?bunker)\n  )\n\n  ;; Action 5: Buy weapons\n  (:action buy_weapons\n    :parameters (?npc - person ?weapon - weapon)\n    :precondition (and\n                    (need_weapons ?npc)\n                    (at_market ?npc))\n    :effect (has_weapon ?npc ?weapon)\n  )\n\n  ;; Action 6: Buy supplies\n  (:action buy_supplies\n    :parameters (?food - food ?npc - person ?market - market)\n    :precondition (and\n                    (need_supplies ?npc)\n                    (at_market ?npc ?market))\n    :effect (has_food ?npc ?food)\n  )\n\n  ;; Action 7: Listen to astronomers\n  (:action listen_to_astronomers\n    :parameters (?npc - person ?home - location)\n    :precondition (at_home ?npc ?home)\n    :effect (aware_of_impact ?npc)\n  )\n\n  ;; Action 8: Check bunker\n  (:action check_bunker\n    :parameters (?bunker - bunker ?npc - person)\n    :precondition (and\n                    (has_bunker ?npc ?bunker)\n                    (not (checked_bunker ?npc ?bunker)))\n    :effect (checked_bunker ?npc ?bunker)\n  )\n\n  ;; Action 9: Move away from coastal areas\n  (:action move_away\n    :parameters (?npc - person ?from - location ?to - location ?bunker - bunker)\n    :precondition (and\n                    (at ?npc ?from)\n                    (not (safe ?from)))\n    :effect (and\n              (at ?npc ?to)\n              (safe ?to)\n              (in_bunker ?npc ?bunker))\n  )\n\n  ;; Action 10: Check weapons\n  (:action check_weapons\n    :parameters (?pistol - weapon ?ammunition - ammunition ?npc - person)\n    :precondition (and\n                    (has_weapon ?npc ?pistol)\n                    (has_ammunition ?npc ?ammunition))\n    :effect (weapons_ready ?npc ?pistol ?ammunition)\n  )\n)\n```\n\nThis PDDL defines actions that align with the steps and descriptions provided. Each action has parameters, preconditions, and effects that reflect the logic needed to perform the tasks effectively."
]