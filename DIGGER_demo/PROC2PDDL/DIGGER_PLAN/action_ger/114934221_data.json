[
    "To generate PDDL actions for the task \"board_ship\" based on the provided steps and descriptions, we need to ensure that each action is relevant and captures the intent of defending against and attacking a shark while boarding a ship in a deep-sea environment. Below are the PDDL actions tailored to this task:\n\n### PDDL Actions for \"board_ship\"\n\n```pddl\n;; Action 1: Defend against shark\n(:action defend_against_shark\n    :parameters (?npc - entity ?shark - shark ?location - location)\n    :precondition (and\n                    (at ?npc ?location)\n                    (shark-present ?shark ?location)\n                    (aware-of-shark ?npc ?shark))\n    :effect (and\n              (defended ?npc ?shark)\n              (not (threatened ?npc ?shark))\n             )\n)\n\n;; Action 2: Attack shark\n(:action attack_shark\n    :parameters (?npc - entity ?shark - shark ?location - location)\n    :precondition (and\n                    (at ?npc ?location)\n                    (defended ?npc ?shark)\n                    (shark-present ?shark ?location))\n    :effect (and\n              (shark-retreated ?shark)\n              (not (shark-present ?shark ?location))\n             )\n)\n\n;; Action 3: Board ship\n(:action board_ship\n    :parameters (?npc - entity ?ship - ship ?location - location)\n    :precondition (and\n                    (at ?npc ?location)\n                    (shark-retreated ?shark))\n    :effect (and\n              (on-board ?npc ?ship)\n              (not (at ?npc ?location))\n             )\n)\n```\n\n### Explanation:\n\n1. **Defend Against Shark**: This action allows an NPC to defend themselves against a shark. The preconditions ensure that the NPC is aware of the shark's presence and is at the same location. The effect is that the NPC is no longer threatened by the shark.\n\n2. **Attack Shark**: This action involves the NPC attacking the shark to make it retreat. The preconditions require that the NPC has already defended themselves and the shark is still present. The effect is that the shark retreats and is no longer present at the location.\n\n3. **Board Ship**: This action allows the NPC to board the ship after the shark has retreated. The precondition ensures that the NPC is at the location and the shark has already retreated. The effect is that the NPC is now on board the ship.\n\nThese actions are structured to reflect the steps necessary to safely board a ship in a deep-sea environment where sharks are present, using the provided descriptions as guidance.",
    "Based on the given task and steps, here are the PDDL actions generated for the \"ultimate_win\" task:\n\n```lisp\n;; Create a horizontal bar using a spear gun\n(:action make_horizontal_bar\n    :parameters (?npc - agent ?sg - spear_gun)\n    :precondition (and\n                    (has_weapon ?npc ?sg)\n                    (weapon_condition ?sg ready)\n                   )\n    :effect (and\n             (weapon_condition ?sg used)\n             (horizontal_bar_created ?npc)\n            )\n  )\n\n;; Attack the ship using deep-sea tactics\n(:action attack_ship\n    :parameters (?npc - agent ?ds - deep_sea ?ship - ship)\n    :precondition (and\n                    (in_location ?npc ?ds)\n                    (target_identified ?npc ?ship)\n                   )\n    :effect (and\n             (ship_damaged ?ship)\n             (npc_status ?npc engaged)\n            )\n  )\n\n;; Defend against an attack on the ship\n(:action defend\n    :parameters (?npc - agent ?ds - deep_sea ?ship - ship)\n    :precondition (and\n                    (in_location ?npc ?ds)\n                    (ship_under_attack ?ship)\n                   )\n    :effect (and\n             (defense_mounted ?npc ?ship)\n             (npc_status ?npc defensive)\n            )\n  )\n\n;; Block the path of a shark using spears\n(:action block_path\n    :parameters (?npc - agent ?shark - shark ?spear1 - spear ?spear2 - spear)\n    :precondition (and\n                    (has_weapon ?npc ?spear1)\n                    (has_weapon ?npc ?spear2)\n                    (shark_approaching ?shark)\n                   )\n    :effect (and\n             (path_blocked ?shark)\n             (npc_status ?npc engaged)\n            )\n  )\n\n;; Take a shot at the shark\n(:action take_shot\n    :parameters (?npc - agent ?shark - shark)\n    :precondition (and\n                    (has_weapon ?npc spear_gun)\n                    (shark_in_range ?shark)\n                   )\n    :effect (and\n             (shark_hit ?shark)\n             (npc_status ?npc offensive)\n            )\n  )\n```\n\nThese actions are designed to reflect the intent and logic of the task and steps provided, using the descriptions and entity states as a guide.",
    "To generate PDDL actions for the given task \"defend_position,\" we need to carefully consider the steps, descriptions, and entity states provided. Here's how you can translate the task into PDDL actions:\n\n### Task: defend_position\n\n#### Steps:\n1. take_shot npc shark\n2. defend npc deep_sea ship\n\n#### Descriptions:\n- Do not take your eyes off the shark.\n- Sharks have several different attack methods. Sometimes they swim right up and charge, sometimes they circle for a while before lunging, and sometimes they sneak up from behind for a surprise attack. To be able to defend against the shark, you must know where it is, so make every effort to watch the animal, even as you are working out your escape.\n\n### PDDL Actions:\n\n```lisp\n;; Action to take a shot at a shark\n(:action take_shot\n    :parameters (?n - npc ?s - shark)\n    :precondition (and\n                    (shark_visible ?s)\n                    (not (distracted ?n))\n                   )\n    :effect (and\n             (shark_hit ?s)\n             (distracted ?n)\n            )\n  )\n\n;; Action to defend against a shark attack\n(:action defend\n    :parameters (?n - npc ?s - shark ?d - deep_sea ?sh - ship)\n    :precondition (and\n                    (shark_visible ?s)\n                    (not (ship_damaged ?sh))\n                    (npc_at ?n ?d)\n                   )\n    :effect (and\n             (shark_deterred ?s)\n             (not (shark_visible ?s))\n             (ship_protected ?sh)\n            )\n  )\n```\n\n### Explanation:\n\n- **take_shot**: This action involves taking a shot at the shark. The precondition checks if the shark is visible and the NPC is not distracted. The effect is that the shark gets hit, and the NPC becomes distracted (since taking a shot may momentarily distract the NPC).\n\n- **defend**: This action is about defending the ship against the shark. The precondition ensures the shark is visible, the ship is not yet damaged, and the NPC is in the deep sea area. The effect is that the shark is deterred, it is no longer visible, and the ship is protected.\n\nThese actions capture the essence of the task and the descriptions provided, ensuring that the NPC can effectively defend the position against the shark."
]