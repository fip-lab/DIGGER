[
    "```lisp\n(:action move_to_storage_room\n    :parameters (?a - agent ?r - room ?current_location - room)\n    :precondition (and\n      (at ?a ?current_location)\n      (is_storage_room ?r)\n    )\n    :effect (and\n      (not (at ?a ?current_location))\n      (at ?a ?r)\n    )\n)\n\n(:action locate_required_material\n    :parameters (?a - agent ?m - material ?r - room ?current_location - room)\n    :precondition (and\n      (at ?a ?current_location)\n      (material_location ?m ?r)\n    )\n    :effect (and\n      (not (at ?a ?current_location))\n      (at ?a ?r)\n    )\n)\n\n(:action move\n    :parameters (?a - agent ?r - room ?m - object ?current_location - room)\n    :precondition (and\n      (at ?a ?current_location)\n      (or (is_storage_room ?r) (material_location ?m ?r))\n    )\n    :effect (and\n      (not (at ?a ?current_location))\n      (at ?a ?r)\n    )\n)\n\n(:action pick\n    :parameters (?agent - agent ?item - object ?location - location)\n    :precondition (and\n        (at ?agent ?location)\n        (located ?item ?location)\n        (not (carrying ?agent ?item))\n    )\n    :effect (and\n        (carrying ?agent ?item)\n        (not (located ?item ?location))\n    )\n)\n\n(:action bring\n    :parameters (?agent - agent ?item - object ?from - location ?to - location)\n    :precondition (and\n        (at ?agent ?from)\n        (carrying ?agent ?item)\n    )\n    :effect (and\n        (not (at ?agent ?from))\n        (at ?agent ?to)\n        (located ?item ?to)\n    )\n)\n\n(:action select\n  :parameters (?agent - agent ?resource - object)\n  :precondition (and (not (selected ?resource)))\n  :effect (selected ?resource)\n)\n\n(:action wet\n  :parameters (?entity - object)\n  :precondition (and (dry ?entity) (on-ground ?entity))\n  :effect (and (wet ?entity) (not (dry ?entity)) (in-container ?entity))\n)\n\n(:action camouflage\n    :parameters (?entity - object ?agent - agent)\n    :precondition (and (plain ?entity) (visible ?agent))\n    :effect (and (camouflaged ?entity) (not (plain ?entity)) (invisible ?agent))\n)\n\n(:action locate\n    :parameters (?a - agent ?i - item ?r - room)\n    :precondition (and\n      (at ?a ?r)\n      (is_storage_room ?r)\n      (in ?i ?r)\n    )\n    :effect (and\n      (located ?i ?r)\n    )\n)\n\n(:action pick_up\n    :parameters (?a - agent ?i - item ?r - room)\n    :precondition (and\n      (at ?a ?r)\n      (located ?i ?r)\n    )\n    :effect (and\n      (has ?a ?i)\n      (not (located ?i ?r))\n    )\n)\n```"
]