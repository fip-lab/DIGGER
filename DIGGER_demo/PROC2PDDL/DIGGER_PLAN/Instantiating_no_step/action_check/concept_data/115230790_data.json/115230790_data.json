[
    "```lisp\n[\n  (:action listen\n    ; Listen to a resource and update awareness status\n    :parameters (?agent - agent ?source - entity)\n    :precondition (and\n                    (available ?agent)\n                    (available ?source))\n    :effect (and\n              (aware_of_info ?agent ?source)\n              (not (available ?agent))))\n\n  (:action move_away_from_coastal_areas\n    :parameters (?coastal_area - coastal_area)\n    :precondition (near ?coastal_area)\n    :effect (far ?coastal_area))\n\n  (:action move_into_bunker\n    :parameters (?bunker - bunker ?energy_source - energy_source)\n    :precondition (and\n                    (not (present ?energy_source)))\n    :effect (and\n              (present ?energy_source)))\n\n  (:action move\n    ; Move an entity from one state to another\n    :parameters (?entity - entity ?location - location ?resource - resource)\n    :precondition (and \n                    (or \n                      (near ?location)\n                      (not (present ?resource))))\n    :effect (and \n              (or \n                (far ?location)\n                (present ?resource))))\n\n  (:action stock\n    ; Stock a location with resources\n    :parameters (?resource1 - resource ?resource2 - resource ?location - place)\n    :precondition (and \n                    (empty ?location)\n                    (not (stocked ?resource1))\n                    (not (stocked ?resource2)))\n    :effect (and \n              (stocked ?resource1)\n              (stocked ?resource2)\n              (not (empty ?location))))\n\n  (:action buy\n    ; Purchase resources and update inventory status\n    :parameters (?entity - entity ?resource - resource)\n    :precondition (and\n                   (not (stocked ?entity))\n                   (not (stocked ?resource)))\n    :effect (and\n             (stocked ?entity)\n             (stocked ?resource)))\n]\n```"
]