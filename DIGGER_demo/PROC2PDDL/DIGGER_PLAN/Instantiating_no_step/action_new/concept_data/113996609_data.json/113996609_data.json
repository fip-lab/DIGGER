[
    "(:action find ; Find a resource and update its status\n  :parameters (?p - person ?item - object ?location - place)\n  :precondition (and \n                  (at ?p ?location)\n                  (or \n                    (at ?item river)\n                    (at ?item base_of_leaves)\n                    (at ?item cave)\n                    (at ?item hollowed_tree)\n                    (at ?item undercut_bank)\n                    (not (location ?item present))\n                    (has_supplies ?p ?item)\n                    (not (rationed ?item))))\n  :effect (and \n            (found ?p ?item)\n            (location ?item present)\n            (rationed ?item)\n            (increased_duration ?item))",
    "(:action collect\n  ; Collect an item/resource and update the state of the container\n  :parameters (?p - person ?item - object ?c - container)\n  :precondition (and\n                  (found ?p ?item)\n                  (empty ?c))\n  :effect (and\n            (full ?c)\n            (not (empty ?c))",
    "(:action prepare\n  ; Prepare an item/resource by transforming its state\n  :parameters (?p - person ?item - object ?c - container)\n  :precondition (and\n                  (found ?p ?item)\n                  (not (boiled ?item))\n                  (full ?c))\n  :effect (boiled ?item)\n)",
    "(:action boil ; Boil a resource by preparing and heating\n:parameters (?p - person ?resource - resource ?container - container ?heat-source - resource)\n:precondition (and\n                (full ?container)\n                (cold ?resource)\n                (not (heated ?resource))\n                (wood_location ?heat-source present)\n                (fire_pit_arranged ?p)\n                (wood_moisture ?heat-source dry)\n                (lit ?heat-source)\n              )\n:effect (and\n          (hot ?resource)\n          (heated ?resource)\n          (fire_started ?p)\n          (not (cold ?resource))",
    "(:action filter\n    ; Filter a resource and update its state to clean or filtered\n    :parameters (?entity - object ?resource - object ?tool - object)\n    :precondition (and\n                    (or (hot ?resource) (heated ?resource) (caught ?entity))\n                    (or (has_filter ?entity ?tool) (not (cleaned ?entity)))\n                   )\n    :effect (and\n              (or (filtered ?resource) (cleaned ?entity))",
    "(:action hunt\n  ; Hunt for resources and update the status of resource acquisition\n  :parameters (?agent - entity ?location - place ?resource - resource)\n  :precondition (and\n    (at ?agent ?location)\n    (or\n      (and (not (acquired ?agent ?resource)) (has_resource ?location ?resource))\n      (and (not (acquired ?agent ?resource)) (not (acquired ?resource)))\n    )\n  )\n  :effect (and\n    (acquired ?agent ?resource)\n    (decreased_availability ?location ?resource)\n  )",
    "(:action cook\n    :parameters (?p - person ?item - object ?resource - resource)\n    :precondition (and\n                    (available ?p)\n                    (not (prepared ?item))\n                    (resource_ready ?resource)\n                   )\n    :effect (prepared ?item)\n)"
]