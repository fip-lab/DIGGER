{
    "approach": [
        "(:action approach_ship\n    :parameters (?p - person ?d - dock ?s - ship)\n    :precondition (and\n                    (at ?p ?d)\n                    (at ?s ?d)\n                    (dock-clear ?d))\n    :effect (and\n              (at ?p ?s)\n              (not (at ?p ?d))\n              (not (dock-clear ?d))\n             )\n)\n\n"
    ],
    "board": [
        "(:action board_ship\n    :parameters (?p - person ?s - ship)\n    :precondition (and\n                    (at ?p ?s)\n                    (ship-docked ?s))\n    :effect (and\n              (on-board ?p ?s)\n              (not (at ?p ?s))\n             )\n)\n\n"
    ],
    "hold": [
        "(:action hold_rails\n    :parameters (?p - person ?s - ship)\n    :precondition (on-board ?p ?s)\n    :effect (holding-rail ?p)\n)\n\n"
    ],
    "secure": [
        "(:action secure_legs\n    :parameters (?p - person ?s - ship)\n    :precondition (on-board ?p ?s)\n    :effect (legs-secured ?p)\n)\n\n"
    ],
    "stabilize": [
        "(:action stabilize_ship\n    :parameters (?p - person ?s - ship)\n    :precondition (and\n                    (legs-secured ?p)\n                    (holding-rail ?p)\n                    (on-board ?p ?s))\n    :effect (and\n              (ship-stable ?s)\n              (centered ?p)\n              (crouched ?p)\n             )\n)\n\n"
    ],
    "use": [
        "(:action use_spear_gun\n    :parameters (?w - weapon ?a - agent)\n    :precondition (and\n                    (weapon_location ?w in_vehicle)\n                    (not (knows_where_to_aim ?a))\n                   )\n    :effect (and\n             (weapon_location ?w on_ground)\n             (knows_where_to_aim ?a)\n            )\n)\n```\n\n#### Action 2: Hit_Shark\n```lisp\n"
    ],
    "hit": [
        "(:action hit_shark\n    :parameters (?a - agent ?sh - shark)\n    :precondition (and\n                    (not (shark_retreats ?sh))\n                    (knows_where_to_aim ?a)\n                   )\n    :effect (and\n             (shark_retreats ?sh)\n             (not (shark_attacks ?sh))\n            )\n)\n```\n\n#### Action 3: Monitor_Shark\n```lisp\n"
    ],
    "monitor": [
        "(:action monitor_shark\n    :parameters (?a - agent ?sh - shark)\n    :precondition (and\n                    (not (knows_shark_location ?a))\n                   )\n    :effect (knows_shark_location ?a)\n)\n```\n\n#### Action 4: Avoid_Blocking_Shark\n```lisp\n",
        "(:action watch_shark\n    :parameters (?a - agent ?s - shark)\n    :precondition (and\n                    (not (knows_shark_location ?a))\n                   )\n    :effect (knows_shark_location ?a)\n)\n\n;; Prepare defenses based on the shark's observed behavior\n"
    ],
    "avoid": [
        "(:action avoid_blocking_shark\n    :parameters (?a - agent ?sh - shark)\n    :precondition (and\n                    (blocking_shark_path ?a ?sh)\n                   )\n    :effect (not (blocking_shark_path ?a ?sh))\n)\n```\n\n### Explanation\n\n- **Use_Spear_Gun**: This action involves using a spear gun. The precondition checks if the weapon is still in the vehicle and if the agent doesn't know where to aim. The effect updates the weapon's location to on the ground and the agent knows where to aim.\n\n- **Hit_Shark**: This action involves hitting the shark. The precondition ensures the shark hasn't retreated and the agent knows where to aim. The effect causes the shark to retreat and stops its attack.\n\n- **Monitor_Shark**: This action involves monitoring the shark's movements. The precondition checks if the agent doesn't know the shark's location, and the effect updates the agent's knowledge of the shark's location.\n\n- **Avoid_Blocking_Shark**: This action involves avoiding blocking the shark's path. The precondition checks if the agent is blocking the shark's path, and the effect is to remove the blockage.\n\nThese actions are derived from the task descriptions and entity states, capturing the necessary steps to achieve the \"ultimate_win\" task."
    ],
    "prepare": [
        "(:action prepare_defenses\n    :parameters (?a - agent ?s - shark)\n    :precondition (and\n                    (knows_shark_location ?a)\n                    (not (defenses_prepared ?a))\n                   )\n    :effect (defenses_prepared ?a)\n)\n\n;; Engage in defensive maneuvers to protect the position\n"
    ],
    "engage": [
        "(:action engage_defensive_maneuvers\n    :parameters (?a - agent ?s - shark)\n    :precondition (and\n                    (defenses_prepared ?a)\n                    (knows_shark_attack_method ?a)\n                   )\n    :effect (defending_position ?a)\n)\n\n;; Maintain vigilance and adapt to the shark's changing tactics\n"
    ],
    "maintain": [
        "(:action maintain_vigilance\n    :parameters (?a - agent ?s - shark)\n    :precondition (and\n                    (defending_position ?a)\n                   )\n    :effect (and\n             (knows_shark_attack_method ?a)\n             (defending_position ?a)\n            )\n)\n```\n\nThese actions cover the steps for the \"defend_position\" task, ensuring that the agent continuously monitors the shark, prepares defenses, engages in defensive maneuvers, and adapts to any changes in the shark's behavior."
    ],
    "others": [
        "(:action others_keep_ship_steady\n    :parameters (?op - person ?s - ship)\n    :precondition (ship-stable ?s)\n    :effect (on-board ?op ?s)\n)\n```\n\nThese actions take into account the necessary steps and descriptions for boarding a ship, ensuring the ship's stability, and the safety of the passengers."
    ]
}