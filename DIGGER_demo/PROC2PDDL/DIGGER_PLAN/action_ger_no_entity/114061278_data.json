[
    "Certainly! Below are the PDDL actions based on the provided task and steps:\n\nTask: fill_the_glass\n\nSteps:\n- drain npc rack\n- poke coconut screwdriver\n\nDescriptions:\n- Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n\nPDDL Actions:\n\n```lisp\n(:action poke-coconut\n    :parameters (?coconut - coconut ?screwdriver - tool ?mallet - tool)\n    :precondition (and (at ?coconut kitchen) (at ?screwdriver kitchen) (at ?mallet kitchen))\n    :effect (and (has-hole ?coconut) (not (at ?screwdriver kitchen)) (not (at ?mallet kitchen)) (at ?screwdriver ?coconut) (at ?mallet ?coconut))\n)\n\n(:action drain-coconut\n    :parameters (?coconut - coconut ?glass - container)\n    :precondition (and (has-hole ?coconut) (at ?coconut kitchen) (at ?glass kitchen))\n    :effect (and (in ?liquid ?glass) (not (in ?liquid ?coconut)) (at ?coconut upside-down))\n)\n```\n\nExplanation:\n\n1. **poke-coconut**: This action represents poking a hole in the coconut using a screwdriver and a mallet.\n   - **Parameters**: `?coconut` (coconut), `?screwdriver` (tool), `?mallet` (tool)\n   - **Preconditions**: The coconut, screwdriver, and mallet are all in the kitchen.\n   - **Effects**: The coconut now has a hole, and the screwdriver and mallet are no longer in the kitchen but are associated with the coconut.\n\n2. **drain-coconut**: This action represents draining the coconut liquid into a glass.\n   - **Parameters**: `?coconut` (coconut), `?glass` (container)\n   - **Preconditions**: The coconut has a hole and both the coconut and glass are in the kitchen.\n   - **Effects**: The liquid from the coconut is now in the glass, and the coconut is positioned upside-down.\n\nThese actions capture the logic and intent of the steps provided in the task description.",
    "Sure, let's generate the PDDL actions based on the given task and steps.\n\nTask: remove_fibre_from_coconut_meat\n\nSteps:\n1. drain_coconut npc rack\n2. poke_coconut npc screwdriver\n3. break_coconut npc\n4. break_coconut_wrapped towel\n\nDescriptions:\n- Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n- Whack the coconut with a hammer, or bash it against a hard surface. With the coconut still wrapped in the towel, use a hammer or a mallet to repeatedly and forcefully whack the coconut. Turn the coconut as you hammer it, in order to strike it from multiple angles. Hammer it until you feel it break open beneath the towel.\n- Alternatively, strike the coconut against a concrete surface. If you don\u2019t have a hammer or mallet, you can use a solid surface like a porch or possibly a concrete countertop. Try to strike the coconut\u2019s equator against the corner of this surface, using it as a makeshift wedge. Repeatedly strike the coconut all around its equator until the coconut breaks apart.\n\nPDDL Actions:\n```pddl\n(:action drain_coconut\n    :parameters (?c - coconut ?r - rack)\n    :precondition (and (has_liquid ?c) (on_rack ?c ?r))\n    :effect (and (not (has_liquid ?c)) (drained ?c))\n)\n\n(:action poke_coconut\n    :parameters (?c - coconut ?s - screwdriver)\n    :precondition (and (drained ?c) (has_eye ?c) (has_tool ?s))\n    :effect (and (hole_in_eye ?c) (not (has_eye ?c)))\n)\n\n(:action break_coconut\n    :parameters (?c - coconut)\n    :precondition (and (hole_in_eye ?c) (wrapped ?c))\n    :effect (and (broken ?c) (not (wrapped ?c)))\n)\n\n(:action break_coconut_wrapped\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (hole_in_eye ?c) (wrapped ?c ?t))\n    :effect (and (broken ?c) (not (wrapped ?c ?t)))\n)\n```\n\nNote: The steps and actions have been slightly modified to ensure they are relevant and logically consistent with the task of removing fiber from coconut meat. The provided steps and descriptions have been used to generate the most appropriate PDDL actions.",
    "Sure, here are the PDDL actions for the task \"free_the_meat_from_coconut\":\n\n### PDDL Actions:\n\n```lisp\n(:action break_coconut\n    :parameters (?npc - agent ?coconut - object)\n    :precondition (and (at ?npc kitchen) (at ?coconut kitchen) (intact ?coconut))\n    :effect (and (broken ?coconut) (not (intact ?coconut)))\n)\n\n(:action drain_coconut\n    :parameters (?npc - agent ?coconut - object ?rack - object ?glass - container)\n    :precondition (and (at ?npc kitchen) (at ?coconut kitchen) (broken ?coconut) (at ?rack kitchen) (at ?glass kitchen))\n    :effect (and (drained ?coconut) (not (has_liquid ?coconut)) (in liquid ?glass))\n)\n\n(:action poke_coconut\n    :parameters (?npc - agent ?coconut - object ?screwdriver - tool)\n    :precondition (and (at ?npc kitchen) (at ?coconut kitchen) (at ?screwdriver kitchen) (intact ?coconut))\n    :effect (and (hole ?coconut) (not (intact ?coconut)))\n)\n\n(:action wrap_coconut\n    :parameters (?npc - agent ?coconut - object ?towel - object)\n    :precondition (and (at ?npc kitchen) (at ?coconut kitchen) (at ?towel kitchen) (broken ?coconut))\n    :effect (and (wrapped ?coconut ?towel))\n)\n\n(:action break_wrapped_coconut\n    :parameters (?npc - agent ?coconut - object ?towel - object)\n    :precondition (and (at ?npc kitchen) (wrapped ?coconut ?towel))\n    :effect (and (meat_exposed ?coconut) (not (wrapped ?coconut ?towel)))\n)\n```\n\n### Descriptions:\n\n1. **break_coconut**:\n    - This action represents the NPC breaking the coconut, which is a necessary step to access the meat inside.\n    - Preconditions: The NPC and the coconut must be in the kitchen, and the coconut must be intact.\n    - Effects: The coconut is broken.\n\n2. **drain_coconut**:\n    - This action involves draining the coconut by turning it upside down over a glass and allowing the liquid to drain out.\n    - Preconditions: The NPC, coconut, rack, and glass must be in the kitchen, and the coconut must be broken.\n    - Effects: The coconut is drained, and the liquid is now in the glass.\n\n3. **poke_coconut**:\n    - This action involves poking a hole in the coconut using a screwdriver to facilitate draining.\n    - Preconditions: The NPC, coconut, and screwdriver must be in the kitchen, and the coconut must be intact.\n    - Effects: A hole is made in the coconut.\n\n4. **wrap_coconut**:\n    - This action involves wrapping the broken coconut in a towel to cool it down.\n    - Preconditions: The NPC, coconut, and towel must be in the kitchen, and the coconut must be broken.\n    - Effects: The coconut is wrapped in a towel.\n\n5. **break_wrapped_coconut**:\n    - This action represents the NPC breaking the wrapped coconut to expose the meat inside.\n    - Preconditions: The NPC and the wrapped coconut must be in the kitchen.\n    - Effects: The coconut meat is exposed, and the coconut is no longer wrapped.\n\nThese actions accurately capture the steps involved in freeing the meat from a coconut based on the provided descriptions.",
    "Here are the PDDL actions for the task \"wrap_the_coconut_in_towel\" based on the provided steps and descriptions:\n\n### PDDL Actions:\n\n```lisp\n(:action drain_coconut\n    :parameters (?c - coconut ?g - glass)\n    :precondition (and (full ?c) (empty ?g) (upside_down ?c))\n    :effect (and (drained ?c) (full ?g) (not (full ?c)))\n)\n\n(:action poke_coconut\n    :parameters (?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and (drained ?c) (available ?s) (available ?m))\n    :effect (and (hole_in_eye ?c) (not (intact ?c)))\n)\n\n(:action wrap_coconut_in_towel\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (hole_in_eye ?c) (available ?t))\n    :effect (and (wrapped ?c ?t) (not (unwrapped ?c)))\n)\n\n(:action break_coconut\n    :parameters (?c - coconut ?t - towel)\n    :precondition (and (wrapped ?c ?t) (cooled ?c))\n    :effect (and (broken ?c) (not (whole ?c)))\n)\n```\n\n### Explanation:\n\n1. **drain_coconut**: This action involves turning the coconut upside down over a glass to drain its liquid. Preconditions include the coconut being full and the glass being empty. The effect is the coconut becomes drained, and the glass becomes full.\n\n2. **poke_coconut**: This action involves using a screwdriver and mallet to poke a hole in the coconut's \"eye.\" Preconditions are that the coconut is drained and the tools are available. The effect is creating a hole in the coconut.\n\n3. **wrap_coconut_in_towel**: This action involves wrapping the coconut in a towel to cool it down. Preconditions include having a hole in the coconut and an available towel. The effect is that the coconut is wrapped.\n\n4. **break_coconut**: This action involves breaking the coconut while it is wrapped in a towel. Preconditions include the coconut being wrapped and cooled. The effect is that the coconut becomes broken.",
    "To generate the PDDL actions for the task \"poke_eyes,\" we need to first understand the steps and descriptions provided. The task involves poking a hole in the \"eye\" of a coconut using a screwdriver and a mallet. Let's translate this into PDDL actions:\n\n### Task: poke_eyes\n\n### Steps:\n- poke coconut screwdriver\n\n### Descriptions:\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n\n### PDDL Actions:\n\n```pddl\n;; \u5b9a\u4f4d\u87ba\u4e1d\u5200\u5728\u6930\u5b50\u4e0a\u7684\u52a8\u4f5c\n(:action position-screwdriver\n    :parameters (?p - person ?s - screwdriver ?c - coconut)\n    :precondition (and\n                    (not (screwdriver_positioned ?s ?c))\n                    (coconut_has_eyes ?c)\n                   )\n    :effect (screwdriver_positioned ?s ?c)\n)\n\n;; \u4f7f\u7528\u9524\u5b50\u5728\u6930\u5b50\u4e0a\u6253\u5b54\u7684\u52a8\u4f5c\n(:action bore-hole\n    :parameters (?p - person ?s - screwdriver ?m - mallet ?c - coconut)\n    :precondition (and\n                    (screwdriver_positioned ?s ?c)\n                    (not (coconut_eye_poked ?c))\n                   )\n    :effect (and\n              (coconut_eye_poked ?c)\n              (screwdriver_inserted ?s ?c)\n            )\n)\n\n;; \u79fb\u9664\u87ba\u4e1d\u5200\u4ee5\u6269\u5927\u5b54\u7684\u52a8\u4f5c\n(:action remove-screwdriver\n    :parameters (?p - person ?s - screwdriver ?c - coconut)\n    :precondition (and\n                    (screwdriver_inserted ?s ?c)\n                    (coconut_eye_poked ?c)\n                   )\n    :effect (and\n              (not (screwdriver_inserted ?s ?c))\n              (coconut_eye_widened ?c)\n            )\n)\n```\n\n### Explanation:\n1. **position-screwdriver**: This action involves positioning the screwdriver on one of the coconut's eyes. The precondition checks that the screwdriver is not already positioned and that the coconut has eyes. The effect sets the screwdriver as positioned on the coconut.\n\n2. **bore-hole**: This action uses the mallet to bore a hole through the coconut's eye using the positioned screwdriver. The precondition requires the screwdriver to be positioned and the coconut eye not yet poked. The effect indicates the coconut eye is poked and the screwdriver is inserted.\n\n3. **remove-screwdriver**: This action involves wiggling out the screwdriver to widen the hole. The precondition checks that the screwdriver is inserted and the coconut eye is poked. The effect shows the screwdriver is removed, and the hole is widened.\n\nThese actions capture the sequence and logic described in the task and description.",
    "Sure, let's generate the PDDL actions based on the provided task and steps.\n\nTask: hit_coconut_with_mallet\n\nSteps:\n1. drain npc rack\n2. poke coconut screwdriver\n3. break coconut_wrapped towel\n\nDescriptions:\n- Turn the coconut upside down over a glass and allow it to drain. Let the coconut sit for several minutes or until all of the liquid drains out. You may need to shake the coconut a few times to get the last bit of water out of it.\n- Poke a hole in the \u201ceye\u201d of the coconut with a screwdriver and a mallet. Position the pointed end of a screwdriver on one of the 3 holes or \u201ceyes\u201d at the top of the coconut. Then, use a mallet or hammer to carefully but forcefully bore a hole through an eye. Once the screwdriver gives (indicating it\u2019s bored through the shell), remove it by wiggling it out, widening the new hole in the process.\n- Remove the coconut and wrap it in a towel to cool. Use oven mitts to retrieve the coconut from the oven or microwave, and allow it to cool for about 5 minutes while wrapped in a towel. Doing this ensures you don\u2019t have hot coconut bits flying everywhere when you go to smash it in the next step.\n\nPDDL Actions:\n\n```lisp\n;; Drain the coconut\n(:action drain-coconut\n    :parameters (?npc - person ?c - coconut ?r - rack)\n    :precondition (and\n                    (at ?c ?r)\n                    (not (drained ?c))\n                  )\n    :effect (drained ?c)\n)\n\n;; Poke a hole in the coconut\n(:action poke-coconut\n    :parameters (?npc - person ?c - coconut ?s - screwdriver ?m - mallet)\n    :precondition (and\n                    (drained ?c)\n                    (not (hole_poked ?c))\n                  )\n    :effect (hole_poked ?c)\n)\n\n;; Wrap the coconut in a towel\n(:action wrap-coconut-towel\n    :parameters (?npc - person ?c - coconut ?t - towel)\n    :precondition (and\n                    (hole_poked ?c)\n                    (not (wrapped ?c))\n                  )\n    :effect (wrapped ?c)\n)\n\n;; Break the wrapped coconut with a mallet\n(:action break-coconut\n    :parameters (?npc - person ?c - coconut ?m - mallet ?t - towel)\n    :precondition (and\n                    (wrapped ?c)\n                    (not (broken ?c))\n                  )\n    :effect (broken ?c)\n)\n```\n\nThese actions should capture the steps and logic necessary to complete the task of hitting a coconut with a mallet."
]